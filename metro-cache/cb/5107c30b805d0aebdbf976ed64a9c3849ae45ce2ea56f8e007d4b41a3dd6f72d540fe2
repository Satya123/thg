{"dependencies":[{"name":"./_curry2","isAsync":false},{"name":"./_reduced","isAsync":false},{"name":"./_xfBase","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], './_curry2');\n\n  var _reduced = _$$_REQUIRE(_dependencyMap[1], './_reduced');\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], './_xfBase');\n\n  module.exports = function () {\n    function XFind(f, xf) {\n      this.xf = xf;\n      this.f = f;\n      this.found = false;\n    }\n\n    XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n    XFind.prototype['@@transducer/result'] = function (result) {\n      if (!this.found) {\n        result = this.xf['@@transducer/step'](result, void 0);\n      }\n\n      return this.xf['@@transducer/result'](result);\n    };\n\n    XFind.prototype['@@transducer/step'] = function (result, input) {\n      if (this.f(input)) {\n        this.found = true;\n        result = _reduced(this.xf['@@transducer/step'](result, input));\n      }\n\n      return result;\n    };\n\n    return _curry2(function _xfind(f, xf) {\n      return new XFind(f, xf);\n    });\n  }();\n});","map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,16,1,14,"require"],[2,47,1,22],[2,58,1,14],[2,59,1,0],[4,0,2,0],[4,6,2,4,"_reduced"],[4,17,2,15,"require"],[4,48,2,23],[4,60,2,15],[4,61,2,0],[6,0,3,0],[6,6,3,4,"_xfBase"],[6,16,3,14,"require"],[6,47,3,22],[6,58,3,14],[6,59,3,0],[8,0,6,0,"module"],[8,9,6,7,"exports"],[8,16,6,0],[8,19,6,18],[8,31,6,29],[9,0,7,2],[9,13,7,11,"XFind"],[9,18,7,2],[9,19,7,17,"f"],[9,20,7,2],[9,22,7,20,"xf"],[9,24,7,2],[9,26,7,24],[10,0,8,4],[10,11,8,9,"xf"],[10,13,8,4],[10,16,8,14,"xf"],[10,18,8,4],[11,0,9,4],[11,11,9,9,"f"],[11,12,9,4],[11,15,9,13,"f"],[11,16,9,4],[12,0,10,4],[12,11,10,9,"found"],[12,16,10,4],[12,19,10,17],[12,24,10,4],[13,0,11,3],[15,0,12,2,"XFind"],[15,10,12,8,"prototype"],[15,19,12,2],[15,20,12,18],[15,39,12,2],[15,43,12,41,"_xfBase"],[15,51,12,49,"init"],[15,55,12,2],[17,0,13,2,"XFind"],[17,10,13,8,"prototype"],[17,19,13,2],[17,20,13,18],[17,41,13,2],[17,45,13,43],[17,55,13,52,"result"],[17,61,13,43],[17,63,13,60],[18,0,14,4],[18,10,14,8],[18,11,14,9],[18,16,14,14,"found"],[18,21,14,4],[18,23,14,21],[19,0,15,6,"result"],[19,17,15,15],[19,22,15,20,"xf"],[19,24,15,15],[19,25,15,23],[19,44,15,15],[19,46,15,44,"result"],[19,52,15,15],[19,54,15,52],[19,59,15,57],[19,60,15,15],[19,61,15,6],[20,0,16,5],[22,0,17,4],[22,13,17,11],[22,18,17,16,"xf"],[22,20,17,11],[22,21,17,19],[22,42,17,11],[22,44,17,42,"result"],[22,50,17,11],[22,51,17,4],[23,0,18,3],[23,5,13,2],[25,0,19,2,"XFind"],[25,10,19,8,"prototype"],[25,19,19,2],[25,20,19,18],[25,39,19,2],[25,43,19,41],[25,53,19,50,"result"],[25,59,19,41],[25,61,19,58,"input"],[25,66,19,41],[25,68,19,65],[26,0,20,4],[26,10,20,8],[26,15,20,13,"f"],[26,16,20,8],[26,17,20,15,"input"],[26,22,20,8],[26,23,20,4],[26,25,20,23],[27,0,21,6],[27,13,21,11,"found"],[27,18,21,6],[27,21,21,19],[27,25,21,6],[28,0,22,6,"result"],[28,17,22,15,"_reduced"],[28,26,22,24],[28,31,22,29,"xf"],[28,33,22,24],[28,34,22,32],[28,53,22,24],[28,55,22,53,"result"],[28,61,22,24],[28,63,22,61,"input"],[28,68,22,24],[28,69,22,15],[28,70,22,6],[29,0,23,5],[31,0,24,4],[31,13,24,11,"result"],[31,19,24,4],[32,0,25,3],[32,5,19,2],[34,0,27,2],[34,11,27,9,"_curry2"],[34,19,27,17],[34,28,27,26,"_xfind"],[34,34,27,17],[34,35,27,33,"f"],[34,36,27,17],[34,38,27,36,"xf"],[34,40,27,17],[34,42,27,40],[35,0,27,42],[35,13,27,49],[35,17,27,53,"XFind"],[35,22,27,49],[35,23,27,59,"f"],[35,24,27,49],[35,26,27,62,"xf"],[35,28,27,49],[35,29,27,42],[36,0,27,68],[36,5,27,9],[36,6,27,2],[37,0,28,1],[37,3,6,18],[37,5,6,0]]},"type":"js/module"}]}