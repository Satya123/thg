{"dependencies":[{"name":"./flattenStyle","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createAnimation;\n\n  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./flattenStyle\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function notNull(value) {\n    return value !== null;\n  }\n\n  function parsePosition(value) {\n    if (value === 'from') {\n      return 0;\n    } else if (value === 'to') {\n      return 1;\n    }\n\n    var parsed = parseFloat(value, 10);\n\n    if (isNaN(parsed) || parsed < 0 || parsed > 1) {\n      return null;\n    }\n\n    return parsed;\n  }\n\n  var cache = {};\n\n  function createAnimation(definition) {\n    var cacheKey = JSON.stringify(definition);\n\n    if (cache[cacheKey]) {\n      return cache[cacheKey];\n    }\n\n    var positions = Object.keys(definition).map(parsePosition).filter(notNull);\n    positions.sort(compareNumbers);\n\n    if (positions.length < 2) {\n      throw new Error('Animation definitions must have at least two values.');\n    }\n\n    var compiled = {};\n\n    if (definition.easing) {\n      compiled.easing = definition.easing;\n    }\n\n    if (definition.style) {\n      compiled.style = definition.style;\n    }\n\n    var _loop = function _loop(i) {\n      var position = positions[i];\n      var keyframe = definition[position];\n\n      if (!keyframe) {\n        if (position === 0) {\n          keyframe = definition.from;\n        } else if (position === 1) {\n          keyframe = definition.to;\n        }\n      }\n\n      if (!keyframe) {\n        throw new Error('Missing animation keyframe, this should not happen');\n      }\n\n      keyframe = (0, _flattenStyle.default)(keyframe);\n      Object.keys(keyframe).forEach(function (key) {\n        if (!(key in compiled)) {\n          compiled[key] = {\n            inputRange: [],\n            outputRange: []\n          };\n        }\n\n        compiled[key].inputRange.push(position);\n        compiled[key].outputRange.push(keyframe[key]);\n      });\n    };\n\n    for (var i = 0; i < positions.length; i += 1) {\n      _loop(i);\n    }\n\n    cache[cacheKey] = compiled;\n    return compiled;\n  }\n});","map":[[7,0,1,0],[11,0,3,0],[11,11,3,9,"compareNumbers"],[11,25,3,0],[11,26,3,24,"a"],[11,27,3,0],[11,29,3,27,"b"],[11,30,3,0],[11,32,3,30],[12,0,4,2],[12,11,4,9,"a"],[12,15,4,13,"b"],[12,16,4,2],[13,0,5,1],[15,0,7,0],[15,11,7,9,"notNull"],[15,18,7,0],[15,19,7,17,"value"],[15,24,7,0],[15,26,7,24],[16,0,8,2],[16,11,8,9,"value"],[16,21,8,19],[16,25,8,2],[17,0,9,1],[19,0,11,0],[19,11,11,9,"parsePosition"],[19,24,11,0],[19,25,11,23,"value"],[19,30,11,0],[19,32,11,30],[20,0,12,2],[20,8,12,6,"value"],[20,18,12,16],[20,24,12,2],[20,26,12,24],[21,0,13,4],[21,13,13,11],[21,14,13,4],[22,0,14,3],[22,5,12,2],[22,11,14,9],[22,15,14,13,"value"],[22,25,14,23],[22,29,14,9],[22,31,14,29],[23,0,15,4],[23,13,15,11],[23,14,15,4],[24,0,16,3],[26,0,17,2],[26,8,17,8,"parsed"],[26,17,17,17,"parseFloat"],[26,28,17,28,"value"],[26,33,17,17],[26,35,17,35],[26,37,17,17],[26,38,17,2],[28,0,18,2],[28,8,18,6,"isNaN"],[28,14,18,12,"parsed"],[28,20,18,6],[28,25,18,23,"parsed"],[28,34,18,32],[28,35,18,6],[28,39,18,37,"parsed"],[28,48,18,46],[28,49,18,2],[28,51,18,49],[29,0,19,4],[29,13,19,11],[29,17,19,4],[30,0,20,3],[32,0,21,2],[32,11,21,9,"parsed"],[32,17,21,2],[33,0,22,1],[35,0,24,0],[35,6,24,6,"cache"],[35,14,24,14],[35,16,24,0],[37,0,26,15],[37,11,26,24,"createAnimation"],[37,26,26,15],[37,27,26,40,"definition"],[37,37,26,15],[37,39,26,52],[38,0,27,2],[38,8,27,8,"cacheKey"],[38,19,27,19,"JSON"],[38,24,27,24,"stringify"],[38,33,27,19],[38,34,27,34,"definition"],[38,44,27,19],[38,45,27,2],[40,0,28,2],[40,8,28,6,"cache"],[40,14,28,12,"cacheKey"],[40,22,28,6],[40,23,28,2],[40,25,28,23],[41,0,29,4],[41,13,29,11,"cache"],[41,19,29,17,"cacheKey"],[41,27,29,11],[41,28,29,4],[42,0,30,3],[44,0,32,2],[44,8,32,8,"positions"],[44,20,32,20,"Object"],[44,27,32,27,"keys"],[44,31,32,20],[44,32,32,32,"definition"],[44,42,32,20],[44,44,33,5,"map"],[44,47,32,20],[44,48,33,9,"parsePosition"],[44,61,32,20],[44,63,34,5,"filter"],[44,69,32,20],[44,70,34,12,"notNull"],[44,77,32,20],[44,78,32,2],[45,0,35,2,"positions"],[45,14,35,12,"sort"],[45,18,35,2],[45,19,35,17,"compareNumbers"],[45,33,35,2],[47,0,37,2],[47,8,37,6,"positions"],[47,18,37,16,"length"],[47,24,37,6],[47,27,37,25],[47,28,37,2],[47,30,37,28],[48,0,38,4],[48,12,38,10],[48,16,38,14,"Error"],[48,21,38,10],[48,22,38,20],[48,76,38,10],[48,77,38,4],[49,0,39,3],[51,0,41,2],[51,8,41,8,"compiled"],[51,19,41,19],[51,21,41,2],[53,0,42,2],[53,8,42,6,"definition"],[53,19,42,17,"easing"],[53,25,42,2],[53,27,42,25],[54,0,43,4,"compiled"],[54,15,43,13,"easing"],[54,21,43,4],[54,24,43,22,"definition"],[54,35,43,33,"easing"],[54,41,43,4],[55,0,44,3],[57,0,45,2],[57,8,45,6,"definition"],[57,19,45,17,"style"],[57,24,45,2],[57,26,45,24],[58,0,46,4,"compiled"],[58,15,46,13,"style"],[58,20,46,4],[58,23,46,21,"definition"],[58,34,46,32,"style"],[58,39,46,4],[59,0,47,3],[61,0,26,52],[61,31,49,11,"i"],[61,32,26,52],[62,0,50,4],[62,10,50,10,"position"],[62,21,50,21,"positions"],[62,31,50,31,"i"],[62,32,50,21],[62,33,50,4],[63,0,51,4],[63,10,51,8,"keyframe"],[63,21,51,19,"definition"],[63,32,51,30,"position"],[63,40,51,19],[63,41,51,4],[65,0,52,4],[65,10,52,8],[65,11,52,9,"keyframe"],[65,19,52,4],[65,21,52,19],[66,0,53,6],[66,12,53,10,"position"],[66,25,53,23],[66,26,53,6],[66,28,53,26],[67,0,54,8,"keyframe"],[67,21,54,19,"definition"],[67,32,54,30,"from"],[67,36,54,8],[68,0,55,7],[68,9,53,6],[68,15,55,13],[68,19,55,17,"position"],[68,32,55,30],[68,33,55,13],[68,35,55,33],[69,0,56,8,"keyframe"],[69,21,56,19,"definition"],[69,32,56,30,"to"],[69,34,56,8],[70,0,57,7],[71,0,58,5],[73,0,59,4],[73,10,59,8],[73,11,59,9,"keyframe"],[73,19,59,4],[73,21,59,19],[74,0,60,6],[74,14,60,12],[74,18,60,16,"Error"],[74,23,60,12],[74,24,60,22],[74,76,60,12],[74,77,60,6],[75,0,61,5],[77,0,63,4,"keyframe"],[77,17,63,15],[77,44,63,28,"keyframe"],[77,52,63,15],[77,53,63,4],[78,0,64,4,"Object"],[78,13,64,11,"keys"],[78,17,64,4],[78,18,64,16,"keyframe"],[78,26,64,4],[78,28,64,26,"forEach"],[78,35,64,4],[78,36,64,34],[78,51,64,41],[79,0,65,6],[79,12,65,10],[79,14,65,12,"key"],[79,21,65,19,"compiled"],[79,29,65,10],[79,30,65,6],[79,32,65,30],[80,0,66,8,"compiled"],[80,19,66,17,"key"],[80,22,66,8],[80,26,66,24],[81,0,67,10,"inputRange"],[81,24,67,22],[81,26,66,24],[82,0,68,10,"outputRange"],[82,25,68,23],[83,0,66,24],[83,11,66,8],[84,0,70,7],[86,0,71,6,"compiled"],[86,17,71,15,"key"],[86,20,71,6],[86,22,71,20,"inputRange"],[86,32,71,6],[86,33,71,31,"push"],[86,37,71,6],[86,38,71,36,"position"],[86,46,71,6],[87,0,72,6,"compiled"],[87,17,72,15,"key"],[87,20,72,6],[87,22,72,20,"outputRange"],[87,33,72,6],[87,34,72,32,"push"],[87,38,72,6],[87,39,72,37,"keyframe"],[87,48,72,46,"key"],[87,51,72,37],[87,52,72,6],[88,0,73,5],[88,7,64,4],[89,0,26,52],[91,0,49,2],[91,9,49,7],[91,13,49,11,"i"],[91,17,49,15],[91,18,49,2],[91,20,49,18,"i"],[91,24,49,22,"positions"],[91,34,49,32,"length"],[91,40,49,2],[91,42,49,40,"i"],[91,47,49,45],[91,48,49,2],[91,50,49,48],[92,0,49,48],[92,12,49,11,"i"],[92,13,49,48],[93,0,74,3],[95,0,76,2,"cache"],[95,10,76,8,"cacheKey"],[95,18,76,2],[95,22,76,20,"compiled"],[95,30,76,2],[96,0,78,2],[96,11,78,9,"compiled"],[96,19,78,2],[97,0,79,1]]},"type":"js/module"}]}