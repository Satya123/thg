{"dependencies":[{"name":"./_arrayFromIterator","isAsync":false},{"name":"./_functionName","isAsync":false},{"name":"./_has","isAsync":false},{"name":"../identical","isAsync":false},{"name":"../keys","isAsync":false},{"name":"../type","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var _arrayFromIterator = _$$_REQUIRE(_dependencyMap[0], './_arrayFromIterator');\n\n  var _functionName = _$$_REQUIRE(_dependencyMap[1], './_functionName');\n\n  var _has = _$$_REQUIRE(_dependencyMap[2], './_has');\n\n  var identical = _$$_REQUIRE(_dependencyMap[3], '../identical');\n\n  var keys = _$$_REQUIRE(_dependencyMap[4], '../keys');\n\n  var type = _$$_REQUIRE(_dependencyMap[5], '../type');\n\n  module.exports = function _equals(a, b, stackA, stackB) {\n    if (identical(a, b)) {\n      return true;\n    }\n\n    if (type(a) !== type(b)) {\n      return false;\n    }\n\n    if (a == null || b == null) {\n      return false;\n    }\n\n    if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n      return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n    }\n\n    switch (type(a)) {\n      case 'Arguments':\n      case 'Array':\n      case 'Object':\n        if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n          return a === b;\n        }\n\n        break;\n\n      case 'Boolean':\n      case 'Number':\n      case 'String':\n        if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n          return false;\n        }\n\n        break;\n\n      case 'Date':\n        if (!identical(a.valueOf(), b.valueOf())) {\n          return false;\n        }\n\n        break;\n\n      case 'Error':\n        return a.name === b.name && a.message === b.message;\n\n      case 'RegExp':\n        if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n          return false;\n        }\n\n        break;\n\n      case 'Map':\n      case 'Set':\n        if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n          return false;\n        }\n\n        break;\n\n      case 'Int8Array':\n      case 'Uint8Array':\n      case 'Uint8ClampedArray':\n      case 'Int16Array':\n      case 'Uint16Array':\n      case 'Int32Array':\n      case 'Uint32Array':\n      case 'Float32Array':\n      case 'Float64Array':\n        break;\n\n      case 'ArrayBuffer':\n        break;\n\n      default:\n        return false;\n    }\n\n    var keysA = keys(a);\n\n    if (keysA.length !== keys(b).length) {\n      return false;\n    }\n\n    var idx = stackA.length - 1;\n\n    while (idx >= 0) {\n      if (stackA[idx] === a) {\n        return stackB[idx] === b;\n      }\n\n      idx -= 1;\n    }\n\n    stackA.push(a);\n    stackB.push(b);\n    idx = keysA.length - 1;\n\n    while (idx >= 0) {\n      var key = keysA[idx];\n\n      if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n        return false;\n      }\n\n      idx -= 1;\n    }\n\n    stackA.pop();\n    stackB.pop();\n    return true;\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"_arrayFromIterator"],[2,27,1,25,"require"],[2,58,1,33],[2,80,1,25],[2,81,1,0],[4,0,2,0],[4,6,2,4,"_functionName"],[4,22,2,20,"require"],[4,53,2,28],[4,70,2,20],[4,71,2,0],[6,0,3,0],[6,6,3,4,"_has"],[6,13,3,11,"require"],[6,44,3,19],[6,52,3,11],[6,53,3,0],[8,0,4,0],[8,6,4,4,"identical"],[8,18,4,16,"require"],[8,49,4,24],[8,63,4,16],[8,64,4,0],[10,0,5,0],[10,6,5,4,"keys"],[10,13,5,11,"require"],[10,44,5,19],[10,53,5,11],[10,54,5,0],[12,0,6,0],[12,6,6,4,"type"],[12,13,6,11,"require"],[12,44,6,19],[12,53,6,11],[12,54,6,0],[14,0,9,0,"module"],[14,9,9,7,"exports"],[14,16,9,0],[14,19,9,17],[14,28,9,26,"_equals"],[14,35,9,17],[14,36,9,34,"a"],[14,37,9,17],[14,39,9,37,"b"],[14,40,9,17],[14,42,9,40,"stackA"],[14,48,9,17],[14,50,9,48,"stackB"],[14,56,9,17],[14,58,9,56],[15,0,10,2],[15,8,10,6,"identical"],[15,18,10,16,"a"],[15,19,10,6],[15,21,10,19,"b"],[15,22,10,6],[15,23,10,2],[15,25,10,23],[16,0,11,4],[16,13,11,11],[16,17,11,4],[17,0,12,3],[19,0,14,2],[19,8,14,6,"type"],[19,13,14,11,"a"],[19,14,14,6],[19,20,14,18,"type"],[19,25,14,23,"b"],[19,26,14,18],[19,27,14,2],[19,29,14,27],[20,0,15,4],[20,13,15,11],[20,18,15,4],[21,0,16,3],[23,0,18,2],[23,8,18,6,"a"],[23,13,18,11],[23,17,18,6],[23,21,18,19,"b"],[23,26,18,24],[23,30,18,2],[23,32,18,30],[24,0,19,4],[24,13,19,11],[24,18,19,4],[25,0,20,3],[27,0,22,2],[27,8,22,6],[27,15,22,13,"a"],[27,17,22,15,"equals"],[27,23,22,6],[27,28,22,26],[27,38,22,6],[27,42,22,40],[27,49,22,47,"b"],[27,51,22,49,"equals"],[27,57,22,40],[27,62,22,60],[27,72,22,2],[27,74,22,72],[28,0,23,4],[28,13,23,11],[28,20,23,18,"a"],[28,22,23,20,"equals"],[28,28,23,11],[28,33,23,31],[28,43,23,11],[28,47,23,45,"a"],[28,49,23,47,"equals"],[28,55,23,45],[28,56,23,54,"b"],[28,57,23,45],[28,58,23,11],[28,62,24,11],[28,69,24,18,"b"],[28,71,24,20,"equals"],[28,77,24,11],[28,82,24,31],[28,92,23,11],[28,96,24,45,"b"],[28,98,24,47,"equals"],[28,104,24,45],[28,105,24,54,"a"],[28,106,24,45],[28,107,23,4],[29,0,25,3],[31,0,27,2],[31,12,27,10,"type"],[31,17,27,15,"a"],[31,18,27,10],[31,19,27,2],[32,0,28,4],[32,11,28,9],[32,22,28,4],[33,0,29,4],[33,11,29,9],[33,18,29,4],[34,0,30,4],[34,11,30,9],[34,19,30,4],[35,0,31,6],[35,12,31,10],[35,19,31,17,"a"],[35,21,31,19,"constructor"],[35,32,31,10],[35,37,31,35],[35,47,31,10],[35,51,32,10,"_functionName"],[35,65,32,24,"a"],[35,67,32,26,"constructor"],[35,78,32,10],[35,84,32,43],[35,93,31,6],[35,95,32,54],[36,0,33,8],[36,17,33,15,"a"],[36,23,33,21,"b"],[36,24,33,8],[37,0,34,7],[39,0,35,6],[41,0,36,4],[41,11,36,9],[41,20,36,4],[42,0,37,4],[42,11,37,9],[42,19,37,4],[43,0,38,4],[43,11,38,9],[43,19,38,4],[44,0,39,6],[44,12,39,10],[44,14,39,12],[44,21,39,19,"a"],[44,22,39,12],[44,27,39,25],[44,34,39,32,"b"],[44,35,39,12],[44,39,39,37,"identical"],[44,49,39,47,"a"],[44,51,39,49,"valueOf"],[44,58,39,47],[44,60,39,37],[44,62,39,60,"b"],[44,64,39,62,"valueOf"],[44,71,39,60],[44,73,39,37],[44,74,39,10],[44,75,39,6],[44,77,39,75],[45,0,40,8],[45,17,40,15],[45,22,40,8],[46,0,41,7],[48,0,42,6],[50,0,43,4],[50,11,43,9],[50,17,43,4],[51,0,44,6],[51,12,44,10],[51,13,44,11,"identical"],[51,23,44,21,"a"],[51,25,44,23,"valueOf"],[51,32,44,21],[51,34,44,11],[51,36,44,34,"b"],[51,38,44,36,"valueOf"],[51,45,44,34],[51,47,44,11],[51,48,44,6],[51,50,44,48],[52,0,45,8],[52,17,45,15],[52,22,45,8],[53,0,46,7],[55,0,47,6],[57,0,48,4],[57,11,48,9],[57,18,48,4],[58,0,49,6],[58,15,49,13,"a"],[58,17,49,15,"name"],[58,21,49,13],[58,26,49,24,"b"],[58,28,49,26,"name"],[58,32,49,13],[58,36,49,34,"a"],[58,38,49,36,"message"],[58,45,49,34],[58,50,49,48,"b"],[58,52,49,50,"message"],[58,59,49,6],[60,0,50,4],[60,11,50,9],[60,19,50,4],[61,0,51,6],[61,12,51,10],[61,14,51,12,"a"],[61,16,51,14,"source"],[61,22,51,12],[61,27,51,25,"b"],[61,29,51,27,"source"],[61,35,51,12],[61,39,52,12,"a"],[61,41,52,14,"global"],[61,47,52,12],[61,52,52,25,"b"],[61,54,52,27,"global"],[61,60,51,12],[61,64,53,12,"a"],[61,66,53,14,"ignoreCase"],[61,76,53,12],[61,81,53,29,"b"],[61,83,53,31,"ignoreCase"],[61,93,51,12],[61,97,54,12,"a"],[61,99,54,14,"multiline"],[61,108,54,12],[61,113,54,28,"b"],[61,115,54,30,"multiline"],[61,124,51,12],[61,128,55,12,"a"],[61,130,55,14,"sticky"],[61,136,55,12],[61,141,55,25,"b"],[61,143,55,27,"sticky"],[61,149,51,12],[61,153,56,12,"a"],[61,155,56,14,"unicode"],[61,162,56,12],[61,167,56,26,"b"],[61,169,56,28,"unicode"],[61,176,51,10],[61,177,51,6],[61,179,56,38],[62,0,57,8],[62,17,57,15],[62,22,57,8],[63,0,58,7],[65,0,59,6],[67,0,60,4],[67,11,60,9],[67,16,60,4],[68,0,61,4],[68,11,61,9],[68,16,61,4],[69,0,62,6],[69,12,62,10],[69,13,62,11,"_equals"],[69,21,62,19,"_arrayFromIterator"],[69,40,62,38,"a"],[69,42,62,40,"entries"],[69,49,62,38],[69,51,62,19],[69,52,62,11],[69,54,62,52,"_arrayFromIterator"],[69,73,62,71,"b"],[69,75,62,73,"entries"],[69,82,62,71],[69,84,62,52],[69,85,62,11],[69,87,62,85,"stackA"],[69,93,62,11],[69,95,62,93,"stackB"],[69,101,62,11],[69,102,62,6],[69,104,62,102],[70,0,63,8],[70,17,63,15],[70,22,63,8],[71,0,64,7],[73,0,65,6],[75,0,66,4],[75,11,66,9],[75,22,66,4],[76,0,67,4],[76,11,67,9],[76,23,67,4],[77,0,68,4],[77,11,68,9],[77,30,68,4],[78,0,69,4],[78,11,69,9],[78,23,69,4],[79,0,70,4],[79,11,70,9],[79,24,70,4],[80,0,71,4],[80,11,71,9],[80,23,71,4],[81,0,72,4],[81,11,72,9],[81,24,72,4],[82,0,73,4],[82,11,73,9],[82,25,73,4],[83,0,74,4],[83,11,74,9],[83,25,74,4],[84,0,75,6],[86,0,76,4],[86,11,76,9],[86,24,76,4],[87,0,77,6],[89,0,78,4],[90,0,80,6],[90,15,80,13],[90,20,80,6],[91,0,27,2],[93,0,83,2],[93,8,83,6,"keysA"],[93,16,83,14,"keys"],[93,21,83,19,"a"],[93,22,83,14],[93,23,83,2],[95,0,84,2],[95,8,84,6,"keysA"],[95,14,84,12,"length"],[95,20,84,6],[95,25,84,23,"keys"],[95,30,84,28,"b"],[95,31,84,23],[95,33,84,31,"length"],[95,39,84,2],[95,41,84,39],[96,0,85,4],[96,13,85,11],[96,18,85,4],[97,0,86,3],[99,0,88,2],[99,8,88,6,"idx"],[99,14,88,12,"stackA"],[99,21,88,19,"length"],[99,27,88,12],[99,30,88,28],[99,31,88,2],[101,0,89,2],[101,11,89,9,"idx"],[101,18,89,16],[101,19,89,2],[101,21,89,19],[102,0,90,4],[102,10,90,8,"stackA"],[102,17,90,15,"idx"],[102,20,90,8],[102,26,90,24,"a"],[102,27,90,4],[102,29,90,27],[103,0,91,6],[103,15,91,13,"stackB"],[103,22,91,20,"idx"],[103,25,91,13],[103,31,91,29,"b"],[103,32,91,6],[104,0,92,5],[106,0,93,4,"idx"],[106,13,93,11],[106,14,93,4],[107,0,94,3],[109,0,96,2,"stackA"],[109,11,96,9,"push"],[109,15,96,2],[109,16,96,14,"a"],[109,17,96,2],[110,0,97,2,"stackB"],[110,11,97,9,"push"],[110,15,97,2],[110,16,97,14,"b"],[110,17,97,2],[111,0,98,2,"idx"],[111,10,98,8,"keysA"],[111,16,98,14,"length"],[111,22,98,8],[111,25,98,23],[111,26,98,2],[113,0,99,2],[113,11,99,9,"idx"],[113,18,99,16],[113,19,99,2],[113,21,99,19],[114,0,100,4],[114,10,100,8,"key"],[114,16,100,14,"keysA"],[114,22,100,20,"idx"],[114,25,100,14],[114,26,100,4],[116,0,101,4],[116,10,101,8],[116,12,101,10,"_has"],[116,17,101,15,"key"],[116,20,101,10],[116,22,101,20,"b"],[116,23,101,10],[116,28,101,26,"_equals"],[116,36,101,34,"b"],[116,38,101,36,"key"],[116,41,101,34],[116,42,101,26],[116,44,101,42,"a"],[116,46,101,44,"key"],[116,49,101,42],[116,50,101,26],[116,52,101,50,"stackA"],[116,58,101,26],[116,60,101,58,"stackB"],[116,66,101,26],[116,67,101,8],[116,68,101,4],[116,70,101,68],[117,0,102,6],[117,15,102,13],[117,20,102,6],[118,0,103,5],[120,0,104,4,"idx"],[120,13,104,11],[120,14,104,4],[121,0,105,3],[123,0,106,2,"stackA"],[123,11,106,9,"pop"],[123,14,106,2],[124,0,107,2,"stackB"],[124,11,107,9,"pop"],[124,14,107,2],[125,0,108,2],[125,11,108,9],[125,15,108,2],[126,0,109,1],[126,3,9,0]]},"type":"js/module"}]}