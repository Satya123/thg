{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"./lib/TextExtraction","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"react-native\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"prop-types\"));\n\n  var _TextExtraction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./lib/TextExtraction\"));\n\n  var _jsxFileName = \"/var/www/html/thg/node_modules/react-native-parsed-text/src/ParsedText.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var _components = {\n    ParsedText: {\n      displayName: \"ParsedText\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/var/www/html/thg/node_modules/react-native-parsed-text/src/ParsedText.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var PATTERNS = {\n    url: /(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&\\/\\/=]*)/i,\n    phone: /[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,7}/,\n    email: /\\S+@\\S+\\.\\S+/\n  };\n\n  var defaultParseShape = _propTypes.default.shape(_objectSpread({}, _reactNative.default.Text.propTypes, {\n    type: _propTypes.default.oneOf(Object.keys(PATTERNS)).isRequired\n  }));\n\n  var customParseShape = _propTypes.default.shape(_objectSpread({}, _reactNative.default.Text.propTypes, {\n    pattern: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(RegExp)]).isRequired\n  }));\n\n  var ParsedText = function (_React$Component) {\n    function ParsedText() {\n      _classCallCheck(this, ParsedText);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ParsedText).apply(this, arguments));\n    }\n\n    _createClass(ParsedText, [{\n      key: \"setNativeProps\",\n      value: function setNativeProps(nativeProps) {\n        this._root.setNativeProps(nativeProps);\n      }\n    }, {\n      key: \"getPatterns\",\n      value: function getPatterns() {\n        return this.props.parse.map(function (option) {\n          var type = option.type,\n              patternOption = _objectWithoutProperties(option, [\"type\"]);\n\n          if (type) {\n            if (!PATTERNS[type]) {\n              throw new Error(option.type + \" is not a supported type\");\n            }\n\n            patternOption.pattern = PATTERNS[type];\n          }\n\n          return patternOption;\n        });\n      }\n    }, {\n      key: \"getParsedText\",\n      value: function getParsedText() {\n        var _this = this;\n\n        if (!this.props.parse) {\n          return this.props.children;\n        }\n\n        if (typeof this.props.children !== 'string') {\n          return this.props.children;\n        }\n\n        var textExtraction = new _TextExtraction.default(this.props.children, this.getPatterns());\n        return textExtraction.parse().map(function (props, index) {\n          return _react.default.createElement(_reactNative.default.Text, _extends({\n            key: \"parsedText-\" + index\n          }, _this.props.childrenProps, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            }\n          }));\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.default.Text, _extends({\n          ref: function ref(_ref) {\n            return _this2._root = _ref;\n          }\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          }\n        }), this.getParsedText());\n      }\n    }]);\n\n    _inherits(ParsedText, _React$Component);\n\n    return ParsedText;\n  }(_react.default.Component);\n\n  ParsedText.displayName = 'ParsedText';\n  ParsedText.propTypes = _objectSpread({}, _reactNative.default.Text.propTypes, {\n    parse: _propTypes.default.arrayOf(_propTypes.default.oneOfType([defaultParseShape, customParseShape])),\n    childrenProps: _propTypes.default.shape(_reactNative.default.Text.propTypes)\n  });\n  ParsedText.defaultProps = {\n    parse: null,\n    childrenProps: {}\n  };\n  ParsedText = _wrapComponent(\"ParsedText\")(ParsedText);\n  var _default2 = ParsedText;\n  exports.default = _default2;\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,3,0],[15,0,5,0],[64,0,7,0],[64,6,7,6,"PATTERNS"],[64,17,7,17],[65,0,8,2,"url"],[65,9,8,7],[65,105,7,17],[66,0,9,2,"phone"],[66,11,9,9],[66,68,7,17],[67,0,10,2,"email"],[67,11,10,9],[68,0,7,17],[68,3,7,0],[70,0,13,0],[70,6,13,6,"defaultParseShape"],[70,26,13,26,"PropTypes"],[70,45,13,36,"shape"],[70,50,13,26],[70,69,14,5,"ReactNative"],[70,90,14,17,"Text"],[70,94,14,5],[70,95,14,22,"propTypes"],[70,104,13,26],[71,0,15,2,"type"],[71,10,15,8,"PropTypes"],[71,29,15,18,"oneOf"],[71,34,15,8],[71,35,15,24,"Object"],[71,42,15,31,"keys"],[71,46,15,24],[71,47,15,36,"PATTERNS"],[71,55,15,24],[71,56,15,8],[71,58,15,47,"isRequired"],[72,0,13,26],[72,5,13,0],[74,0,18,0],[74,6,18,6,"customParseShape"],[74,25,18,25,"PropTypes"],[74,44,18,35,"shape"],[74,49,18,25],[74,68,19,5,"ReactNative"],[74,89,19,17,"Text"],[74,93,19,5],[74,94,19,22,"propTypes"],[74,103,18,25],[75,0,20,2,"pattern"],[75,13,20,11,"PropTypes"],[75,32,20,21,"oneOfType"],[75,41,20,11],[75,42,20,31],[75,43,20,32,"PropTypes"],[75,62,20,42,"string"],[75,68,20,31],[75,70,20,50,"PropTypes"],[75,89,20,60,"instanceOf"],[75,99,20,50],[75,100,20,71,"RegExp"],[75,106,20,50],[75,107,20,31],[75,108,20,11],[75,110,20,81,"isRequired"],[76,0,18,25],[76,5,18,0],[78,6,23,6,"ParsedText"],[78,16],[87,37,40,17,"nativeProps"],[87,48],[87,50,40,30],[88,0,41,4],[88,13,41,9,"_root"],[88,18,41,4],[88,19,41,15,"setNativeProps"],[88,33,41,4],[88,34,41,30,"nativeProps"],[88,45,41,4],[89,0,42,3],[92,36,44,16],[93,0,45,4],[93,15,45,11],[93,20,45,16,"props"],[93,25,45,11],[93,26,45,22,"parse"],[93,31,45,11],[93,32,45,28,"map"],[93,35,45,11],[93,36,45,32],[93,46,45,33,"option"],[93,52,45,32],[93,54,45,44],[94,0,45,44],[94,14,46,13,"type"],[94,18,45,44],[94,21,46,39,"option"],[94,27,45,44],[94,28,46,13,"type"],[94,32,45,44],[95,0,45,44],[95,14,46,22,"patternOption"],[95,27,45,44],[95,55,46,39,"option"],[95,61,45,44],[97,0,47,6],[97,14,47,10,"type"],[97,18,47,6],[97,20,47,16],[98,0,48,8],[98,16,48,12],[98,17,48,13,"PATTERNS"],[98,26,48,22,"type"],[98,30,48,13],[98,31,48,8],[98,33,48,29],[99,0,49,10],[99,20,49,16],[99,24,49,20,"Error"],[99,29,49,16],[99,30,49,29,"option"],[99,37,49,36,"type"],[99,41,49,16],[99,71,49,10],[100,0,50,9],[102,0,51,8,"patternOption"],[102,26,51,22,"pattern"],[102,33,51,8],[102,36,51,32,"PATTERNS"],[102,45,51,41,"type"],[102,49,51,32],[102,50,51,8],[103,0,52,7],[105,0,54,6],[105,17,54,13,"patternOption"],[105,30,54,6],[106,0,55,5],[106,9,45,11],[106,10,45,4],[107,0,56,3],[110,38,58,18],[111,0,58,18],[113,0,59,4],[113,12,59,8],[113,13,59,9],[113,18,59,14,"props"],[113,23,59,9],[113,24,59,20,"parse"],[113,29,59,4],[113,31,59,49],[114,0,59,51],[114,17,59,58],[114,22,59,63,"props"],[114,27,59,58],[114,28,59,69,"children"],[114,36,59,51],[115,0,59,80],[117,0,60,4],[117,12,60,8],[117,19,60,15],[117,24,60,20,"props"],[117,29,60,15],[117,30,60,26,"children"],[117,38,60,8],[117,43,60,39],[117,51,60,4],[117,53,60,49],[118,0,60,51],[118,17,60,58],[118,22,60,63,"props"],[118,27,60,58],[118,28,60,69,"children"],[118,36,60,51],[119,0,60,80],[121,0,62,4],[121,12,62,10,"textExtraction"],[121,29,62,27],[121,33,62,31,"TextExtraction"],[121,56,62,27],[121,57,62,46],[121,62,62,51,"props"],[121,67,62,46],[121,68,62,57,"children"],[121,76,62,27],[121,78,62,67],[121,83,62,72,"getPatterns"],[121,94,62,67],[121,96,62,27],[121,97,62,4],[122,0,64,4],[122,15,64,11,"textExtraction"],[122,30,64,26,"parse"],[122,35,64,11],[122,38,64,34,"map"],[122,41,64,11],[122,42,64,38],[122,52,64,39,"props"],[122,57,64,38],[122,59,64,46,"index"],[122,64,64,38],[122,66,64,56],[123,0,65,6],[123,17,66,8],[123,46,66,9],[123,66,66,8],[123,67,66,21],[123,71,66,8],[124,0,67,10],[124,33,67,29,"index"],[125,0,66,8],[125,13,68,14],[125,19,68,19,"props"],[125,24,68,14],[125,25,68,25,"childrenProps"],[125,38,66,8],[125,40,69,14,"props"],[125,45,66,8],[126,0,66,8],[127,0,66,8],[128,0,66,8],[129,0,66,8],[130,0,66,8],[130,13,65,6],[131,0,72,5],[131,9,64,11],[131,10,64,4],[132,0,73,3],[135,31,75,11],[136,0,75,11],[138,0,76,4],[138,15,77,6],[138,44,77,7],[138,64,77,6],[138,65,77,19],[138,69,77,6],[139,0,78,8],[139,15,78,13],[140,0,78,13],[140,19,78,20],[140,26,78,25,"_root"],[140,31,78,20],[140,34,78,33,"ref"],[140,38,78,13],[141,0,78,13],[142,0,77,6],[142,11,79,12],[142,16,79,17,"props"],[142,21,77,6],[143,0,77,6],[144,0,77,6],[145,0,77,6],[146,0,77,6],[147,0,77,6],[147,12,81,9],[147,17,81,14,"getParsedText"],[147,30,81,9],[147,32,77,6],[147,33,76,4],[148,0,84,3],[154,4,23,25,"React"],[154,19,23,31,"Component"],[154,28],[156,0,23,6,"ParsedText"],[156,12],[156,13,25,9,"displayName"],[156,24],[156,27,25,23],[156,39],[157,0,23,6,"ParsedText"],[157,12],[157,13,27,9,"propTypes"],[157,22],[157,43,28,7,"ReactNative"],[157,64,28,19,"Text"],[157,68,28,7],[157,69,28,24,"propTypes"],[157,78],[158,0,29,4,"parse"],[158,11,29,11,"PropTypes"],[158,30,29,21,"arrayOf"],[158,37,29,11],[158,38,30,6,"PropTypes"],[158,57,30,16,"oneOfType"],[158,66,30,6],[158,67,30,26],[158,68,30,27,"defaultParseShape"],[158,85,30,26],[158,87,30,46,"customParseShape"],[158,103,30,26],[158,104,30,6],[158,105,29,11],[158,106],[159,0,32,4,"childrenProps"],[159,19,32,19,"PropTypes"],[159,38,32,29,"shape"],[159,43,32,19],[159,44,32,35,"ReactNative"],[159,65,32,47,"Text"],[159,69,32,35],[159,70,32,52,"propTypes"],[159,79,32,19],[161,0,23,6,"ParsedText"],[161,12],[161,13,35,9,"defaultProps"],[161,25],[161,28,35,24],[162,0,36,4,"parse"],[162,11,36,11],[162,15,35,24],[163,0,37,4,"childrenProps"],[163,19,37,19],[164,0,35,24],[164,3],[166,18,88,15,"ParsedText"],[166,28]]},"type":"js/module"}]}