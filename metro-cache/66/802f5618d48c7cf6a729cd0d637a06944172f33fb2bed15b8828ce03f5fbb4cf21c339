{"dependencies":[{"name":"../utils","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  exports.__esModule = true;\n  exports.qEnd = undefined;\n  exports.safeName = safeName;\n  exports.default = fsmIterator;\n\n  var _utils = _$$_REQUIRE(_dependencyMap[0], '../utils');\n\n  var done = {\n    done: true,\n    value: undefined\n  };\n  var qEnd = exports.qEnd = {};\n\n  function safeName(patternOrChannel) {\n    if (_utils.is.channel(patternOrChannel)) {\n      return 'channel';\n    } else if (Array.isArray(patternOrChannel)) {\n      return String(patternOrChannel.map(function (entry) {\n        return String(entry);\n      }));\n    } else {\n      return String(patternOrChannel);\n    }\n  }\n\n  function fsmIterator(fsm, q0) {\n    var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'iterator';\n    var updateState = void 0,\n        qNext = q0;\n\n    function next(arg, error) {\n      if (qNext === qEnd) {\n        return done;\n      }\n\n      if (error) {\n        qNext = qEnd;\n        throw error;\n      } else {\n        updateState && updateState(arg);\n\n        var _fsm$qNext = fsm[qNext](),\n            q = _fsm$qNext[0],\n            output = _fsm$qNext[1],\n            _updateState = _fsm$qNext[2];\n\n        qNext = q;\n        updateState = _updateState;\n        return qNext === qEnd ? done : output;\n      }\n    }\n\n    return (0, _utils.makeIterator)(next, function (error) {\n      return next(null, error);\n    }, name, true);\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"exports"],[4,10,3,8,"__esModule"],[4,20,3,0],[4,23,3,21],[4,27,3,0],[5,0,4,0,"exports"],[5,10,4,8,"qEnd"],[5,14,4,0],[5,17,4,15,"undefined"],[5,26,4,0],[6,0,5,0,"exports"],[6,10,5,8,"safeName"],[6,18,5,0],[6,21,5,19,"safeName"],[6,29,5,0],[7,0,6,0,"exports"],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"fsmIterator"],[7,31,6,0],[9,0,8,0],[9,6,8,4,"_utils"],[9,15,8,13,"require"],[9,46,8,21],[9,56,8,13],[9,57,8,0],[11,0,10,0],[11,6,10,4,"done"],[11,13,10,11],[12,0,10,13,"done"],[12,10,10,19],[12,14,10,11],[13,0,10,25,"value"],[13,11,10,32,"undefined"],[14,0,10,11],[14,3,10,0],[15,0,11,0],[15,6,11,4,"qEnd"],[15,13,11,11,"exports"],[15,21,11,19,"qEnd"],[15,25,11,11],[15,28,11,26],[15,30,11,0],[17,0,13,0],[17,11,13,9,"safeName"],[17,19,13,0],[17,20,13,18,"patternOrChannel"],[17,36,13,0],[17,38,13,36],[18,0,14,2],[18,8,14,6,"_utils"],[18,15,14,13,"is"],[18,17,14,6],[18,18,14,16,"channel"],[18,25,14,6],[18,26,14,24,"patternOrChannel"],[18,42,14,6],[18,43,14,2],[18,45,14,43],[19,0,15,4],[19,13,15,11],[19,22,15,4],[20,0,16,3],[20,5,14,2],[20,11,16,9],[20,15,16,13,"Array"],[20,21,16,19,"isArray"],[20,28,16,13],[20,29,16,27,"patternOrChannel"],[20,45,16,13],[20,46,16,9],[20,48,16,46],[21,0,17,4],[21,13,17,11,"String"],[21,20,17,18,"patternOrChannel"],[21,37,17,35,"map"],[21,40,17,18],[21,41,17,39],[21,51,17,49,"entry"],[21,56,17,39],[21,58,17,56],[22,0,18,6],[22,15,18,13,"String"],[22,22,18,20,"entry"],[22,27,18,13],[22,28,18,6],[23,0,19,5],[23,7,17,18],[23,8,17,11],[23,9,17,4],[24,0,20,3],[24,5,16,9],[24,11,20,9],[25,0,21,4],[25,13,21,11,"String"],[25,20,21,18,"patternOrChannel"],[25,36,21,11],[25,37,21,4],[26,0,22,3],[27,0,23,1],[29,0,25,0],[29,11,25,9,"fsmIterator"],[29,22,25,0],[29,23,25,21,"fsm"],[29,26,25,0],[29,28,25,26,"q0"],[29,30,25,0],[29,32,25,30],[30,0,26,2],[30,8,26,6,"name"],[30,15,26,13,"arguments"],[30,25,26,23,"length"],[30,31,26,13],[30,34,26,32],[30,35,26,13],[30,39,26,37,"arguments"],[30,49,26,47],[30,50,26,37],[30,56,26,54,"undefined"],[30,65,26,13],[30,68,26,66,"arguments"],[30,78,26,76],[30,79,26,66],[30,80,26,13],[30,83,26,81],[30,93,26,2],[31,0,28,2],[31,8,28,6,"updateState"],[31,22,28,20],[31,27,28,25],[31,28,28,2],[32,0,28,2],[32,8,29,6,"qNext"],[32,16,29,14,"q0"],[32,18,28,2],[34,0,31,2],[34,13,31,11,"next"],[34,17,31,2],[34,18,31,16,"arg"],[34,21,31,2],[34,23,31,21,"error"],[34,28,31,2],[34,30,31,28],[35,0,32,4],[35,10,32,8,"qNext"],[35,20,32,18,"qEnd"],[35,24,32,4],[35,26,32,24],[36,0,33,6],[36,15,33,13,"done"],[36,19,33,6],[37,0,34,5],[39,0,36,4],[39,10,36,8,"error"],[39,15,36,4],[39,17,36,15],[40,0,37,6,"qNext"],[40,16,37,14,"qEnd"],[40,20,37,6],[41,0,38,6],[41,14,38,12,"error"],[41,19,38,6],[42,0,39,5],[42,7,36,4],[42,13,39,11],[43,0,40,6,"updateState"],[43,23,40,21,"updateState"],[43,35,40,33,"arg"],[43,38,40,21],[43,39,40,6],[45,0,42,6],[45,12,42,10,"_fsm$qNext"],[45,25,42,23,"fsm"],[45,29,42,27,"qNext"],[45,34,42,23],[45,37,42,6],[46,0,42,6],[46,12,43,10,"q"],[46,16,43,14,"_fsm$qNext"],[46,27,43,25],[46,28,43,14],[46,29,42,6],[47,0,42,6],[47,12,44,10,"output"],[47,21,44,19,"_fsm$qNext"],[47,32,44,30],[47,33,44,19],[47,34,42,6],[48,0,42,6],[48,12,45,10,"_updateState"],[48,27,45,25,"_fsm$qNext"],[48,38,45,36],[48,39,45,25],[48,40,42,6],[50,0,47,6,"qNext"],[50,16,47,14,"q"],[50,17,47,6],[51,0,48,6,"updateState"],[51,22,48,20,"_updateState"],[51,34,48,6],[52,0,49,6],[52,15,49,13,"qNext"],[52,25,49,23,"qEnd"],[52,29,49,13],[52,32,49,30,"done"],[52,36,49,13],[52,39,49,37,"output"],[52,45,49,6],[53,0,50,5],[54,0,51,3],[56,0,53,2],[56,11,53,9],[56,12,53,10],[56,15,53,13,"_utils"],[56,22,53,20,"makeIterator"],[56,34,53,9],[56,36,53,34,"next"],[56,40,53,9],[56,42,53,40],[56,52,53,50,"error"],[56,57,53,40],[56,59,53,57],[57,0,54,4],[57,13,54,11,"next"],[57,18,54,16],[57,22,54,11],[57,24,54,22,"error"],[57,29,54,11],[57,30,54,4],[58,0,55,3],[58,5,53,9],[58,7,55,5,"name"],[58,11,53,9],[58,13,55,11],[58,17,53,9],[58,18,53,2],[59,0,56,1]]},"type":"js/module"}]}