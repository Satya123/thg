{"dependencies":[{"name":"./_xwrap","isAsync":false},{"name":"../bind","isAsync":false},{"name":"../isArrayLike","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var _xwrap = _$$_REQUIRE(_dependencyMap[0], './_xwrap');\n\n  var bind = _$$_REQUIRE(_dependencyMap[1], '../bind');\n\n  var isArrayLike = _$$_REQUIRE(_dependencyMap[2], '../isArrayLike');\n\n  module.exports = function () {\n    function _arrayReduce(xf, acc, list) {\n      var idx = 0;\n      var len = list.length;\n\n      while (idx < len) {\n        acc = xf['@@transducer/step'](acc, list[idx]);\n\n        if (acc && acc['@@transducer/reduced']) {\n          acc = acc['@@transducer/value'];\n          break;\n        }\n\n        idx += 1;\n      }\n\n      return xf['@@transducer/result'](acc);\n    }\n\n    function _iterableReduce(xf, acc, iter) {\n      var step = iter.next();\n\n      while (!step.done) {\n        acc = xf['@@transducer/step'](acc, step.value);\n\n        if (acc && acc['@@transducer/reduced']) {\n          acc = acc['@@transducer/value'];\n          break;\n        }\n\n        step = iter.next();\n      }\n\n      return xf['@@transducer/result'](acc);\n    }\n\n    function _methodReduce(xf, acc, obj) {\n      return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n    }\n\n    var symIterator = typeof Symbol !== 'undefined' ? typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\" : '@@iterator';\n    return function _reduce(fn, acc, list) {\n      if (typeof fn === 'function') {\n        fn = _xwrap(fn);\n      }\n\n      if (isArrayLike(list)) {\n        return _arrayReduce(fn, acc, list);\n      }\n\n      if (typeof list.reduce === 'function') {\n        return _methodReduce(fn, acc, list);\n      }\n\n      if (list[symIterator] != null) {\n        return _iterableReduce(fn, acc, list[symIterator]());\n      }\n\n      if (typeof list.next === 'function') {\n        return _iterableReduce(fn, acc, list);\n      }\n\n      throw new TypeError('reduce: list must be array or iterable');\n    };\n  }();\n});","map":[[2,0,1,0],[2,6,1,4,"_xwrap"],[2,15,1,13,"require"],[2,46,1,21],[2,56,1,13],[2,57,1,0],[4,0,2,0],[4,6,2,4,"bind"],[4,13,2,11,"require"],[4,44,2,19],[4,53,2,11],[4,54,2,0],[6,0,3,0],[6,6,3,4,"isArrayLike"],[6,20,3,18,"require"],[6,51,3,26],[6,67,3,18],[6,68,3,0],[8,0,6,0,"module"],[8,9,6,7,"exports"],[8,16,6,0],[8,19,6,18],[8,31,6,29],[9,0,7,2],[9,13,7,11,"_arrayReduce"],[9,25,7,2],[9,26,7,24,"xf"],[9,28,7,2],[9,30,7,28,"acc"],[9,33,7,2],[9,35,7,33,"list"],[9,39,7,2],[9,41,7,39],[10,0,8,4],[10,10,8,8,"idx"],[10,16,8,14],[10,17,8,4],[11,0,9,4],[11,10,9,8,"len"],[11,16,9,14,"list"],[11,21,9,19,"length"],[11,27,9,4],[13,0,10,4],[13,13,10,11,"idx"],[13,19,10,17,"len"],[13,22,10,4],[13,24,10,22],[14,0,11,6,"acc"],[14,14,11,12,"xf"],[14,17,11,15],[14,36,11,12],[14,38,11,36,"acc"],[14,41,11,12],[14,43,11,41,"list"],[14,48,11,46,"idx"],[14,51,11,41],[14,52,11,12],[14,53,11,6],[16,0,12,6],[16,12,12,10,"acc"],[16,19,12,17,"acc"],[16,23,12,21],[16,45,12,17],[16,46,12,6],[16,48,12,46],[17,0,13,8,"acc"],[17,16,13,14,"acc"],[17,20,13,18],[17,40,13,14],[17,41,13,8],[18,0,14,8],[19,0,15,7],[21,0,16,6,"idx"],[21,15,16,13],[21,16,16,6],[22,0,17,5],[24,0,18,4],[24,13,18,11,"xf"],[24,16,18,14],[24,37,18,11],[24,39,18,37,"acc"],[24,42,18,11],[24,43,18,4],[25,0,19,3],[27,0,21,2],[27,13,21,11,"_iterableReduce"],[27,28,21,2],[27,29,21,27,"xf"],[27,31,21,2],[27,33,21,31,"acc"],[27,36,21,2],[27,38,21,36,"iter"],[27,42,21,2],[27,44,21,42],[28,0,22,4],[28,10,22,8,"step"],[28,17,22,15,"iter"],[28,22,22,20,"next"],[28,26,22,15],[28,28,22,4],[30,0,23,4],[30,13,23,11],[30,14,23,12,"step"],[30,19,23,17,"done"],[30,23,23,4],[30,25,23,23],[31,0,24,6,"acc"],[31,14,24,12,"xf"],[31,17,24,15],[31,36,24,12],[31,38,24,36,"acc"],[31,41,24,12],[31,43,24,41,"step"],[31,48,24,46,"value"],[31,53,24,12],[31,54,24,6],[33,0,25,6],[33,12,25,10,"acc"],[33,19,25,17,"acc"],[33,23,25,21],[33,45,25,17],[33,46,25,6],[33,48,25,46],[34,0,26,8,"acc"],[34,16,26,14,"acc"],[34,20,26,18],[34,40,26,14],[34,41,26,8],[35,0,27,8],[36,0,28,7],[38,0,29,6,"step"],[38,15,29,13,"iter"],[38,20,29,18,"next"],[38,24,29,13],[38,26,29,6],[39,0,30,5],[41,0,31,4],[41,13,31,11,"xf"],[41,16,31,14],[41,37,31,11],[41,39,31,37,"acc"],[41,42,31,11],[41,43,31,4],[42,0,32,3],[44,0,34,2],[44,13,34,11,"_methodReduce"],[44,26,34,2],[44,27,34,25,"xf"],[44,29,34,2],[44,31,34,29,"acc"],[44,34,34,2],[44,36,34,34,"obj"],[44,39,34,2],[44,41,34,39],[45,0,35,4],[45,13,35,11,"xf"],[45,16,35,14],[45,37,35,11],[45,39,35,37,"obj"],[45,43,35,41,"reduce"],[45,49,35,37],[45,50,35,48,"bind"],[45,55,35,53,"xf"],[45,58,35,56],[45,77,35,53],[45,78,35,48],[45,80,35,78,"xf"],[45,82,35,48],[45,83,35,37],[45,85,35,83,"acc"],[45,88,35,37],[45,89,35,11],[45,90,35,4],[46,0,36,3],[48,0,38,2],[48,8,38,6,"symIterator"],[48,22,38,21],[48,29,38,28,"Symbol"],[48,35,38,21],[48,40,38,39],[48,51,38,20],[48,85,38,54,"Symbol"],[48,92,38,61,"iterator"],[48,100,38,20],[48,118,38,72],[48,130,38,2],[49,0,39,2],[49,11,39,9],[49,20,39,18,"_reduce"],[49,27,39,9],[49,28,39,26,"fn"],[49,30,39,9],[49,32,39,30,"acc"],[49,35,39,9],[49,37,39,35,"list"],[49,41,39,9],[49,43,39,41],[50,0,40,4],[50,10,40,8],[50,17,40,15,"fn"],[50,19,40,8],[50,24,40,22],[50,34,40,4],[50,36,40,34],[51,0,41,6,"fn"],[51,13,41,11,"_xwrap"],[51,20,41,18,"fn"],[51,22,41,11],[51,23,41,6],[52,0,42,5],[54,0,43,4],[54,10,43,8,"isArrayLike"],[54,22,43,20,"list"],[54,26,43,8],[54,27,43,4],[54,29,43,27],[55,0,44,6],[55,15,44,13,"_arrayReduce"],[55,28,44,26,"fn"],[55,30,44,13],[55,32,44,30,"acc"],[55,35,44,13],[55,37,44,35,"list"],[55,41,44,13],[55,42,44,6],[56,0,45,5],[58,0,46,4],[58,10,46,8],[58,17,46,15,"list"],[58,22,46,20,"reduce"],[58,28,46,8],[58,33,46,31],[58,43,46,4],[58,45,46,43],[59,0,47,6],[59,15,47,13,"_methodReduce"],[59,29,47,27,"fn"],[59,31,47,13],[59,33,47,31,"acc"],[59,36,47,13],[59,38,47,36,"list"],[59,42,47,13],[59,43,47,6],[60,0,48,5],[62,0,49,4],[62,10,49,8,"list"],[62,15,49,13,"symIterator"],[62,26,49,8],[62,31,49,29],[62,35,49,4],[62,37,49,35],[63,0,50,6],[63,15,50,13,"_iterableReduce"],[63,31,50,29,"fn"],[63,33,50,13],[63,35,50,33,"acc"],[63,38,50,13],[63,40,50,38,"list"],[63,45,50,43,"symIterator"],[63,56,50,38],[63,59,50,13],[63,60,50,6],[64,0,51,5],[66,0,52,4],[66,10,52,8],[66,17,52,15,"list"],[66,22,52,20,"next"],[66,26,52,8],[66,31,52,29],[66,41,52,4],[66,43,52,41],[67,0,53,6],[67,15,53,13,"_iterableReduce"],[67,31,53,29,"fn"],[67,33,53,13],[67,35,53,33,"acc"],[67,38,53,13],[67,40,53,38,"list"],[67,44,53,13],[67,45,53,6],[68,0,54,5],[70,0,55,4],[70,12,55,10],[70,16,55,14,"TypeError"],[70,25,55,10],[70,26,55,24],[70,66,55,10],[70,67,55,4],[71,0,56,3],[71,5,39,2],[72,0,57,1],[72,3,6,18],[72,5,6,0]]},"type":"js/module"}]}