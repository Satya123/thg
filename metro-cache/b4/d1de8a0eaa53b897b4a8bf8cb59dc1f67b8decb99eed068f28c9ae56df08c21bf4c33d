{"dependencies":[{"name":"buffer","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var buffer = _$$_REQUIRE(_dependencyMap[0], 'buffer');\n\n  var Buffer = buffer.Buffer;\n\n  function copyProps(src, dst) {\n    for (var key in src) {\n      dst[key] = src[key];\n    }\n  }\n\n  if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n    module.exports = buffer;\n  } else {\n    copyProps(buffer, exports);\n    exports.Buffer = SafeBuffer;\n  }\n\n  function SafeBuffer(arg, encodingOrOffset, length) {\n    return Buffer(arg, encodingOrOffset, length);\n  }\n\n  copyProps(Buffer, SafeBuffer);\n\n  SafeBuffer.from = function (arg, encodingOrOffset, length) {\n    if (typeof arg === 'number') {\n      throw new TypeError('Argument must not be a number');\n    }\n\n    return Buffer(arg, encodingOrOffset, length);\n  };\n\n  SafeBuffer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n\n    var buf = Buffer(size);\n\n    if (fill !== undefined) {\n      if (typeof encoding === 'string') {\n        buf.fill(fill, encoding);\n      } else {\n        buf.fill(fill);\n      }\n    } else {\n      buf.fill(0);\n    }\n\n    return buf;\n  };\n\n  SafeBuffer.allocUnsafe = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n\n    return Buffer(size);\n  };\n\n  SafeBuffer.allocUnsafeSlow = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n\n    return buffer.SlowBuffer(size);\n  };\n});","map":[[2,0,2,0],[2,6,2,4,"buffer"],[2,15,2,13,"require"],[2,46,2,21],[2,54,2,13],[2,55,2,0],[4,0,3,0],[4,6,3,4,"Buffer"],[4,15,3,13,"buffer"],[4,22,3,20,"Buffer"],[4,28,3,0],[6,0,6,0],[6,11,6,9,"copyProps"],[6,20,6,0],[6,21,6,20,"src"],[6,24,6,0],[6,26,6,25,"dst"],[6,29,6,0],[6,31,6,30],[7,0,7,2],[7,9,7,7],[7,13,7,11,"key"],[7,16,7,2],[7,20,7,18,"src"],[7,23,7,2],[7,25,7,23],[8,0,8,4,"dst"],[8,10,8,8,"key"],[8,13,8,4],[8,17,8,15,"src"],[8,21,8,19,"key"],[8,24,8,15],[8,25,8,4],[9,0,9,3],[10,0,10,1],[12,0,11,0],[12,6,11,4,"Buffer"],[12,13,11,11,"from"],[12,17,11,4],[12,21,11,19,"Buffer"],[12,28,11,26,"alloc"],[12,33,11,4],[12,37,11,35,"Buffer"],[12,44,11,42,"allocUnsafe"],[12,55,11,4],[12,59,11,57,"Buffer"],[12,66,11,64,"allocUnsafeSlow"],[12,81,11,0],[12,83,11,81],[13,0,12,2,"module"],[13,11,12,9,"exports"],[13,18,12,2],[13,21,12,19,"buffer"],[13,27,12,2],[14,0,13,1],[14,3,11,0],[14,9,13,7],[15,0,15,2,"copyProps"],[15,14,15,12,"buffer"],[15,20,15,2],[15,22,15,20,"exports"],[15,29,15,2],[16,0,16,2,"exports"],[16,12,16,10,"Buffer"],[16,18,16,2],[16,21,16,19,"SafeBuffer"],[16,31,16,2],[17,0,17,1],[19,0,19,0],[19,11,19,9,"SafeBuffer"],[19,21,19,0],[19,22,19,21,"arg"],[19,25,19,0],[19,27,19,26,"encodingOrOffset"],[19,43,19,0],[19,45,19,44,"length"],[19,51,19,0],[19,53,19,52],[20,0,20,2],[20,11,20,9,"Buffer"],[20,18,20,16,"arg"],[20,21,20,9],[20,23,20,21,"encodingOrOffset"],[20,39,20,9],[20,41,20,39,"length"],[20,47,20,9],[20,48,20,2],[21,0,21,1],[23,0,24,0,"copyProps"],[23,12,24,10,"Buffer"],[23,18,24,0],[23,20,24,18,"SafeBuffer"],[23,30,24,0],[25,0,26,0,"SafeBuffer"],[25,13,26,11,"from"],[25,17,26,0],[25,20,26,18],[25,30,26,28,"arg"],[25,33,26,18],[25,35,26,33,"encodingOrOffset"],[25,51,26,18],[25,53,26,51,"length"],[25,59,26,18],[25,61,26,59],[26,0,27,2],[26,8,27,6],[26,15,27,13,"arg"],[26,18,27,6],[26,23,27,21],[26,31,27,2],[26,33,27,31],[27,0,28,4],[27,12,28,10],[27,16,28,14,"TypeError"],[27,25,28,10],[27,26,28,24],[27,57,28,10],[27,58,28,4],[28,0,29,3],[30,0,30,2],[30,11,30,9,"Buffer"],[30,18,30,16,"arg"],[30,21,30,9],[30,23,30,21,"encodingOrOffset"],[30,39,30,9],[30,41,30,39,"length"],[30,47,30,9],[30,48,30,2],[31,0,31,1],[31,3,26,0],[33,0,33,0,"SafeBuffer"],[33,13,33,11,"alloc"],[33,18,33,0],[33,21,33,19],[33,31,33,29,"size"],[33,35,33,19],[33,37,33,35,"fill"],[33,41,33,19],[33,43,33,41,"encoding"],[33,51,33,19],[33,53,33,51],[34,0,34,2],[34,8,34,6],[34,15,34,13,"size"],[34,19,34,6],[34,24,34,22],[34,32,34,2],[34,34,34,32],[35,0,35,4],[35,12,35,10],[35,16,35,14,"TypeError"],[35,25,35,10],[35,26,35,24],[35,53,35,10],[35,54,35,4],[36,0,36,3],[38,0,37,2],[38,8,37,6,"buf"],[38,14,37,12,"Buffer"],[38,21,37,19,"size"],[38,25,37,12],[38,26,37,2],[40,0,38,2],[40,8,38,6,"fill"],[40,17,38,15,"undefined"],[40,26,38,2],[40,28,38,26],[41,0,39,4],[41,10,39,8],[41,17,39,15,"encoding"],[41,25,39,8],[41,30,39,28],[41,38,39,4],[41,40,39,38],[42,0,40,6,"buf"],[42,12,40,10,"fill"],[42,16,40,6],[42,17,40,15,"fill"],[42,21,40,6],[42,23,40,21,"encoding"],[42,31,40,6],[43,0,41,5],[43,7,39,4],[43,13,41,11],[44,0,42,6,"buf"],[44,12,42,10,"fill"],[44,16,42,6],[44,17,42,15,"fill"],[44,21,42,6],[45,0,43,5],[46,0,44,3],[46,5,38,2],[46,11,44,9],[47,0,45,4,"buf"],[47,10,45,8,"fill"],[47,14,45,4],[47,15,45,13],[47,16,45,4],[48,0,46,3],[50,0,47,2],[50,11,47,9,"buf"],[50,14,47,2],[51,0,48,1],[51,3,33,0],[53,0,50,0,"SafeBuffer"],[53,13,50,11,"allocUnsafe"],[53,24,50,0],[53,27,50,25],[53,37,50,35,"size"],[53,41,50,25],[53,43,50,41],[54,0,51,2],[54,8,51,6],[54,15,51,13,"size"],[54,19,51,6],[54,24,51,22],[54,32,51,2],[54,34,51,32],[55,0,52,4],[55,12,52,10],[55,16,52,14,"TypeError"],[55,25,52,10],[55,26,52,24],[55,53,52,10],[55,54,52,4],[56,0,53,3],[58,0,54,2],[58,11,54,9,"Buffer"],[58,18,54,16,"size"],[58,22,54,9],[58,23,54,2],[59,0,55,1],[59,3,50,0],[61,0,57,0,"SafeBuffer"],[61,13,57,11,"allocUnsafeSlow"],[61,28,57,0],[61,31,57,29],[61,41,57,39,"size"],[61,45,57,29],[61,47,57,45],[62,0,58,2],[62,8,58,6],[62,15,58,13,"size"],[62,19,58,6],[62,24,58,22],[62,32,58,2],[62,34,58,32],[63,0,59,4],[63,12,59,10],[63,16,59,14,"TypeError"],[63,25,59,10],[63,26,59,24],[63,53,59,10],[63,54,59,4],[64,0,60,3],[66,0,61,2],[66,11,61,9,"buffer"],[66,18,61,16,"SlowBuffer"],[66,28,61,9],[66,29,61,27,"size"],[66,33,61,9],[66,34,61,2],[67,0,62,1],[67,3,57,0]]},"type":"js/module"}]}