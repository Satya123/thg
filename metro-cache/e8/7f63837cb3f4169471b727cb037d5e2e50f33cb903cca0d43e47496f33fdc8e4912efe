{"dependencies":[{"name":"./utils","isAsync":false},{"name":"./helpers/normalizeHeaderName","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  var utils = _$$_REQUIRE(_dependencyMap[0], './utils');\n\n  var normalizeHeaderName = _$$_REQUIRE(_dependencyMap[1], './helpers/normalizeHeaderName');\n\n  var PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\n  var DEFAULT_CONTENT_TYPE = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  function setContentTypeIfUnset(headers, value) {\n    if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n      headers['Content-Type'] = value;\n    }\n  }\n\n  module.exports = {\n    transformRequest: [function transformRequest(data, headers) {\n      normalizeHeaderName(headers, 'Content-Type');\n\n      if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n        return data;\n      }\n\n      if (utils.isArrayBufferView(data)) {\n        return data.buffer;\n      }\n\n      if (utils.isURLSearchParams(data)) {\n        setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n        return data.toString();\n      }\n\n      if (utils.isObject(data)) {\n        setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n        return JSON.stringify(data);\n      }\n\n      return data;\n    }],\n    transformResponse: [function transformResponse(data) {\n      if (typeof data === 'string') {\n        data = data.replace(PROTECTION_PREFIX, '');\n\n        try {\n          data = JSON.parse(data);\n        } catch (e) {}\n      }\n\n      return data;\n    }],\n    headers: {\n      common: {\n        'Accept': 'application/json, text/plain, */*'\n      },\n      patch: utils.merge(DEFAULT_CONTENT_TYPE),\n      post: utils.merge(DEFAULT_CONTENT_TYPE),\n      put: utils.merge(DEFAULT_CONTENT_TYPE)\n    },\n    timeout: 0,\n    xsrfCookieName: 'XSRF-TOKEN',\n    xsrfHeaderName: 'X-XSRF-TOKEN',\n    maxContentLength: -1,\n    validateStatus: function validateStatus(status) {\n      return status >= 200 && status < 300;\n    }\n  };\n});","map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"utils"],[4,14,3,12,"require"],[4,45,3,20],[4,54,3,12],[4,55,3,0],[6,0,4,0],[6,6,4,4,"normalizeHeaderName"],[6,28,4,26,"require"],[6,59,4,34],[6,90,4,26],[6,91,4,0],[8,0,6,0],[8,6,6,4,"PROTECTION_PREFIX"],[8,26,6,24],[8,40,6,0],[9,0,7,0],[9,6,7,4,"DEFAULT_CONTENT_TYPE"],[9,29,7,27],[10,0,8,2],[10,20,8,18],[11,0,7,27],[11,3,7,0],[13,0,11,0],[13,11,11,9,"setContentTypeIfUnset"],[13,32,11,0],[13,33,11,31,"headers"],[13,40,11,0],[13,42,11,40,"value"],[13,47,11,0],[13,49,11,47],[14,0,12,2],[14,8,12,6],[14,9,12,7,"utils"],[14,15,12,13,"isUndefined"],[14,26,12,7],[14,27,12,25,"headers"],[14,34,12,7],[14,35,12,6],[14,39,12,37,"utils"],[14,45,12,43,"isUndefined"],[14,56,12,37],[14,57,12,55,"headers"],[14,65,12,63],[14,79,12,55],[14,80,12,37],[14,81,12,2],[14,83,12,81],[15,0,13,4,"headers"],[15,14,13,12],[15,28,13,4],[15,32,13,30,"value"],[15,37,13,4],[16,0,14,3],[17,0,15,1],[19,0,17,0,"module"],[19,9,17,7,"exports"],[19,16,17,0],[19,19,17,17],[20,0,18,2,"transformRequest"],[20,22,18,20],[20,23,18,21],[20,32,18,30,"transformRequest"],[20,48,18,21],[20,49,18,47,"data"],[20,53,18,21],[20,55,18,53,"headers"],[20,62,18,21],[20,64,18,62],[21,0,19,4,"normalizeHeaderName"],[21,26,19,24,"headers"],[21,33,19,4],[21,35,19,33],[21,49,19,4],[23,0,20,4],[23,10,20,8,"utils"],[23,16,20,14,"isFormData"],[23,26,20,8],[23,27,20,25,"data"],[23,31,20,8],[23,36,21,6,"utils"],[23,42,21,12,"isArrayBuffer"],[23,55,21,6],[23,56,21,26,"data"],[23,60,21,6],[23,61,20,8],[23,65,22,6,"utils"],[23,71,22,12,"isStream"],[23,79,22,6],[23,80,22,21,"data"],[23,84,22,6],[23,85,20,8],[23,89,23,6,"utils"],[23,95,23,12,"isFile"],[23,101,23,6],[23,102,23,19,"data"],[23,106,23,6],[23,107,20,8],[23,111,24,6,"utils"],[23,117,24,12,"isBlob"],[23,123,24,6],[23,124,24,19,"data"],[23,128,24,6],[23,129,20,4],[23,131,25,6],[24,0,26,6],[24,15,26,13,"data"],[24,19,26,6],[25,0,27,5],[27,0,28,4],[27,10,28,8,"utils"],[27,16,28,14,"isArrayBufferView"],[27,33,28,8],[27,34,28,32,"data"],[27,38,28,8],[27,39,28,4],[27,41,28,39],[28,0,29,6],[28,15,29,13,"data"],[28,20,29,18,"buffer"],[28,26,29,6],[29,0,30,5],[31,0,31,4],[31,10,31,8,"utils"],[31,16,31,14,"isURLSearchParams"],[31,33,31,8],[31,34,31,32,"data"],[31,38,31,8],[31,39,31,4],[31,41,31,39],[32,0,32,6,"setContentTypeIfUnset"],[32,30,32,28,"headers"],[32,37,32,6],[32,39,32,37],[32,88,32,6],[33,0,33,6],[33,15,33,13,"data"],[33,20,33,18,"toString"],[33,28,33,13],[33,30,33,6],[34,0,34,5],[36,0,35,4],[36,10,35,8,"utils"],[36,16,35,14,"isObject"],[36,24,35,8],[36,25,35,23,"data"],[36,29,35,8],[36,30,35,4],[36,32,35,30],[37,0,36,6,"setContentTypeIfUnset"],[37,30,36,28,"headers"],[37,37,36,6],[37,39,36,37],[37,71,36,6],[38,0,37,6],[38,15,37,13,"JSON"],[38,20,37,18,"stringify"],[38,29,37,13],[38,30,37,28,"data"],[38,34,37,13],[38,35,37,6],[39,0,38,5],[41,0,39,4],[41,13,39,11,"data"],[41,17,39,4],[42,0,40,3],[42,5,18,20],[42,6,17,17],[43,0,42,2,"transformResponse"],[43,23,42,21],[43,24,42,22],[43,33,42,31,"transformResponse"],[43,50,42,22],[43,51,42,49,"data"],[43,55,42,22],[43,57,42,55],[44,0,44,4],[44,10,44,8],[44,17,44,15,"data"],[44,21,44,8],[44,26,44,24],[44,34,44,4],[44,36,44,34],[45,0,45,6,"data"],[45,15,45,13,"data"],[45,20,45,18,"replace"],[45,27,45,13],[45,28,45,26,"PROTECTION_PREFIX"],[45,45,45,13],[45,47,45,45],[45,49,45,13],[45,50,45,6],[47,0,46,6],[47,12,46,10],[48,0,47,8,"data"],[48,17,47,15,"JSON"],[48,22,47,20,"parse"],[48,27,47,15],[48,28,47,26,"data"],[48,32,47,15],[48,33,47,8],[49,0,48,7],[49,9,46,6],[49,10,48,8],[49,17,48,15,"e"],[49,18,48,8],[49,20,48,18],[49,21,48,34],[50,0,49,5],[52,0,50,4],[52,13,50,11,"data"],[52,17,50,4],[53,0,51,3],[53,5,42,21],[53,6,17,17],[54,0,53,2,"headers"],[54,13,53,11],[55,0,54,4,"common"],[55,14,54,12],[56,0,55,6],[56,18,55,16],[57,0,54,12],[57,7,53,11],[58,0,57,4,"patch"],[58,13,57,11,"utils"],[58,19,57,17,"merge"],[58,24,57,11],[58,25,57,23,"DEFAULT_CONTENT_TYPE"],[58,45,57,11],[58,46,53,11],[59,0,58,4,"post"],[59,12,58,10,"utils"],[59,18,58,16,"merge"],[59,23,58,10],[59,24,58,22,"DEFAULT_CONTENT_TYPE"],[59,44,58,10],[59,45,53,11],[60,0,59,4,"put"],[60,11,59,9,"utils"],[60,17,59,15,"merge"],[60,22,59,9],[60,23,59,21,"DEFAULT_CONTENT_TYPE"],[60,43,59,9],[61,0,53,11],[61,5,17,17],[62,0,62,2,"timeout"],[62,13,62,11],[62,14,17,17],[63,0,64,2,"xsrfCookieName"],[63,20,64,18],[63,32,17,17],[64,0,65,2,"xsrfHeaderName"],[64,20,65,18],[64,34,17,17],[65,0,67,2,"maxContentLength"],[65,22,67,20],[65,23,67,21],[65,24,17,17],[66,0,69,2,"validateStatus"],[66,20,69,18],[66,29,69,27,"validateStatus"],[66,43,69,18],[66,44,69,42,"status"],[66,50,69,18],[66,52,69,50],[67,0,70,4],[67,13,70,11,"status"],[67,23,70,21],[67,26,70,11],[67,30,70,28,"status"],[67,39,70,37],[67,42,70,4],[68,0,71,3],[69,0,17,17],[69,3,17,0]]},"type":"js/module"}]}