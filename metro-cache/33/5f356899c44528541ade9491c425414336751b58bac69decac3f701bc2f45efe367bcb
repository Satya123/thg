{"dependencies":[{"name":"react-native","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;\n  var sessions = {};\n\n  var RNFetchBlobSession = function () {\n    _createClass(RNFetchBlobSession, null, [{\n      key: \"getSession\",\n      value: function getSession(name) {\n        return sessions[name];\n      }\n    }, {\n      key: \"setSession\",\n      value: function setSession(name, val) {\n        sessions[name] = val;\n      }\n    }, {\n      key: \"removeSession\",\n      value: function removeSession(name) {\n        delete sessions[name];\n      }\n    }]);\n\n    function RNFetchBlobSession(name, list) {\n      _classCallCheck(this, RNFetchBlobSession);\n\n      this.name = name;\n\n      if (!sessions[name]) {\n        if (Array.isArray(list)) sessions[name] = list;else sessions[name] = [];\n      }\n    }\n\n    _createClass(RNFetchBlobSession, [{\n      key: \"add\",\n      value: function add(path) {\n        sessions[this.name].push(path);\n        return this;\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(path) {\n        var list = sessions[this.name];\n\n        for (var _iterator = list, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var _i2 = _ref;\n\n          if (list[_i2] === path) {\n            sessions[this.name].splice(_i2, 1);\n            break;\n          }\n        }\n\n        return this;\n      }\n    }, {\n      key: \"list\",\n      value: function list() {\n        return sessions[this.name];\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        var _this = this;\n\n        return new Promise(function (resolve, reject) {\n          RNFetchBlob.removeSession(sessions[_this.name], function (err) {\n            if (err) reject(new Error(err));else {\n              delete sessions[_this.name];\n              resolve();\n            }\n          });\n        });\n      }\n    }]);\n\n    return RNFetchBlobSession;\n  }();\n\n  exports.default = RNFetchBlobSession;\n});","map":[[7,0,5,0],[15,0,11,0],[15,6,11,6,"RNFetchBlob"],[15,20,11,20,"NativeModules"],[15,47,11,34,"RNFetchBlob"],[15,58,11,0],[16,0,13,0],[16,6,13,4,"sessions"],[16,17,13,15],[16,19,13,0],[18,6,15,21,"RNFetchBlobSession"],[18,24],[21,33,19,20,"name"],[21,37],[21,39,19,37],[22,0,20,4],[22,15,20,11,"sessions"],[22,24,20,20,"name"],[22,28,20,11],[22,29,20,4],[23,0,21,3],[26,33,23,20,"name"],[26,37],[26,39,23,33,"val"],[26,42],[26,44,23,42],[27,0,24,4,"sessions"],[27,17,24,13,"name"],[27,21,24,4],[27,25,24,21,"val"],[27,28,24,4],[28,0,25,3],[31,36,27,23,"name"],[31,40],[31,42,27,36],[32,0,28,4],[32,15,28,11,"sessions"],[32,24,28,20,"name"],[32,28,28,11],[32,29,28,4],[33,0,29,3],[36,0,31,2],[36,32,31,14,"name"],[36,36,31,2],[36,38,31,27,"list"],[36,42,31,2],[36,44,31,47],[37,0,31,47],[39,0,32,4],[39,11,32,9,"name"],[39,15,32,4],[39,18,32,16,"name"],[39,22,32,4],[41,0,33,4],[41,10,33,7],[41,11,33,8,"sessions"],[41,20,33,17,"name"],[41,24,33,8],[41,25,33,4],[41,27,33,24],[42,0,34,6],[42,12,34,9,"Array"],[42,18,34,15,"isArray"],[42,25,34,9],[42,26,34,23,"list"],[42,30,34,9],[42,31,34,6],[42,33,35,6,"sessions"],[42,42,35,15,"name"],[42,46,35,6],[42,50,35,23,"list"],[42,54,35,6],[42,55,34,6],[42,60,37,6,"sessions"],[42,69,37,15,"name"],[42,73,37,6],[42,77,37,23],[42,79,37,6],[43,0,38,5],[44,0,39,3],[48,26,41,6,"path"],[48,30],[48,32,41,38],[49,0,42,4,"sessions"],[49,17,42,13],[49,22,42,18,"name"],[49,26,42,4],[49,28,42,24,"push"],[49,32,42,4],[49,33,42,29,"path"],[49,37,42,4],[50,0,43,4],[50,15,43,11],[50,19,43,4],[51,0,44,3],[54,29,46,9,"path"],[54,33],[54,35,46,41],[55,0,47,4],[55,12,47,8,"list"],[55,19,47,15,"sessions"],[55,28,47,24],[55,33,47,29,"name"],[55,37,47,15],[55,38,47,4],[57,0,48,4],[57,29,48,17,"list"],[57,33,48,4],[57,193,48,23],[58,0,48,23],[60,0,48,23],[61,0,48,23],[62,0,48,23],[63,0,48,23],[64,0,48,23],[65,0,48,23],[66,0,48,23],[67,0,48,23],[69,0,48,23],[69,14,48,12,"i"],[69,17,48,23],[71,0,49,6],[71,14,49,9,"list"],[71,19,49,14,"i"],[71,22,49,9],[71,28,49,21,"path"],[71,32,49,6],[71,34,49,27],[72,0,50,8,"sessions"],[72,21,50,17],[72,26,50,22,"name"],[72,30,50,8],[72,32,50,28,"splice"],[72,38,50,8],[72,39,50,35,"i"],[72,42,50,8],[72,44,50,38],[72,45,50,8],[73,0,51,8],[74,0,52,7],[75,0,53,5],[77,0,54,4],[77,15,54,11],[77,19,54,4],[78,0,55,3],[81,29,57,23],[82,0,58,4],[82,15,58,11,"sessions"],[82,24,58,20],[82,29,58,25,"name"],[82,33,58,11],[82,34,58,4],[83,0,59,3],[86,32,61,20],[87,0,61,20],[89,0,62,4],[89,15,62,11],[89,19,62,15,"Promise"],[89,26,62,11],[89,27,62,23],[89,37,62,24,"resolve"],[89,44,62,23],[89,46,62,33,"reject"],[89,52,62,23],[89,54,62,44],[90,0,63,6,"RNFetchBlob"],[90,22,63,18,"removeSession"],[90,35,63,6],[90,36,63,32,"sessions"],[90,45,63,41],[90,51,63,46,"name"],[90,55,63,32],[90,56,63,6],[90,58,63,53],[90,68,63,54,"err"],[90,71,63,53],[90,73,63,62],[91,0,64,8],[91,16,64,11,"err"],[91,19,64,8],[91,21,65,10,"reject"],[91,28,65,17],[91,32,65,21,"Error"],[91,37,65,17],[91,38,65,27,"err"],[91,41,65,17],[91,42,65,10],[91,44,64,8],[91,49,66,13],[92,0,67,10],[92,21,67,17,"sessions"],[92,30,67,26],[92,36,67,31,"name"],[92,40,67,17],[92,41,67,10],[93,0,68,10,"resolve"],[94,0,69,9],[95,0,70,7],[95,11,63,6],[96,0,71,5],[96,9,62,11],[96,10,62,4],[97,0,72,3]]},"type":"js/module"}]}