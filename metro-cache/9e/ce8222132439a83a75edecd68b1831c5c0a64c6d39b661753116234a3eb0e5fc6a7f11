{"dependencies":[{"name":"react-native","isAsync":false},{"name":"./class/RNFetchBlobSession","isAsync":false},{"name":"./class/RNFetchBlobWriteStream","isAsync":false},{"name":"./class/RNFetchBlobReadStream","isAsync":false},{"name":"./class/RNFetchBlobFile","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n\n  var _RNFetchBlobSession = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./class/RNFetchBlobSession\"));\n\n  var _RNFetchBlobWriteStream = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./class/RNFetchBlobWriteStream\"));\n\n  var _RNFetchBlobReadStream = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./class/RNFetchBlobReadStream\"));\n\n  var _RNFetchBlobFile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./class/RNFetchBlobFile\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;\n  var dirs = {\n    DocumentDir: RNFetchBlob.DocumentDir,\n    CacheDir: RNFetchBlob.CacheDir,\n    PictureDir: RNFetchBlob.PictureDir,\n    MusicDir: RNFetchBlob.MusicDir,\n    MovieDir: RNFetchBlob.MovieDir,\n    DownloadDir: RNFetchBlob.DownloadDir,\n    DCIMDir: RNFetchBlob.DCIMDir,\n    SDCardDir: RNFetchBlob.SDCardDir,\n    SDCardApplicationDir: RNFetchBlob.SDCardApplicationDir,\n    MainBundleDir: RNFetchBlob.MainBundleDir,\n    LibraryDir: RNFetchBlob.LibraryDir\n  };\n\n  function addCode(code, error) {\n    error.code = code;\n    return error;\n  }\n\n  function session(name) {\n    var s = _RNFetchBlobSession.default.getSession(name);\n\n    if (s) return new _RNFetchBlobSession.default(name);else {\n      _RNFetchBlobSession.default.setSession(name, []);\n\n      return new _RNFetchBlobSession.default(name, []);\n    }\n  }\n\n  function asset(path) {\n    if (_reactNative.Platform.OS === 'ios') {\n      if (/^assets-library\\:\\/\\//.test(path)) return path;\n    }\n\n    return 'bundle-assets://' + path;\n  }\n\n  function createFile(path, data) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'utf8';\n\n    if (encoding.toLowerCase() === 'ascii') {\n      return Array.isArray(data) ? RNFetchBlob.createFileASCII(path, data) : Promise.reject(addCode('EINVAL', new TypeError('`data` of ASCII file must be an array with 0..255 numbers')));\n    } else {\n      return RNFetchBlob.createFile(path, data, encoding);\n    }\n  }\n\n  function writeStream(path) {\n    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n    var append = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    return new Promise(function (resolve, reject) {\n      RNFetchBlob.writeStream(path, encoding, append, function (errCode, errMsg, streamId) {\n        if (errMsg) {\n          var err = new Error(errMsg);\n          err.code = errCode;\n          reject(err);\n        } else resolve(new _RNFetchBlobWriteStream.default(streamId, encoding));\n      });\n    });\n  }\n\n  function readStream(path) {\n    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n    var bufferSize = arguments.length > 2 ? arguments[2] : undefined;\n    var tick = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    return Promise.resolve(new _RNFetchBlobReadStream.default(path, encoding, bufferSize, tick));\n  }\n\n  function mkdir(path) {\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    return RNFetchBlob.mkdir(path);\n  }\n\n  function pathForAppGroup(groupName) {\n    return RNFetchBlob.pathForAppGroup(groupName);\n  }\n\n  function readFile(path) {\n    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    return RNFetchBlob.readFile(path, encoding);\n  }\n\n  function writeFile(path, data) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'utf8';\n\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    if (encoding.toLocaleLowerCase() === 'ascii') {\n      if (!Array.isArray(data)) {\n        return Promise.reject(addCode('EINVAL', new TypeError('\"data\" must be an Array when encoding is \"ascii\"')));\n      } else return RNFetchBlob.writeFileArray(path, data, false);\n    } else {\n      if (typeof data !== 'string') {\n        return Promise.reject(addCode('EINVAL', new TypeError(\"\\\"data\\\" must be a String when encoding is \\\"utf8\\\" or \\\"base64\\\", but it is \\\"\" + typeof data + \"\\\"\")));\n      } else return RNFetchBlob.writeFile(path, encoding, data, false);\n    }\n  }\n\n  function appendFile(path, data) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'utf8';\n\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    if (encoding.toLocaleLowerCase() === 'ascii') {\n      if (!Array.isArray(data)) {\n        return Promise.reject(addCode('EINVAL', new TypeError('`data` of ASCII file must be an array with 0..255 numbers')));\n      } else return RNFetchBlob.writeFileArray(path, data, true);\n    } else {\n      if (typeof data !== 'string') {\n        return Promise.reject(addCode('EINVAL'), new TypeError(\"\\\"data\\\" must be a String when encoding is \\\"utf8\\\" or \\\"base64\\\", but it is \\\"\" + typeof data + \"\\\"\"));\n      } else return RNFetchBlob.writeFile(path, encoding, data, true);\n    }\n  }\n\n  function stat(path) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n      }\n\n      RNFetchBlob.stat(path, function (err, stat) {\n        if (err) reject(new Error(err));else {\n          if (stat) {\n            stat.size = parseInt(stat.size);\n            stat.lastModified = parseInt(stat.lastModified);\n          }\n\n          resolve(stat);\n        }\n      });\n    });\n  }\n\n  function scanFile(pairs) {\n    return new Promise(function (resolve, reject) {\n      if (pairs === undefined) {\n        return reject(addCode('EINVAL', new TypeError('Missing argument')));\n      }\n\n      RNFetchBlob.scanFile(pairs, function (err) {\n        if (err) reject(addCode('EUNSPECIFIED', new Error(err)));else resolve();\n      });\n    });\n  }\n\n  function hash(path, algorithm) {\n    if (typeof path !== 'string' || typeof algorithm !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" and/or \"algorithm\"')));\n    }\n\n    return RNFetchBlob.hash(path, algorithm);\n  }\n\n  function cp(path, dest) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string' || typeof dest !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" and/or \"destination\"')));\n      }\n\n      RNFetchBlob.cp(path, dest, function (err, res) {\n        if (err) reject(addCode('EUNSPECIFIED', new Error(err)));else resolve(res);\n      });\n    });\n  }\n\n  function mv(path, dest) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string' || typeof dest !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" and/or \"destination\"')));\n      }\n\n      RNFetchBlob.mv(path, dest, function (err, res) {\n        if (err) reject(addCode('EUNSPECIFIED', new Error(err)));else resolve(res);\n      });\n    });\n  }\n\n  function lstat(path) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n      }\n\n      RNFetchBlob.lstat(path, function (err, stat) {\n        if (err) reject(addCode('EUNSPECIFIED', new Error(err)));else resolve(stat);\n      });\n    });\n  }\n\n  function ls(path) {\n    if (typeof path !== 'string') {\n      return Promise.reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n    }\n\n    return RNFetchBlob.ls(path);\n  }\n\n  function unlink(path) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n      }\n\n      RNFetchBlob.unlink(path, function (err) {\n        if (err) {\n          reject(addCode('EUNSPECIFIED', new Error(err)));\n        } else resolve();\n      });\n    });\n  }\n\n  function exists(path) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n      }\n\n      try {\n        RNFetchBlob.exists(path, function (exist) {\n          resolve(exist);\n        });\n      } catch (err) {\n        reject(addCode('EUNSPECIFIED', new Error(err)));\n      }\n    });\n  }\n\n  function slice(src, dest, start, end) {\n    if (typeof src !== 'string' || typeof dest !== 'string') {\n      return reject(addCode('EINVAL', new TypeError('Missing argument \"src\" and/or \"destination\"')));\n    }\n\n    var p = Promise.resolve();\n    var size = 0;\n\n    function normalize(num, size) {\n      if (num < 0) return Math.max(0, size + num);\n      if (!num && num !== 0) return size;\n      return num;\n    }\n\n    if (start < 0 || end < 0 || !start || !end) {\n      p = p.then(function () {\n        return stat(src);\n      }).then(function (stat) {\n        size = Math.floor(stat.size);\n        start = normalize(start || 0, size);\n        end = normalize(end, size);\n      });\n    }\n\n    return p.then(function () {\n      return RNFetchBlob.slice(src, dest, start, end);\n    });\n  }\n\n  function isDir(path) {\n    return new Promise(function (resolve, reject) {\n      if (typeof path !== 'string') {\n        return reject(addCode('EINVAL', new TypeError('Missing argument \"path\" ')));\n      }\n\n      try {\n        RNFetchBlob.exists(path, function (exist, isDir) {\n          resolve(isDir);\n        });\n      } catch (err) {\n        reject(addCode('EUNSPECIFIED', new Error(err)));\n      }\n    });\n  }\n\n  function df() {\n    return new Promise(function (resolve, reject) {\n      RNFetchBlob.df(function (err, stat) {\n        if (err) reject(addCode('EUNSPECIFIED', new Error(err)));else resolve(stat);\n      });\n    });\n  }\n\n  var _default = {\n    RNFetchBlobSession: _RNFetchBlobSession.default,\n    unlink: unlink,\n    mkdir: mkdir,\n    session: session,\n    ls: ls,\n    readStream: readStream,\n    mv: mv,\n    cp: cp,\n    writeStream: writeStream,\n    writeFile: writeFile,\n    appendFile: appendFile,\n    pathForAppGroup: pathForAppGroup,\n    readFile: readFile,\n    hash: hash,\n    exists: exists,\n    createFile: createFile,\n    isDir: isDir,\n    stat: stat,\n    lstat: lstat,\n    scanFile: scanFile,\n    dirs: dirs,\n    slice: slice,\n    asset: asset,\n    df: df\n  };\n  exports.default = _default;\n});","map":[[7,0,7,0],[9,0,8,0],[11,0,9,0],[13,0,10,0],[15,0,11,0],[19,0,13,0],[19,6,13,6,"RNFetchBlob"],[19,20,13,39,"NativeModules"],[19,47,13,53,"RNFetchBlob"],[19,58,13,0],[20,0,15,0],[20,6,15,6,"dirs"],[20,13,15,13],[21,0,16,2,"DocumentDir"],[21,17,16,17,"RNFetchBlob"],[21,29,16,29,"DocumentDir"],[21,40,15,13],[22,0,17,2,"CacheDir"],[22,14,17,13,"RNFetchBlob"],[22,26,17,25,"CacheDir"],[22,34,15,13],[23,0,18,2,"PictureDir"],[23,16,18,15,"RNFetchBlob"],[23,28,18,27,"PictureDir"],[23,38,15,13],[24,0,19,2,"MusicDir"],[24,14,19,13,"RNFetchBlob"],[24,26,19,25,"MusicDir"],[24,34,15,13],[25,0,20,2,"MovieDir"],[25,14,20,13,"RNFetchBlob"],[25,26,20,25,"MovieDir"],[25,34,15,13],[26,0,21,2,"DownloadDir"],[26,17,21,16,"RNFetchBlob"],[26,29,21,28,"DownloadDir"],[26,40,15,13],[27,0,22,2,"DCIMDir"],[27,13,22,12,"RNFetchBlob"],[27,25,22,24,"DCIMDir"],[27,32,15,13],[28,0,23,2,"SDCardDir"],[28,15,23,13,"RNFetchBlob"],[28,27,23,25,"SDCardDir"],[28,36,15,13],[29,0,24,2,"SDCardApplicationDir"],[29,26,24,24,"RNFetchBlob"],[29,38,24,36,"SDCardApplicationDir"],[29,58,15,13],[30,0,25,2,"MainBundleDir"],[30,19,25,18,"RNFetchBlob"],[30,31,25,30,"MainBundleDir"],[30,44,15,13],[31,0,26,2,"LibraryDir"],[31,16,26,15,"RNFetchBlob"],[31,28,26,27,"LibraryDir"],[32,0,15,13],[32,3,15,0],[34,0,29,0],[34,11,29,9,"addCode"],[34,18,29,0],[34,19,29,17,"code"],[34,23,29,0],[34,25,29,31,"error"],[34,30,29,0],[34,32,29,52],[35,0,30,2,"error"],[35,10,30,8,"code"],[35,14,30,2],[35,17,30,15,"code"],[35,21,30,2],[36,0,31,2],[36,11,31,9,"error"],[36,16,31,2],[37,0,32,1],[39,0,39,0],[39,11,39,9,"session"],[39,18,39,0],[39,19,39,17,"name"],[39,23,39,0],[39,25,39,51],[40,0,40,2],[40,8,40,6,"s"],[40,12,40,10,"RNFetchBlobSession"],[40,40,40,29,"getSession"],[40,50,40,10],[40,51,40,40,"name"],[40,55,40,10],[40,56,40,2],[42,0,41,2],[42,8,41,6,"s"],[42,9,41,2],[42,11,42,4],[42,18,42,11],[42,22,42,15,"RNFetchBlobSession"],[42,49,42,11],[42,50,42,34,"name"],[42,54,42,11],[42,55,42,4],[42,56,41,2],[42,61,43,7],[43,0,44,4,"RNFetchBlobSession"],[43,34,44,23,"setSession"],[43,44,44,4],[43,45,44,34,"name"],[43,49,44,4],[43,51,44,40],[43,53,44,4],[45,0,45,4],[45,13,45,11],[45,17,45,15,"RNFetchBlobSession"],[45,44,45,11],[45,45,45,34,"name"],[45,49,45,11],[45,51,45,40],[45,53,45,11],[45,54,45,4],[46,0,46,3],[47,0,47,1],[49,0,49,0],[49,11,49,9,"asset"],[49,16,49,0],[49,17,49,15,"path"],[49,21,49,0],[49,23,49,37],[50,0,50,2],[50,8,50,6,"Platform"],[50,30,50,15,"OS"],[50,32,50,6],[50,37,50,22],[50,42,50,2],[50,44,50,29],[51,0,52,4],[51,10,52,8],[51,34,52,32,"test"],[51,38,52,8],[51,39,52,37,"path"],[51,43,52,8],[51,44,52,4],[51,46,53,6],[51,53,53,13,"path"],[51,57,53,6],[52,0,54,3],[54,0,55,2],[54,11,55,9],[54,32,55,30,"path"],[54,36,55,2],[55,0,56,1],[57,0,58,0],[57,11,58,9,"createFile"],[57,21,58,0],[57,22,58,20,"path"],[57,26,58,0],[57,28,58,34,"data"],[57,32,58,0],[57,34,58,113],[58,0,58,113],[58,8,58,48,"encoding"],[58,16,58,113],[58,87,58,88],[58,93,58,113],[60,0,59,2],[60,8,59,6,"encoding"],[60,17,59,15,"toLowerCase"],[60,28,59,6],[60,35,59,33],[60,42,59,2],[60,44,59,42],[61,0,60,4],[61,13,60,11,"Array"],[61,19,60,17,"isArray"],[61,26,60,11],[61,27,60,25,"data"],[61,31,60,11],[61,35,61,6,"RNFetchBlob"],[61,47,61,18,"createFileASCII"],[61,62,61,6],[61,63,61,34,"path"],[61,67,61,6],[61,69,61,40,"data"],[61,73,61,6],[61,74,60,11],[61,77,62,6,"Promise"],[61,85,62,14,"reject"],[61,91,62,6],[61,92,62,21,"addCode"],[61,100,62,29],[61,108,62,21],[61,110,62,39],[61,114,62,43,"TypeError"],[61,123,62,39],[61,124,62,53],[61,183,62,39],[61,184,62,21],[61,185,62,6],[61,186,60,4],[62,0,63,3],[62,5,59,2],[62,11,64,7],[63,0,65,4],[63,13,65,11,"RNFetchBlob"],[63,25,65,23,"createFile"],[63,35,65,11],[63,36,65,34,"path"],[63,40,65,11],[63,42,65,40,"data"],[63,46,65,11],[63,48,65,46,"encoding"],[63,56,65,11],[63,57,65,4],[64,0,66,3],[65,0,67,1],[67,0,76,0],[67,11,76,9,"writeStream"],[67,22,76,0],[67,23,77,2,"path"],[67,27,76,0],[67,29,80,35],[68,0,80,35],[68,8,78,2,"encoding"],[68,16,80,35],[68,87,78,43],[68,93,80,35],[69,0,80,35],[69,8,79,2,"append"],[69,14,80,35],[69,85,79,21],[69,90,80,35],[71,0,81,2],[71,8,81,6],[71,15,81,13,"path"],[71,19,81,6],[71,24,81,22],[71,32,81,2],[71,34,81,32],[72,0,82,4],[72,13,82,11,"Promise"],[72,21,82,19,"reject"],[72,27,82,11],[72,28,82,26,"addCode"],[72,36,82,34],[72,44,82,26],[72,46,82,44],[72,50,82,48,"TypeError"],[72,59,82,44],[72,60,82,58],[72,86,82,44],[72,87,82,26],[72,88,82,11],[72,89,82,4],[73,0,83,3],[75,0,84,2],[75,11,84,9],[75,15,84,13,"Promise"],[75,22,84,9],[75,23,84,21],[75,33,84,22,"resolve"],[75,40,84,21],[75,42,84,31,"reject"],[75,48,84,21],[75,50,84,42],[76,0,85,4,"RNFetchBlob"],[76,18,85,16,"writeStream"],[76,29,85,4],[76,30,85,28,"path"],[76,34,85,4],[76,36,85,34,"encoding"],[76,44,85,4],[76,46,85,44,"append"],[76,52,85,4],[76,54,85,52],[76,64,85,53,"errCode"],[76,71,85,52],[76,73,85,62,"errMsg"],[76,79,85,52],[76,81,85,70,"streamId"],[76,89,85,52],[76,91,85,91],[77,0,86,6],[77,12,86,10,"errMsg"],[77,18,86,6],[77,20,86,18],[78,0,87,8],[78,14,87,14,"err"],[78,20,87,20],[78,24,87,24,"Error"],[78,29,87,20],[78,30,87,30,"errMsg"],[78,36,87,20],[78,37,87,8],[79,0,88,8,"err"],[79,14,88,12,"code"],[79,18,88,8],[79,21,88,19,"errCode"],[79,28,88,8],[80,0,89,8,"reject"],[80,17,89,15,"err"],[80,20,89,8],[81,0,90,7],[81,9,86,6],[81,15,92,8,"resolve"],[81,23,92,16],[81,27,92,20,"RNFetchBlobWriteStream"],[81,58,92,16],[81,59,92,43,"streamId"],[81,67,92,16],[81,69,92,53,"encoding"],[81,77,92,16],[81,78,92,8],[82,0,93,5],[82,7,85,4],[83,0,94,3],[83,5,84,9],[83,6,84,2],[84,0,95,1],[86,0,105,0],[86,11,105,9,"readStream"],[86,21,105,0],[86,22,106,2,"path"],[86,26,105,0],[86,28,110,34],[87,0,110,34],[87,8,107,2,"encoding"],[87,16,110,34],[87,87,107,42],[87,93,110,34],[88,0,110,34],[88,8,108,2,"bufferSize"],[88,18,110,34],[89,0,110,34],[89,8,109,2,"tick"],[89,12,110,34],[89,83,109,18],[89,85,110,34],[91,0,111,2],[91,8,111,6],[91,15,111,13,"path"],[91,19,111,6],[91,24,111,22],[91,32,111,2],[91,34,111,32],[92,0,112,4],[92,13,112,11,"Promise"],[92,21,112,19,"reject"],[92,27,112,11],[92,28,112,26,"addCode"],[92,36,112,34],[92,44,112,26],[92,46,112,44],[92,50,112,48,"TypeError"],[92,59,112,44],[92,60,112,58],[92,86,112,44],[92,87,112,26],[92,88,112,11],[92,89,112,4],[93,0,113,3],[95,0,114,2],[95,11,114,9,"Promise"],[95,19,114,17,"resolve"],[95,26,114,9],[95,27,114,25],[95,31,114,29,"RNFetchBlobReadStream"],[95,61,114,25],[95,62,114,51,"path"],[95,66,114,25],[95,68,114,57,"encoding"],[95,76,114,25],[95,78,114,67,"bufferSize"],[95,88,114,25],[95,90,114,79,"tick"],[95,94,114,25],[95,95,114,9],[95,96,114,2],[96,0,115,1],[98,0,122,0],[98,11,122,9,"mkdir"],[98,16,122,0],[98,17,122,15,"path"],[98,21,122,0],[98,23,122,38],[99,0,123,2],[99,8,123,6],[99,15,123,13,"path"],[99,19,123,6],[99,24,123,22],[99,32,123,2],[99,34,123,32],[100,0,124,4],[100,13,124,11,"Promise"],[100,21,124,19,"reject"],[100,27,124,11],[100,28,124,26,"addCode"],[100,36,124,34],[100,44,124,26],[100,46,124,44],[100,50,124,48,"TypeError"],[100,59,124,44],[100,60,124,58],[100,86,124,44],[100,87,124,26],[100,88,124,11],[100,89,124,4],[101,0,125,3],[103,0,126,2],[103,11,126,9,"RNFetchBlob"],[103,23,126,21,"mkdir"],[103,28,126,9],[103,29,126,27,"path"],[103,33,126,9],[103,34,126,2],[104,0,127,1],[106,0,134,0],[106,11,134,9,"pathForAppGroup"],[106,26,134,0],[106,27,134,25,"groupName"],[106,36,134,0],[106,38,134,53],[107,0,135,2],[107,11,135,9,"RNFetchBlob"],[107,23,135,21,"pathForAppGroup"],[107,38,135,9],[107,39,135,37,"groupName"],[107,48,135,9],[107,49,135,2],[108,0,136,1],[110,0,144,0],[110,11,144,9,"readFile"],[110,19,144,0],[110,20,144,18,"path"],[110,24,144,0],[110,26,144,73],[111,0,144,73],[111,8,144,32,"encoding"],[111,16,144,73],[111,87,144,51],[111,93,144,73],[113,0,145,2],[113,8,145,6],[113,15,145,13,"path"],[113,19,145,6],[113,24,145,22],[113,32,145,2],[113,34,145,32],[114,0,146,4],[114,13,146,11,"Promise"],[114,21,146,19,"reject"],[114,27,146,11],[114,28,146,26,"addCode"],[114,36,146,34],[114,44,146,26],[114,46,146,44],[114,50,146,48,"TypeError"],[114,59,146,44],[114,60,146,58],[114,86,146,44],[114,87,146,26],[114,88,146,11],[114,89,146,4],[115,0,147,3],[117,0,148,2],[117,11,148,9,"RNFetchBlob"],[117,23,148,21,"readFile"],[117,31,148,9],[117,32,148,30,"path"],[117,36,148,9],[117,38,148,36,"encoding"],[117,46,148,9],[117,47,148,2],[118,0,149,1],[120,0,158,0],[120,11,158,9,"writeFile"],[120,20,158,0],[120,21,158,19,"path"],[120,25,158,0],[120,27,158,33,"data"],[120,31,158,0],[120,33,158,100],[121,0,158,100],[121,8,158,63,"encoding"],[121,16,158,100],[121,87,158,83],[121,93,158,100],[123,0,159,2],[123,8,159,6],[123,15,159,13,"path"],[123,19,159,6],[123,24,159,22],[123,32,159,2],[123,34,159,32],[124,0,160,4],[124,13,160,11,"Promise"],[124,21,160,19,"reject"],[124,27,160,11],[124,28,160,26,"addCode"],[124,36,160,34],[124,44,160,26],[124,46,160,44],[124,50,160,48,"TypeError"],[124,59,160,44],[124,60,160,58],[124,86,160,44],[124,87,160,26],[124,88,160,11],[124,89,160,4],[125,0,161,3],[127,0,162,2],[127,8,162,6,"encoding"],[127,17,162,15,"toLocaleLowerCase"],[127,34,162,6],[127,41,162,39],[127,48,162,2],[127,50,162,48],[128,0,163,4],[128,10,163,8],[128,11,163,9,"Array"],[128,17,163,15,"isArray"],[128,24,163,9],[128,25,163,23,"data"],[128,29,163,9],[128,30,163,4],[128,32,163,30],[129,0,164,6],[129,15,164,13,"Promise"],[129,23,164,21,"reject"],[129,29,164,13],[129,30,164,28,"addCode"],[129,38,164,36],[129,46,164,28],[129,48,164,46],[129,52,164,50,"TypeError"],[129,61,164,46],[129,62,164,60],[129,112,164,46],[129,113,164,28],[129,114,164,13],[129,115,164,6],[130,0,165,5],[130,7,163,4],[130,13,167,6],[130,20,167,13,"RNFetchBlob"],[130,32,167,25,"writeFileArray"],[130,46,167,13],[130,47,167,40,"path"],[130,51,167,13],[130,53,167,46,"data"],[130,57,167,13],[130,59,167,52],[130,64,167,13],[130,65,167,6],[131,0,168,3],[131,5,162,2],[131,11,169,7],[132,0,170,4],[132,10,170,8],[132,17,170,15,"data"],[132,21,170,8],[132,26,170,24],[132,34,170,4],[132,36,170,34],[133,0,171,6],[133,15,171,13,"Promise"],[133,23,171,21,"reject"],[133,29,171,13],[133,30,171,28,"addCode"],[133,38,171,36],[133,46,171,28],[133,48,171,46],[133,52,171,50,"TypeError"],[133,61,171,46],[133,146,171,135],[133,153,171,142,"data"],[133,157,171,46],[133,165,171,28],[133,166,171,13],[133,167,171,6],[134,0,172,5],[134,7,170,4],[134,13,174,6],[134,20,174,13,"RNFetchBlob"],[134,32,174,25,"writeFile"],[134,41,174,13],[134,42,174,35,"path"],[134,46,174,13],[134,48,174,41,"encoding"],[134,56,174,13],[134,58,174,51,"data"],[134,62,174,13],[134,64,174,57],[134,69,174,13],[134,70,174,6],[135,0,175,3],[136,0,176,1],[138,0,178,0],[138,11,178,9,"appendFile"],[138,21,178,0],[138,22,178,20,"path"],[138,26,178,0],[138,28,178,34,"data"],[138,32,178,0],[138,34,178,109],[139,0,178,109],[139,8,178,64,"encoding"],[139,16,178,109],[139,87,178,84],[139,93,178,109],[141,0,179,2],[141,8,179,6],[141,15,179,13,"path"],[141,19,179,6],[141,24,179,22],[141,32,179,2],[141,34,179,32],[142,0,180,4],[142,13,180,11,"Promise"],[142,21,180,19,"reject"],[142,27,180,11],[142,28,180,26,"addCode"],[142,36,180,34],[142,44,180,26],[142,46,180,44],[142,50,180,48,"TypeError"],[142,59,180,44],[142,60,180,58],[142,86,180,44],[142,87,180,26],[142,88,180,11],[142,89,180,4],[143,0,181,3],[145,0,182,2],[145,8,182,6,"encoding"],[145,17,182,15,"toLocaleLowerCase"],[145,34,182,6],[145,41,182,39],[145,48,182,2],[145,50,182,48],[146,0,183,4],[146,10,183,8],[146,11,183,9,"Array"],[146,17,183,15,"isArray"],[146,24,183,9],[146,25,183,23,"data"],[146,29,183,9],[146,30,183,4],[146,32,183,30],[147,0,184,6],[147,15,184,13,"Promise"],[147,23,184,21,"reject"],[147,29,184,13],[147,30,184,28,"addCode"],[147,38,184,36],[147,46,184,28],[147,48,184,46],[147,52,184,50,"TypeError"],[147,61,184,46],[147,62,184,60],[147,121,184,46],[147,122,184,28],[147,123,184,13],[147,124,184,6],[148,0,185,5],[148,7,183,4],[148,13,187,6],[148,20,187,13,"RNFetchBlob"],[148,32,187,25,"writeFileArray"],[148,46,187,13],[148,47,187,40,"path"],[148,51,187,13],[148,53,187,46,"data"],[148,57,187,13],[148,59,187,52],[148,63,187,13],[148,64,187,6],[149,0,188,3],[149,5,182,2],[149,11,189,7],[150,0,190,4],[150,10,190,8],[150,17,190,15,"data"],[150,21,190,8],[150,26,190,24],[150,34,190,4],[150,36,190,34],[151,0,191,6],[151,15,191,13,"Promise"],[151,23,191,21,"reject"],[151,29,191,13],[151,30,191,28,"addCode"],[151,38,191,36],[151,46,191,28],[151,47,191,13],[151,49,191,47],[151,53,191,51,"TypeError"],[151,62,191,47],[151,147,191,136],[151,154,191,143,"data"],[151,158,191,47],[151,166,191,13],[151,167,191,6],[152,0,192,5],[152,7,190,4],[152,13,194,6],[152,20,194,13,"RNFetchBlob"],[152,32,194,25,"writeFile"],[152,41,194,13],[152,42,194,35,"path"],[152,46,194,13],[152,48,194,41,"encoding"],[152,56,194,13],[152,58,194,51,"data"],[152,62,194,13],[152,64,194,57],[152,68,194,13],[152,69,194,6],[153,0,195,3],[154,0,196,1],[156,0,203,0],[156,11,203,9,"stat"],[156,15,203,0],[156,16,203,14,"path"],[156,20,203,0],[156,22,203,54],[157,0,204,2],[157,11,204,9],[157,15,204,13,"Promise"],[157,22,204,9],[157,23,204,21],[157,33,204,22,"resolve"],[157,40,204,21],[157,42,204,31,"reject"],[157,48,204,21],[157,50,204,42],[158,0,205,4],[158,10,205,8],[158,17,205,15,"path"],[158,21,205,8],[158,26,205,24],[158,34,205,4],[158,36,205,34],[159,0,206,6],[159,15,206,13,"reject"],[159,22,206,20,"addCode"],[159,30,206,28],[159,38,206,20],[159,40,206,38],[159,44,206,42,"TypeError"],[159,53,206,38],[159,54,206,52],[159,80,206,38],[159,81,206,20],[159,82,206,13],[159,83,206,6],[160,0,207,5],[162,0,208,4,"RNFetchBlob"],[162,18,208,16,"stat"],[162,22,208,4],[162,23,208,21,"path"],[162,27,208,4],[162,29,208,27],[162,39,208,28,"err"],[162,42,208,27],[162,44,208,33,"stat"],[162,48,208,27],[162,50,208,42],[163,0,209,6],[163,12,209,10,"err"],[163,15,209,6],[163,17,210,8,"reject"],[163,24,210,15],[163,28,210,19,"Error"],[163,33,210,15],[163,34,210,25,"err"],[163,37,210,15],[163,38,210,8],[163,40,209,6],[163,45,211,11],[164,0,212,8],[164,14,212,12,"stat"],[164,18,212,8],[164,20,212,18],[165,0,213,10,"stat"],[165,17,213,15,"size"],[165,21,213,10],[165,24,213,22,"parseInt"],[165,33,213,31,"stat"],[165,38,213,36,"size"],[165,42,213,22],[165,43,213,10],[166,0,214,10,"stat"],[166,17,214,15,"lastModified"],[166,29,214,10],[166,32,214,30,"parseInt"],[166,41,214,39,"stat"],[166,46,214,44,"lastModified"],[166,58,214,30],[166,59,214,10],[167,0,215,9],[169,0,216,8,"resolve"],[169,18,216,16,"stat"],[169,22,216,8],[170,0,217,7],[171,0,218,5],[171,7,208,4],[172,0,219,3],[172,5,204,9],[172,6,204,2],[173,0,220,1],[175,0,227,0],[175,11,227,9,"scanFile"],[175,19,227,0],[175,20,227,18,"pairs"],[175,25,227,0],[175,27,227,39],[176,0,228,2],[176,11,228,9],[176,15,228,13,"Promise"],[176,22,228,9],[176,23,228,21],[176,33,228,22,"resolve"],[176,40,228,21],[176,42,228,31,"reject"],[176,48,228,21],[176,50,228,42],[177,0,229,4],[177,10,229,8,"pairs"],[177,20,229,18,"undefined"],[177,29,229,4],[177,31,229,29],[178,0,230,6],[178,15,230,13,"reject"],[178,22,230,20,"addCode"],[178,30,230,28],[178,38,230,20],[178,40,230,38],[178,44,230,42,"TypeError"],[178,53,230,38],[178,54,230,52],[178,72,230,38],[178,73,230,20],[178,74,230,13],[178,75,230,6],[179,0,231,5],[181,0,232,4,"RNFetchBlob"],[181,18,232,16,"scanFile"],[181,26,232,4],[181,27,232,25,"pairs"],[181,32,232,4],[181,34,232,32],[181,44,232,33,"err"],[181,47,232,32],[181,49,232,41],[182,0,233,6],[182,12,233,10,"err"],[182,15,233,6],[182,17,234,8,"reject"],[182,24,234,15,"addCode"],[182,32,234,23],[182,46,234,15],[182,48,234,39],[182,52,234,43,"Error"],[182,57,234,39],[182,58,234,49,"err"],[182,61,234,39],[182,62,234,15],[182,63,234,8],[182,65,233,6],[182,70,236,8,"resolve"],[183,0,237,5],[183,7,232,4],[184,0,238,3],[184,5,228,9],[184,6,228,2],[185,0,239,1],[187,0,241,0],[187,11,241,9,"hash"],[187,15,241,0],[187,16,241,14,"path"],[187,20,241,0],[187,22,241,28,"algorithm"],[187,31,241,0],[187,33,241,64],[188,0,242,2],[188,8,242,6],[188,15,242,13,"path"],[188,19,242,6],[188,24,242,22],[188,32,242,6],[188,36,242,34],[188,43,242,41,"algorithm"],[188,52,242,34],[188,57,242,55],[188,65,242,2],[188,67,242,65],[189,0,243,4],[189,13,243,11,"Promise"],[189,21,243,19,"reject"],[189,27,243,11],[189,28,243,26,"addCode"],[189,36,243,34],[189,44,243,26],[189,46,243,44],[189,50,243,48,"TypeError"],[189,59,243,44],[189,60,243,58],[189,104,243,44],[189,105,243,26],[189,106,243,11],[189,107,243,4],[190,0,244,3],[192,0,245,2],[192,11,245,9,"RNFetchBlob"],[192,23,245,21,"hash"],[192,27,245,9],[192,28,245,26,"path"],[192,32,245,9],[192,34,245,32,"algorithm"],[192,43,245,9],[192,44,245,2],[193,0,246,1],[195,0,248,0],[195,11,248,9,"cp"],[195,13,248,0],[195,14,248,12,"path"],[195,18,248,0],[195,20,248,26,"dest"],[195,24,248,0],[195,26,248,58],[196,0,249,2],[196,11,249,9],[196,15,249,13,"Promise"],[196,22,249,9],[196,23,249,21],[196,33,249,22,"resolve"],[196,40,249,21],[196,42,249,31,"reject"],[196,48,249,21],[196,50,249,42],[197,0,250,4],[197,10,250,8],[197,17,250,15,"path"],[197,21,250,8],[197,26,250,24],[197,34,250,8],[197,38,250,36],[197,45,250,43,"dest"],[197,49,250,36],[197,54,250,52],[197,62,250,4],[197,64,250,62],[198,0,251,6],[198,15,251,13,"reject"],[198,22,251,20,"addCode"],[198,30,251,28],[198,38,251,20],[198,40,251,38],[198,44,251,42,"TypeError"],[198,53,251,38],[198,54,251,52],[198,100,251,38],[198,101,251,20],[198,102,251,13],[198,103,251,6],[199,0,252,5],[201,0,253,4,"RNFetchBlob"],[201,18,253,16,"cp"],[201,20,253,4],[201,21,253,19,"path"],[201,25,253,4],[201,27,253,25,"dest"],[201,31,253,4],[201,33,253,31],[201,43,253,32,"err"],[201,46,253,31],[201,48,253,37,"res"],[201,51,253,31],[201,53,253,45],[202,0,254,6],[202,12,254,10,"err"],[202,15,254,6],[202,17,255,8,"reject"],[202,24,255,15,"addCode"],[202,32,255,23],[202,46,255,15],[202,48,255,39],[202,52,255,43,"Error"],[202,57,255,39],[202,58,255,49,"err"],[202,61,255,39],[202,62,255,15],[202,63,255,8],[202,65,254,6],[202,70,257,8,"resolve"],[202,78,257,16,"res"],[202,81,257,8],[203,0,258,5],[203,7,253,4],[204,0,259,3],[204,5,249,9],[204,6,249,2],[205,0,260,1],[207,0,262,0],[207,11,262,9,"mv"],[207,13,262,0],[207,14,262,12,"path"],[207,18,262,0],[207,20,262,26,"dest"],[207,24,262,0],[207,26,262,58],[208,0,263,2],[208,11,263,9],[208,15,263,13,"Promise"],[208,22,263,9],[208,23,263,21],[208,33,263,22,"resolve"],[208,40,263,21],[208,42,263,31,"reject"],[208,48,263,21],[208,50,263,42],[209,0,264,4],[209,10,264,8],[209,17,264,15,"path"],[209,21,264,8],[209,26,264,24],[209,34,264,8],[209,38,264,36],[209,45,264,43,"dest"],[209,49,264,36],[209,54,264,52],[209,62,264,4],[209,64,264,62],[210,0,265,6],[210,15,265,13,"reject"],[210,22,265,20,"addCode"],[210,30,265,28],[210,38,265,20],[210,40,265,38],[210,44,265,42,"TypeError"],[210,53,265,38],[210,54,265,52],[210,100,265,38],[210,101,265,20],[210,102,265,13],[210,103,265,6],[211,0,266,5],[213,0,267,4,"RNFetchBlob"],[213,18,267,16,"mv"],[213,20,267,4],[213,21,267,19,"path"],[213,25,267,4],[213,27,267,25,"dest"],[213,31,267,4],[213,33,267,31],[213,43,267,32,"err"],[213,46,267,31],[213,48,267,37,"res"],[213,51,267,31],[213,53,267,45],[214,0,268,6],[214,12,268,10,"err"],[214,15,268,6],[214,17,269,8,"reject"],[214,24,269,15,"addCode"],[214,32,269,23],[214,46,269,15],[214,48,269,39],[214,52,269,43,"Error"],[214,57,269,39],[214,58,269,49,"err"],[214,61,269,39],[214,62,269,15],[214,63,269,8],[214,65,268,6],[214,70,271,8,"resolve"],[214,78,271,16,"res"],[214,81,271,8],[215,0,272,5],[215,7,267,4],[216,0,273,3],[216,5,263,9],[216,6,263,2],[217,0,274,1],[219,0,276,0],[219,11,276,9,"lstat"],[219,16,276,0],[219,17,276,15,"path"],[219,21,276,0],[219,23,276,62],[220,0,277,2],[220,11,277,9],[220,15,277,13,"Promise"],[220,22,277,9],[220,23,277,21],[220,33,277,22,"resolve"],[220,40,277,21],[220,42,277,31,"reject"],[220,48,277,21],[220,50,277,42],[221,0,278,4],[221,10,278,8],[221,17,278,15,"path"],[221,21,278,8],[221,26,278,24],[221,34,278,4],[221,36,278,34],[222,0,279,6],[222,15,279,13,"reject"],[222,22,279,20,"addCode"],[222,30,279,28],[222,38,279,20],[222,40,279,38],[222,44,279,42,"TypeError"],[222,53,279,38],[222,54,279,52],[222,80,279,38],[222,81,279,20],[222,82,279,13],[222,83,279,6],[223,0,280,5],[225,0,281,4,"RNFetchBlob"],[225,18,281,16,"lstat"],[225,23,281,4],[225,24,281,22,"path"],[225,28,281,4],[225,30,281,28],[225,40,281,29,"err"],[225,43,281,28],[225,45,281,34,"stat"],[225,49,281,28],[225,51,281,43],[226,0,282,6],[226,12,282,10,"err"],[226,15,282,6],[226,17,283,8,"reject"],[226,24,283,15,"addCode"],[226,32,283,23],[226,46,283,15],[226,48,283,39],[226,52,283,43,"Error"],[226,57,283,39],[226,58,283,49,"err"],[226,61,283,39],[226,62,283,15],[226,63,283,8],[226,65,282,6],[226,70,285,8,"resolve"],[226,78,285,16,"stat"],[226,82,285,8],[227,0,286,5],[227,7,281,4],[228,0,287,3],[228,5,277,9],[228,6,277,2],[229,0,288,1],[231,0,290,0],[231,11,290,9,"ls"],[231,13,290,0],[231,14,290,12,"path"],[231,18,290,0],[231,20,290,50],[232,0,291,2],[232,8,291,6],[232,15,291,13,"path"],[232,19,291,6],[232,24,291,22],[232,32,291,2],[232,34,291,32],[233,0,292,4],[233,13,292,11,"Promise"],[233,21,292,19,"reject"],[233,27,292,11],[233,28,292,26,"addCode"],[233,36,292,34],[233,44,292,26],[233,46,292,44],[233,50,292,48,"TypeError"],[233,59,292,44],[233,60,292,58],[233,86,292,44],[233,87,292,26],[233,88,292,11],[233,89,292,4],[234,0,293,3],[236,0,294,2],[236,11,294,9,"RNFetchBlob"],[236,23,294,21,"ls"],[236,25,294,9],[236,26,294,24,"path"],[236,30,294,9],[236,31,294,2],[237,0,295,1],[239,0,302,0],[239,11,302,9,"unlink"],[239,17,302,0],[239,18,302,16,"path"],[239,22,302,0],[239,24,302,39],[240,0,303,2],[240,11,303,9],[240,15,303,13,"Promise"],[240,22,303,9],[240,23,303,21],[240,33,303,22,"resolve"],[240,40,303,21],[240,42,303,31,"reject"],[240,48,303,21],[240,50,303,42],[241,0,304,4],[241,10,304,8],[241,17,304,15,"path"],[241,21,304,8],[241,26,304,24],[241,34,304,4],[241,36,304,34],[242,0,305,6],[242,15,305,13,"reject"],[242,22,305,20,"addCode"],[242,30,305,28],[242,38,305,20],[242,40,305,38],[242,44,305,42,"TypeError"],[242,53,305,38],[242,54,305,52],[242,80,305,38],[242,81,305,20],[242,82,305,13],[242,83,305,6],[243,0,306,5],[245,0,307,4,"RNFetchBlob"],[245,18,307,16,"unlink"],[245,24,307,4],[245,25,307,23,"path"],[245,29,307,4],[245,31,307,29],[245,41,307,30,"err"],[245,44,307,29],[245,46,307,38],[246,0,308,6],[246,12,308,10,"err"],[246,15,308,6],[246,17,308,15],[247,0,309,8,"reject"],[247,17,309,15,"addCode"],[247,25,309,23],[247,39,309,15],[247,41,309,39],[247,45,309,43,"Error"],[247,50,309,39],[247,51,309,49,"err"],[247,54,309,39],[247,55,309,15],[247,56,309,8],[248,0,310,7],[248,9,308,6],[248,15,312,8,"resolve"],[249,0,313,5],[249,7,307,4],[250,0,314,3],[250,5,303,9],[250,6,303,2],[251,0,315,1],[253,0,322,0],[253,11,322,9,"exists"],[253,17,322,0],[253,18,322,16,"path"],[253,22,322,0],[253,24,322,48],[254,0,323,2],[254,11,323,9],[254,15,323,13,"Promise"],[254,22,323,9],[254,23,323,21],[254,33,323,22,"resolve"],[254,40,323,21],[254,42,323,31,"reject"],[254,48,323,21],[254,50,323,42],[255,0,324,4],[255,10,324,8],[255,17,324,15,"path"],[255,21,324,8],[255,26,324,24],[255,34,324,4],[255,36,324,34],[256,0,325,6],[256,15,325,13,"reject"],[256,22,325,20,"addCode"],[256,30,325,28],[256,38,325,20],[256,40,325,38],[256,44,325,42,"TypeError"],[256,53,325,38],[256,54,325,52],[256,80,325,38],[256,81,325,20],[256,82,325,13],[256,83,325,6],[257,0,326,5],[259,0,327,4],[259,10,327,8],[260,0,328,6,"RNFetchBlob"],[260,20,328,18,"exists"],[260,26,328,6],[260,27,328,25,"path"],[260,31,328,6],[260,33,328,31],[260,43,328,32,"exist"],[260,48,328,31],[260,50,328,42],[261,0,329,8,"resolve"],[261,18,329,16,"exist"],[261,23,329,8],[262,0,330,7],[262,9,328,6],[263,0,331,5],[263,7,327,4],[263,8,331,5],[263,15,331,12,"err"],[263,18,331,5],[263,20,331,16],[264,0,332,6,"reject"],[264,15,332,13,"addCode"],[264,23,332,21],[264,37,332,13],[264,39,332,37],[264,43,332,41,"Error"],[264,48,332,37],[264,49,332,47,"err"],[264,52,332,37],[264,53,332,13],[264,54,332,6],[265,0,333,5],[266,0,334,3],[266,5,323,9],[266,6,323,2],[267,0,336,1],[269,0,338,0],[269,11,338,9,"slice"],[269,16,338,0],[269,17,338,15,"src"],[269,20,338,0],[269,22,338,28,"dest"],[269,26,338,0],[269,28,338,42,"start"],[269,33,338,0],[269,35,338,57,"end"],[269,38,338,0],[269,40,338,79],[270,0,339,2],[270,8,339,6],[270,15,339,13,"src"],[270,18,339,6],[270,23,339,21],[270,31,339,6],[270,35,339,33],[270,42,339,40,"dest"],[270,46,339,33],[270,51,339,49],[270,59,339,2],[270,61,339,59],[271,0,340,4],[271,13,340,11,"reject"],[271,20,340,18,"addCode"],[271,28,340,26],[271,36,340,18],[271,38,340,36],[271,42,340,40,"TypeError"],[271,51,340,36],[271,52,340,50],[271,97,340,36],[271,98,340,18],[271,99,340,11],[271,100,340,4],[272,0,341,3],[274,0,343,2],[274,8,343,6,"p"],[274,12,343,10,"Promise"],[274,20,343,18,"resolve"],[274,27,343,10],[274,29,343,2],[275,0,344,2],[275,8,344,6,"size"],[275,15,344,13],[275,16,344,2],[277,0,346,2],[277,13,346,11,"normalize"],[277,22,346,2],[277,23,346,21,"num"],[277,26,346,2],[277,28,346,26,"size"],[277,32,346,2],[277,34,346,32],[278,0,347,4],[278,10,347,8,"num"],[278,16,347,14],[278,17,347,4],[278,19,348,6],[278,26,348,13,"Math"],[278,31,348,18,"max"],[278,34,348,13],[278,35,348,22],[278,36,348,13],[278,38,348,25,"size"],[278,45,348,32,"num"],[278,48,348,13],[278,49,348,6],[279,0,349,4],[279,10,349,8],[279,11,349,9,"num"],[279,14,349,8],[279,18,349,16,"num"],[279,26,349,24],[279,27,349,4],[279,29,350,6],[279,36,350,13,"size"],[279,40,350,6],[280,0,351,4],[280,13,351,11,"num"],[280,16,351,4],[281,0,352,3],[283,0,354,2],[283,8,354,6,"start"],[283,16,354,14],[283,17,354,6],[283,21,354,19,"end"],[283,27,354,25],[283,28,354,6],[283,32,354,30],[283,33,354,31,"start"],[283,38,354,6],[283,42,354,40],[283,43,354,41,"end"],[283,46,354,2],[283,48,354,46],[284,0,355,4,"p"],[284,10,355,8,"p"],[284,12,355,10,"then"],[284,16,355,8],[284,17,355,15],[285,0,355,15],[285,15,355,21,"stat"],[285,20,355,26,"src"],[285,23,355,21],[285,24,355,15],[286,0,355,15],[286,7,355,8],[286,9,356,7,"then"],[286,13,355,8],[286,14,356,12],[286,24,356,13,"stat"],[286,28,356,12],[286,30,356,22],[287,0,357,8,"size"],[287,15,357,15,"Math"],[287,20,357,20,"floor"],[287,25,357,15],[287,26,357,26,"stat"],[287,31,357,31,"size"],[287,35,357,15],[287,36,357,8],[288,0,358,8,"start"],[288,16,358,16,"normalize"],[288,26,358,26,"start"],[288,35,358,35],[288,36,358,16],[288,38,358,38,"size"],[288,42,358,16],[288,43,358,8],[289,0,359,8,"end"],[289,14,359,14,"normalize"],[289,24,359,24,"end"],[289,27,359,14],[289,29,359,29,"size"],[289,33,359,14],[289,34,359,8],[290,0,360,7],[290,7,355,8],[290,8,355,4],[291,0,361,3],[293,0,362,2],[293,11,362,9,"p"],[293,13,362,11,"then"],[293,17,362,9],[293,18,362,16],[294,0,362,16],[294,13,362,22,"RNFetchBlob"],[294,25,362,34,"slice"],[294,30,362,22],[294,31,362,40,"src"],[294,34,362,22],[294,36,362,45,"dest"],[294,40,362,22],[294,42,362,51,"start"],[294,47,362,22],[294,49,362,58,"end"],[294,52,362,22],[294,53,362,16],[295,0,362,16],[295,5,362,9],[295,6,362,2],[296,0,363,1],[298,0,365,0],[298,11,365,9,"isDir"],[298,16,365,0],[298,17,365,15,"path"],[298,21,365,0],[298,23,365,44],[299,0,366,2],[299,11,366,9],[299,15,366,13,"Promise"],[299,22,366,9],[299,23,366,21],[299,33,366,22,"resolve"],[299,40,366,21],[299,42,366,31,"reject"],[299,48,366,21],[299,50,366,42],[300,0,367,4],[300,10,367,8],[300,17,367,15,"path"],[300,21,367,8],[300,26,367,24],[300,34,367,4],[300,36,367,34],[301,0,368,6],[301,15,368,13,"reject"],[301,22,368,20,"addCode"],[301,30,368,28],[301,38,368,20],[301,40,368,38],[301,44,368,42,"TypeError"],[301,53,368,38],[301,54,368,52],[301,80,368,38],[301,81,368,20],[301,82,368,13],[301,83,368,6],[302,0,369,5],[304,0,370,4],[304,10,370,8],[305,0,371,6,"RNFetchBlob"],[305,20,371,18,"exists"],[305,26,371,6],[305,27,371,25,"path"],[305,31,371,6],[305,33,371,31],[305,43,371,32,"exist"],[305,48,371,31],[305,50,371,39,"isDir"],[305,55,371,31],[305,57,371,49],[306,0,372,8,"resolve"],[306,18,372,16,"isDir"],[306,23,372,8],[307,0,373,7],[307,9,371,6],[308,0,374,5],[308,7,370,4],[308,8,374,5],[308,15,374,12,"err"],[308,18,374,5],[308,20,374,16],[309,0,375,6,"reject"],[309,15,375,13,"addCode"],[309,23,375,21],[309,37,375,13],[309,39,375,37],[309,43,375,41,"Error"],[309,48,375,37],[309,49,375,47,"err"],[309,52,375,37],[309,53,375,13],[309,54,375,6],[310,0,376,5],[311,0,377,3],[311,5,366,9],[311,6,366,2],[312,0,379,1],[314,0,381,0],[314,11,381,9,"df"],[314,13,381,0],[314,16,381,56],[315,0,382,2],[315,11,382,9],[315,15,382,13,"Promise"],[315,22,382,9],[315,23,382,21],[315,33,382,22,"resolve"],[315,40,382,21],[315,42,382,31,"reject"],[315,48,382,21],[315,50,382,42],[316,0,383,4,"RNFetchBlob"],[316,18,383,16,"df"],[316,20,383,4],[316,21,383,19],[316,31,383,20,"err"],[316,34,383,19],[316,36,383,25,"stat"],[316,40,383,19],[316,42,383,34],[317,0,384,6],[317,12,384,10,"err"],[317,15,384,6],[317,17,385,8,"reject"],[317,24,385,15,"addCode"],[317,32,385,23],[317,46,385,15],[317,48,385,39],[317,52,385,43,"Error"],[317,57,385,39],[317,58,385,49,"err"],[317,61,385,39],[317,62,385,15],[317,63,385,8],[317,65,384,6],[317,70,387,8,"resolve"],[317,78,387,16,"stat"],[317,82,387,8],[318,0,388,5],[318,7,383,4],[319,0,389,3],[319,5,382,9],[319,6,382,2],[320,0,390,1],[322,17,392,15],[323,0,393,2,"RNFetchBlobSession"],[323,51,392,15],[324,0,394,2,"unlink"],[324,18,392,15],[325,0,395,2,"mkdir"],[325,16,392,15],[326,0,396,2,"session"],[326,20,392,15],[327,0,397,2,"ls"],[327,10,392,15],[328,0,398,2,"readStream"],[328,26,392,15],[329,0,399,2,"mv"],[329,10,392,15],[330,0,400,2,"cp"],[330,10,392,15],[331,0,401,2,"writeStream"],[331,28,392,15],[332,0,402,2,"writeFile"],[332,24,392,15],[333,0,403,2,"appendFile"],[333,26,392,15],[334,0,404,2,"pathForAppGroup"],[334,36,392,15],[335,0,405,2,"readFile"],[335,22,392,15],[336,0,406,2,"hash"],[336,14,392,15],[337,0,407,2,"exists"],[337,18,392,15],[338,0,408,2,"createFile"],[338,26,392,15],[339,0,409,2,"isDir"],[339,16,392,15],[340,0,410,2,"stat"],[340,14,392,15],[341,0,411,2,"lstat"],[341,16,392,15],[342,0,412,2,"scanFile"],[342,22,392,15],[343,0,413,2,"dirs"],[343,14,392,15],[344,0,414,2,"slice"],[344,16,392,15],[345,0,415,2,"asset"],[345,16,392,15],[346,0,416,2,"df"],[347,0,392,15],[347,3]]},"type":"js/module"}]}