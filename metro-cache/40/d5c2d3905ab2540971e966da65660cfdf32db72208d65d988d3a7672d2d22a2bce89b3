{"dependencies":[{"name":"./_baseToString","isAsync":false},{"name":"./_castSlice","isAsync":false},{"name":"./_charsStartIndex","isAsync":false},{"name":"./_stringToArray","isAsync":false},{"name":"./toString","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var baseToString = _$$_REQUIRE(_dependencyMap[0], './_baseToString'),\n      castSlice = _$$_REQUIRE(_dependencyMap[1], './_castSlice'),\n      charsStartIndex = _$$_REQUIRE(_dependencyMap[2], './_charsStartIndex'),\n      stringToArray = _$$_REQUIRE(_dependencyMap[3], './_stringToArray'),\n      toString = _$$_REQUIRE(_dependencyMap[4], './toString');\n\n  var reTrimStart = /^\\s+/;\n\n  function trimStart(string, chars, guard) {\n    string = toString(string);\n\n    if (string && (guard || chars === undefined)) {\n      return string.replace(reTrimStart, '');\n    }\n\n    if (!string || !(chars = baseToString(chars))) {\n      return string;\n    }\n\n    var strSymbols = stringToArray(string),\n        start = charsStartIndex(strSymbols, stringToArray(chars));\n    return castSlice(strSymbols, start).join('');\n  }\n\n  module.exports = trimStart;\n});","map":[[2,0,1,0],[2,6,1,4,"baseToString"],[2,21,1,19,"require"],[2,52,1,27],[2,69,1,19],[2,70,1,0],[3,0,1,0],[3,6,2,4,"castSlice"],[3,18,2,16,"require"],[3,49,2,24],[3,63,2,16],[3,64,1,0],[4,0,1,0],[4,6,3,4,"charsStartIndex"],[4,24,3,22,"require"],[4,55,3,30],[4,75,3,22],[4,76,1,0],[5,0,1,0],[5,6,4,4,"stringToArray"],[5,22,4,20,"require"],[5,53,4,28],[5,71,4,20],[5,72,1,0],[6,0,1,0],[6,6,5,4,"toString"],[6,17,5,15,"require"],[6,48,5,23],[6,60,5,15],[6,61,1,0],[8,0,8,0],[8,6,8,4,"reTrimStart"],[8,20,8,18],[8,26,8,0],[10,0,29,0],[10,11,29,9,"trimStart"],[10,20,29,0],[10,21,29,19,"string"],[10,27,29,0],[10,29,29,27,"chars"],[10,34,29,0],[10,36,29,34,"guard"],[10,41,29,0],[10,43,29,41],[11,0,30,2,"string"],[11,13,30,11,"toString"],[11,22,30,20,"string"],[11,28,30,11],[11,29,30,2],[13,0,31,2],[13,8,31,6,"string"],[13,19,31,17,"guard"],[13,28,31,26,"chars"],[13,38,31,36,"undefined"],[13,47,31,6],[13,48,31,2],[13,50,31,48],[14,0,32,4],[14,13,32,11,"string"],[14,20,32,18,"replace"],[14,27,32,11],[14,28,32,26,"reTrimStart"],[14,39,32,11],[14,41,32,39],[14,43,32,11],[14,44,32,4],[15,0,33,3],[17,0,34,2],[17,8,34,6],[17,9,34,7,"string"],[17,15,34,6],[17,19,34,17],[17,21,34,19,"chars"],[17,29,34,27,"baseToString"],[17,42,34,40,"chars"],[17,47,34,27],[17,48,34,17],[17,49,34,2],[17,51,34,49],[18,0,35,4],[18,13,35,11,"string"],[18,19,35,4],[19,0,36,3],[21,0,37,2],[21,8,37,6,"strSymbols"],[21,21,37,19,"stringToArray"],[21,35,37,33,"string"],[21,41,37,19],[21,42,37,2],[22,0,37,2],[22,8,38,6,"start"],[22,16,38,14,"charsStartIndex"],[22,32,38,30,"strSymbols"],[22,42,38,14],[22,44,38,42,"stringToArray"],[22,58,38,56,"chars"],[22,63,38,42],[22,64,38,14],[22,65,37,2],[23,0,40,2],[23,11,40,9,"castSlice"],[23,21,40,19,"strSymbols"],[23,31,40,9],[23,33,40,31,"start"],[23,38,40,9],[23,40,40,38,"join"],[23,44,40,9],[23,45,40,43],[23,47,40,9],[23,48,40,2],[24,0,41,1],[26,0,43,0,"module"],[26,9,43,7,"exports"],[26,16,43,0],[26,19,43,17,"trimStart"],[26,28,43,0]]},"type":"js/module"}]}