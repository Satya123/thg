{"dependencies":[{"name":"fbjs/lib/emptyFunction","isAsync":false},{"name":"fbjs/lib/invariant","isAsync":false},{"name":"./lib/ReactPropTypesSecret","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  var emptyFunction = _$$_REQUIRE(_dependencyMap[0], 'fbjs/lib/emptyFunction');\n\n  var invariant = _$$_REQUIRE(_dependencyMap[1], 'fbjs/lib/invariant');\n\n  var ReactPropTypesSecret = _$$_REQUIRE(_dependencyMap[2], './lib/ReactPropTypesSecret');\n\n  module.exports = function () {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n      if (secret === ReactPropTypesSecret) {\n        return;\n      }\n\n      invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    }\n\n    ;\n    shim.isRequired = shim;\n\n    function getShim() {\n      return shim;\n    }\n\n    ;\n    var ReactPropTypes = {\n      array: shim,\n      bool: shim,\n      func: shim,\n      number: shim,\n      object: shim,\n      string: shim,\n      symbol: shim,\n      any: shim,\n      arrayOf: getShim,\n      element: shim,\n      instanceOf: getShim,\n      node: shim,\n      objectOf: getShim,\n      oneOf: getShim,\n      oneOfType: getShim,\n      shape: getShim\n    };\n    ReactPropTypes.checkPropTypes = emptyFunction;\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n});","map":[[2,0,10,0],[4,0,12,0],[4,6,12,4,"emptyFunction"],[4,22,12,20,"require"],[4,53,12,28],[4,77,12,20],[4,78,12,0],[6,0,13,0],[6,6,13,4,"invariant"],[6,18,13,16,"require"],[6,49,13,24],[6,69,13,16],[6,70,13,0],[8,0,14,0],[8,6,14,4,"ReactPropTypesSecret"],[8,29,14,27,"require"],[8,60,14,35],[8,88,14,27],[8,89,14,0],[10,0,16,0,"module"],[10,9,16,7,"exports"],[10,16,16,0],[10,19,16,17],[10,31,16,28],[11,0,17,2],[11,13,17,11,"shim"],[11,17,17,2],[11,18,17,16,"props"],[11,23,17,2],[11,25,17,23,"propName"],[11,33,17,2],[11,35,17,33,"componentName"],[11,48,17,2],[11,50,17,48,"location"],[11,58,17,2],[11,60,17,58,"propFullName"],[11,72,17,2],[11,74,17,72,"secret"],[11,80,17,2],[11,82,17,80],[12,0,18,4],[12,10,18,8,"secret"],[12,21,18,19,"ReactPropTypesSecret"],[12,41,18,4],[12,43,18,41],[13,0,20,6],[14,0,21,5],[16,0,22,4,"invariant"],[16,16,23,6],[16,21,22,4],[16,23,24,6],[16,112,25,6],[16,159,24,6],[16,162,26,6],[16,210,22,4],[17,0,28,3],[19,0,28,3],[20,0,29,2,"shim"],[20,9,29,7,"isRequired"],[20,19,29,2],[20,22,29,20,"shim"],[20,26,29,2],[22,0,30,2],[22,13,30,11,"getShim"],[22,20,30,2],[22,23,30,21],[23,0,31,4],[23,13,31,11,"shim"],[23,17,31,4],[24,0,32,3],[26,0,32,3],[27,0,35,2],[27,8,35,6,"ReactPropTypes"],[27,25,35,23],[28,0,36,4,"array"],[28,13,36,11,"shim"],[28,17,35,23],[29,0,37,4,"bool"],[29,12,37,10,"shim"],[29,16,35,23],[30,0,38,4,"func"],[30,12,38,10,"shim"],[30,16,35,23],[31,0,39,4,"number"],[31,14,39,12,"shim"],[31,18,35,23],[32,0,40,4,"object"],[32,14,40,12,"shim"],[32,18,35,23],[33,0,41,4,"string"],[33,14,41,12,"shim"],[33,18,35,23],[34,0,42,4,"symbol"],[34,14,42,12,"shim"],[34,18,35,23],[35,0,44,4,"any"],[35,11,44,9,"shim"],[35,15,35,23],[36,0,45,4,"arrayOf"],[36,15,45,13,"getShim"],[36,22,35,23],[37,0,46,4,"element"],[37,15,46,13,"shim"],[37,19,35,23],[38,0,47,4,"instanceOf"],[38,18,47,16,"getShim"],[38,25,35,23],[39,0,48,4,"node"],[39,12,48,10,"shim"],[39,16,35,23],[40,0,49,4,"objectOf"],[40,16,49,14,"getShim"],[40,23,35,23],[41,0,50,4,"oneOf"],[41,13,50,11,"getShim"],[41,20,35,23],[42,0,51,4,"oneOfType"],[42,17,51,15,"getShim"],[42,24,35,23],[43,0,52,4,"shape"],[43,13,52,11,"getShim"],[44,0,35,23],[44,5,35,2],[45,0,55,2,"ReactPropTypes"],[45,19,55,17,"checkPropTypes"],[45,33,55,2],[45,36,55,34,"emptyFunction"],[45,49,55,2],[46,0,56,2,"ReactPropTypes"],[46,19,56,17,"PropTypes"],[46,28,56,2],[46,31,56,29,"ReactPropTypes"],[46,45,56,2],[47,0,58,2],[47,11,58,9,"ReactPropTypes"],[47,25,58,2],[48,0,59,1],[48,3,16,0]]},"type":"js/module"}]}