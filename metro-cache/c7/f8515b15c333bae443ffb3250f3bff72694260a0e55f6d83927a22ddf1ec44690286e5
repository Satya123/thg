{"dependencies":[{"name":"./fsmIterator","isAsync":false},{"name":"../io","isAsync":false},{"name":"../channel","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  exports.__esModule = true;\n  exports.default = takeEvery;\n\n  var _fsmIterator = _$$_REQUIRE(_dependencyMap[0], './fsmIterator');\n\n  var _fsmIterator2 = _interopRequireDefault(_fsmIterator);\n\n  var _io = _$$_REQUIRE(_dependencyMap[1], '../io');\n\n  var _channel = _$$_REQUIRE(_dependencyMap[2], '../channel');\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function takeEvery(patternOrChannel, worker) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    var yTake = {\n      done: false,\n      value: (0, _io.take)(patternOrChannel)\n    };\n\n    var yFork = function yFork(ac) {\n      return {\n        done: false,\n        value: _io.fork.apply(undefined, [worker].concat(args, [ac]))\n      };\n    };\n\n    var action = void 0,\n        setAction = function setAction(ac) {\n      return action = ac;\n    };\n\n    return (0, _fsmIterator2.default)({\n      q1: function q1() {\n        return ['q2', yTake, setAction];\n      },\n      q2: function q2() {\n        return action === _channel.END ? [_fsmIterator.qEnd] : ['q1', yFork(action)];\n      }\n    }, 'q1', 'takeEvery(' + (0, _fsmIterator.safeName)(patternOrChannel) + ', ' + worker.name + ')');\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"exports"],[4,10,3,8,"__esModule"],[4,20,3,0],[4,23,3,21],[4,27,3,0],[5,0,4,0,"exports"],[5,10,4,8,"default"],[5,17,4,0],[5,20,4,18,"takeEvery"],[5,29,4,0],[7,0,6,0],[7,6,6,4,"_fsmIterator"],[7,21,6,19,"require"],[7,52,6,27],[7,67,6,19],[7,68,6,0],[9,0,8,0],[9,6,8,4,"_fsmIterator2"],[9,22,8,20,"_interopRequireDefault"],[9,45,8,43,"_fsmIterator"],[9,57,8,20],[9,58,8,0],[11,0,10,0],[11,6,10,4,"_io"],[11,12,10,10,"require"],[11,43,10,18],[11,50,10,10],[11,51,10,0],[13,0,12,0],[13,6,12,4,"_channel"],[13,17,12,15,"require"],[13,48,12,23],[13,60,12,15],[13,61,12,0],[15,0,14,0],[15,11,14,9,"_interopRequireDefault"],[15,33,14,0],[15,34,14,32,"obj"],[15,37,14,0],[15,39,14,37],[16,0,14,39],[16,11,14,46,"obj"],[16,18,14,53,"obj"],[16,22,14,57,"__esModule"],[16,32,14,46],[16,35,14,70,"obj"],[16,38,14,46],[16,41,14,76],[17,0,14,78,"default"],[17,15,14,87,"obj"],[18,0,14,76],[18,5,14,39],[19,0,14,95],[21,0,16,0],[21,11,16,9,"takeEvery"],[21,20,16,0],[21,21,16,19,"patternOrChannel"],[21,37,16,0],[21,39,16,37,"worker"],[21,45,16,0],[21,47,16,45],[22,0,17,2],[22,9,17,7],[22,13,17,11,"_len"],[22,20,17,18,"arguments"],[22,30,17,28,"length"],[22,36,17,7],[22,38,17,36,"args"],[22,45,17,43,"Array"],[22,51,17,49,"_len"],[22,58,17,56],[22,59,17,49],[22,62,17,60,"_len"],[22,69,17,67],[22,70,17,49],[22,73,17,71],[22,74,17,43],[22,75,17,7],[22,77,17,75,"_key"],[22,84,17,82],[22,85,17,2],[22,87,17,85,"_key"],[22,94,17,92,"_len"],[22,98,17,2],[22,100,17,98,"_key"],[22,106,17,2],[22,108,17,106],[23,0,18,4,"args"],[23,11,18,9,"_key"],[23,18,18,16],[23,19,18,4],[23,23,18,21,"arguments"],[23,33,18,31,"_key"],[23,37,18,21],[23,38,18,4],[24,0,19,3],[26,0,21,2],[26,8,21,6,"yTake"],[26,16,21,14],[27,0,21,16,"done"],[27,12,21,22],[27,17,21,14],[28,0,21,29,"value"],[28,13,21,36],[28,14,21,37],[28,17,21,40,"_io"],[28,21,21,44,"take"],[28,25,21,36],[28,27,21,50,"patternOrChannel"],[28,43,21,36],[29,0,21,14],[29,5,21,2],[31,0,22,2],[31,8,22,6,"yFork"],[31,16,22,14],[31,25,22,23,"yFork"],[31,30,22,14],[31,31,22,29,"ac"],[31,33,22,14],[31,35,22,33],[32,0,23,4],[32,13,23,11],[33,0,23,13,"done"],[33,14,23,19],[33,19,23,11],[34,0,23,26,"value"],[34,15,23,33,"_io"],[34,19,23,37,"fork"],[34,23,23,33],[34,24,23,42,"apply"],[34,29,23,33],[34,30,23,48,"undefined"],[34,39,23,33],[34,41,23,59],[34,42,23,60,"worker"],[34,48,23,59],[34,50,23,68,"concat"],[34,56,23,59],[34,57,23,75,"args"],[34,61,23,59],[34,63,23,81],[34,64,23,82,"ac"],[34,66,23,81],[34,67,23,59],[34,68,23,33],[35,0,23,11],[35,7,23,4],[36,0,24,3],[36,5,22,2],[38,0,26,2],[38,8,26,6,"action"],[38,17,26,15],[38,22,26,20],[38,23,26,2],[39,0,26,2],[39,8,27,6,"setAction"],[39,20,27,18],[39,29,27,27,"setAction"],[39,38,27,18],[39,39,27,37,"ac"],[39,41,27,18],[39,43,27,41],[40,0,28,4],[40,13,28,11,"action"],[40,22,28,20,"ac"],[40,24,28,4],[41,0,29,3],[41,5,26,2],[43,0,31,2],[43,11,31,9],[43,12,31,10],[43,15,31,13,"_fsmIterator2"],[43,29,31,27,"default"],[43,36,31,9],[43,38,31,36],[44,0,32,4,"q1"],[44,10,32,8],[44,19,32,17,"q1"],[44,21,32,8],[44,24,32,22],[45,0,33,6],[45,15,33,13],[45,16,33,14],[45,20,33,13],[45,22,33,20,"yTake"],[45,27,33,13],[45,29,33,27,"setAction"],[45,38,33,13],[45,39,33,6],[46,0,34,5],[46,7,31,36],[47,0,35,4,"q2"],[47,10,35,8],[47,19,35,17,"q2"],[47,21,35,8],[47,24,35,22],[48,0,36,6],[48,15,36,13,"action"],[48,26,36,24,"_channel"],[48,35,36,33,"END"],[48,38,36,13],[48,41,36,39],[48,42,36,40,"_fsmIterator"],[48,55,36,53,"qEnd"],[48,59,36,39],[48,60,36,13],[48,63,36,61],[48,64,36,62],[48,68,36,61],[48,70,36,68,"yFork"],[48,76,36,74,"action"],[48,82,36,68],[48,83,36,61],[48,84,36,6],[49,0,37,5],[50,0,31,36],[50,5,31,9],[50,7,38,5],[50,11,31,9],[50,13,38,11],[50,28,38,26],[50,29,38,27],[50,32,38,30,"_fsmIterator"],[50,45,38,43,"safeName"],[50,53,38,26],[50,55,38,53,"patternOrChannel"],[50,71,38,26],[50,72,38,11],[50,75,38,73],[50,79,38,11],[50,82,38,80,"worker"],[50,89,38,87,"name"],[50,93,38,11],[50,96,38,94],[50,99,31,9],[50,100,31,2],[51,0,39,1]]},"type":"js/module"}]}