{"dependencies":[{"name":"./_curry2","isAsync":false},{"name":"./_reduced","isAsync":false},{"name":"./_xfBase","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], './_curry2');\n\n  var _reduced = _$$_REQUIRE(_dependencyMap[1], './_reduced');\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], './_xfBase');\n\n  module.exports = function () {\n    function XFindIndex(f, xf) {\n      this.xf = xf;\n      this.f = f;\n      this.idx = -1;\n      this.found = false;\n    }\n\n    XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n    XFindIndex.prototype['@@transducer/result'] = function (result) {\n      if (!this.found) {\n        result = this.xf['@@transducer/step'](result, -1);\n      }\n\n      return this.xf['@@transducer/result'](result);\n    };\n\n    XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n      this.idx += 1;\n\n      if (this.f(input)) {\n        this.found = true;\n        result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n      }\n\n      return result;\n    };\n\n    return _curry2(function _xfindIndex(f, xf) {\n      return new XFindIndex(f, xf);\n    });\n  }();\n});","map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,16,1,14,"require"],[2,47,1,22],[2,58,1,14],[2,59,1,0],[4,0,2,0],[4,6,2,4,"_reduced"],[4,17,2,15,"require"],[4,48,2,23],[4,60,2,15],[4,61,2,0],[6,0,3,0],[6,6,3,4,"_xfBase"],[6,16,3,14,"require"],[6,47,3,22],[6,58,3,14],[6,59,3,0],[8,0,6,0,"module"],[8,9,6,7,"exports"],[8,16,6,0],[8,19,6,18],[8,31,6,29],[9,0,7,2],[9,13,7,11,"XFindIndex"],[9,23,7,2],[9,24,7,22,"f"],[9,25,7,2],[9,27,7,25,"xf"],[9,29,7,2],[9,31,7,29],[10,0,8,4],[10,11,8,9,"xf"],[10,13,8,4],[10,16,8,14,"xf"],[10,18,8,4],[11,0,9,4],[11,11,9,9,"f"],[11,12,9,4],[11,15,9,13,"f"],[11,16,9,4],[12,0,10,4],[12,11,10,9,"idx"],[12,14,10,4],[12,17,10,15],[12,18,10,16],[12,19,10,4],[13,0,11,4],[13,11,11,9,"found"],[13,16,11,4],[13,19,11,17],[13,24,11,4],[14,0,12,3],[16,0,13,2,"XFindIndex"],[16,15,13,13,"prototype"],[16,24,13,2],[16,25,13,23],[16,44,13,2],[16,48,13,46,"_xfBase"],[16,56,13,54,"init"],[16,60,13,2],[18,0,14,2,"XFindIndex"],[18,15,14,13,"prototype"],[18,24,14,2],[18,25,14,23],[18,46,14,2],[18,50,14,48],[18,60,14,57,"result"],[18,66,14,48],[18,68,14,65],[19,0,15,4],[19,10,15,8],[19,11,15,9],[19,16,15,14,"found"],[19,21,15,4],[19,23,15,21],[20,0,16,6,"result"],[20,17,16,15],[20,22,16,20,"xf"],[20,24,16,15],[20,25,16,23],[20,44,16,15],[20,46,16,44,"result"],[20,52,16,15],[20,54,16,52],[20,55,16,53],[20,56,16,15],[20,57,16,6],[21,0,17,5],[23,0,18,4],[23,13,18,11],[23,18,18,16,"xf"],[23,20,18,11],[23,21,18,19],[23,42,18,11],[23,44,18,42,"result"],[23,50,18,11],[23,51,18,4],[24,0,19,3],[24,5,14,2],[26,0,20,2,"XFindIndex"],[26,15,20,13,"prototype"],[26,24,20,2],[26,25,20,23],[26,44,20,2],[26,48,20,46],[26,58,20,55,"result"],[26,64,20,46],[26,66,20,63,"input"],[26,71,20,46],[26,73,20,70],[27,0,21,4],[27,11,21,9,"idx"],[27,14,21,4],[27,18,21,16],[27,19,21,4],[29,0,22,4],[29,10,22,8],[29,15,22,13,"f"],[29,16,22,8],[29,17,22,15,"input"],[29,22,22,8],[29,23,22,4],[29,25,22,23],[30,0,23,6],[30,13,23,11,"found"],[30,18,23,6],[30,21,23,19],[30,25,23,6],[31,0,24,6,"result"],[31,17,24,15,"_reduced"],[31,26,24,24],[31,31,24,29,"xf"],[31,33,24,24],[31,34,24,32],[31,53,24,24],[31,55,24,53,"result"],[31,61,24,24],[31,63,24,61],[31,68,24,66,"idx"],[31,71,24,24],[31,72,24,15],[31,73,24,6],[32,0,25,5],[34,0,26,4],[34,13,26,11,"result"],[34,19,26,4],[35,0,27,3],[35,5,20,2],[37,0,29,2],[37,11,29,9,"_curry2"],[37,19,29,17],[37,28,29,26,"_xfindIndex"],[37,39,29,17],[37,40,29,38,"f"],[37,41,29,17],[37,43,29,41,"xf"],[37,45,29,17],[37,47,29,45],[38,0,29,47],[38,13,29,54],[38,17,29,58,"XFindIndex"],[38,27,29,54],[38,28,29,69,"f"],[38,29,29,54],[38,31,29,72,"xf"],[38,33,29,54],[38,34,29,47],[39,0,29,78],[39,5,29,9],[39,6,29,2],[40,0,30,1],[40,3,6,18],[40,5,6,0]]},"type":"js/module"}]}