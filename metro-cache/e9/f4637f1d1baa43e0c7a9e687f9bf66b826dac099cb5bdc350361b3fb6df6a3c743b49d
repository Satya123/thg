{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var nativeMax = Math.max;\n\n  function composeArgsRight(args, partials, holders, isCurried) {\n    var argsIndex = -1,\n        argsLength = args.length,\n        holdersIndex = -1,\n        holdersLength = holders.length,\n        rightIndex = -1,\n        rightLength = partials.length,\n        rangeLength = nativeMax(argsLength - holdersLength, 0),\n        result = Array(rangeLength + rightLength),\n        isUncurried = !isCurried;\n\n    while (++argsIndex < rangeLength) {\n      result[argsIndex] = args[argsIndex];\n    }\n\n    var offset = argsIndex;\n\n    while (++rightIndex < rightLength) {\n      result[offset + rightIndex] = partials[rightIndex];\n    }\n\n    while (++holdersIndex < holdersLength) {\n      if (isUncurried || argsIndex < argsLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n    }\n\n    return result;\n  }\n\n  module.exports = composeArgsRight;\n});","map":[[2,0,2,0],[2,6,2,4,"nativeMax"],[2,18,2,16,"Math"],[2,23,2,21,"max"],[2,26,2,0],[4,0,15,0],[4,11,15,9,"composeArgsRight"],[4,27,15,0],[4,28,15,26,"args"],[4,32,15,0],[4,34,15,32,"partials"],[4,42,15,0],[4,44,15,42,"holders"],[4,51,15,0],[4,53,15,51,"isCurried"],[4,62,15,0],[4,64,15,62],[5,0,16,2],[5,8,16,6,"argsIndex"],[5,20,16,18],[5,21,16,19],[5,22,16,2],[6,0,16,2],[6,8,17,6,"argsLength"],[6,21,17,19,"args"],[6,26,17,24,"length"],[6,32,16,2],[7,0,16,2],[7,8,18,6,"holdersIndex"],[7,23,18,21],[7,24,18,22],[7,25,16,2],[8,0,16,2],[8,8,19,6,"holdersLength"],[8,24,19,22,"holders"],[8,32,19,30,"length"],[8,38,16,2],[9,0,16,2],[9,8,20,6,"rightIndex"],[9,21,20,19],[9,22,20,20],[9,23,16,2],[10,0,16,2],[10,8,21,6,"rightLength"],[10,22,21,20,"partials"],[10,31,21,29,"length"],[10,37,16,2],[11,0,16,2],[11,8,22,6,"rangeLength"],[11,22,22,20,"nativeMax"],[11,32,22,30,"argsLength"],[11,45,22,43,"holdersLength"],[11,58,22,20],[11,60,22,58],[11,61,22,20],[11,62,16,2],[12,0,16,2],[12,8,23,6,"result"],[12,17,23,15,"Array"],[12,23,23,21,"rangeLength"],[12,37,23,35,"rightLength"],[12,48,23,15],[12,49,16,2],[13,0,16,2],[13,8,24,6,"isUncurried"],[13,22,24,20],[13,23,24,21,"isCurried"],[13,32,16,2],[15,0,26,2],[15,11,26,9],[15,13,26,11,"argsIndex"],[15,22,26,9],[15,25,26,23,"rangeLength"],[15,36,26,2],[15,38,26,36],[16,0,27,4,"result"],[16,13,27,11,"argsIndex"],[16,22,27,4],[16,26,27,24,"args"],[16,31,27,29,"argsIndex"],[16,40,27,24],[16,41,27,4],[17,0,28,3],[19,0,29,2],[19,8,29,6,"offset"],[19,17,29,15,"argsIndex"],[19,26,29,2],[21,0,30,2],[21,11,30,9],[21,13,30,11,"rightIndex"],[21,23,30,9],[21,26,30,24,"rightLength"],[21,37,30,2],[21,39,30,37],[22,0,31,4,"result"],[22,13,31,11,"offset"],[22,22,31,20,"rightIndex"],[22,32,31,4],[22,36,31,34,"partials"],[22,45,31,43,"rightIndex"],[22,55,31,34],[22,56,31,4],[23,0,32,3],[25,0,33,2],[25,11,33,9],[25,13,33,11,"holdersIndex"],[25,25,33,9],[25,28,33,26,"holdersLength"],[25,41,33,2],[25,43,33,41],[26,0,34,4],[26,10,34,8,"isUncurried"],[26,25,34,23,"argsIndex"],[26,37,34,35,"argsLength"],[26,47,34,4],[26,49,34,47],[27,0,35,6,"result"],[27,15,35,13,"offset"],[27,24,35,22,"holders"],[27,32,35,30,"holdersIndex"],[27,44,35,22],[27,45,35,6],[27,49,35,47,"args"],[27,54,35,52,"argsIndex"],[27,65,35,47],[27,66,35,6],[28,0,36,5],[29,0,37,3],[31,0,38,2],[31,11,38,9,"result"],[31,17,38,2],[32,0,39,1],[34,0,41,0,"module"],[34,9,41,7,"exports"],[34,16,41,0],[34,19,41,17,"composeArgsRight"],[34,35,41,0]]},"type":"js/module"}]}