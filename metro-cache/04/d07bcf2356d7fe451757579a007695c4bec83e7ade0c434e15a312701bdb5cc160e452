{"dependencies":[{"name":"./_assignMergeValue","isAsync":false},{"name":"./_cloneBuffer","isAsync":false},{"name":"./_cloneTypedArray","isAsync":false},{"name":"./_copyArray","isAsync":false},{"name":"./_initCloneObject","isAsync":false},{"name":"./isArguments","isAsync":false},{"name":"./isArray","isAsync":false},{"name":"./isArrayLikeObject","isAsync":false},{"name":"./isBuffer","isAsync":false},{"name":"./isFunction","isAsync":false},{"name":"./isObject","isAsync":false},{"name":"./isPlainObject","isAsync":false},{"name":"./isTypedArray","isAsync":false},{"name":"./_safeGet","isAsync":false},{"name":"./toPlainObject","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var assignMergeValue = _$$_REQUIRE(_dependencyMap[0], './_assignMergeValue'),\n      cloneBuffer = _$$_REQUIRE(_dependencyMap[1], './_cloneBuffer'),\n      cloneTypedArray = _$$_REQUIRE(_dependencyMap[2], './_cloneTypedArray'),\n      copyArray = _$$_REQUIRE(_dependencyMap[3], './_copyArray'),\n      initCloneObject = _$$_REQUIRE(_dependencyMap[4], './_initCloneObject'),\n      isArguments = _$$_REQUIRE(_dependencyMap[5], './isArguments'),\n      isArray = _$$_REQUIRE(_dependencyMap[6], './isArray'),\n      isArrayLikeObject = _$$_REQUIRE(_dependencyMap[7], './isArrayLikeObject'),\n      isBuffer = _$$_REQUIRE(_dependencyMap[8], './isBuffer'),\n      isFunction = _$$_REQUIRE(_dependencyMap[9], './isFunction'),\n      isObject = _$$_REQUIRE(_dependencyMap[10], './isObject'),\n      isPlainObject = _$$_REQUIRE(_dependencyMap[11], './isPlainObject'),\n      isTypedArray = _$$_REQUIRE(_dependencyMap[12], './isTypedArray'),\n      safeGet = _$$_REQUIRE(_dependencyMap[13], './_safeGet'),\n      toPlainObject = _$$_REQUIRE(_dependencyMap[14], './toPlainObject');\n\n  function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n    var objValue = safeGet(object, key),\n        srcValue = safeGet(source, key),\n        stacked = stack.get(srcValue);\n\n    if (stacked) {\n      assignMergeValue(object, key, stacked);\n      return;\n    }\n\n    var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;\n    var isCommon = newValue === undefined;\n\n    if (isCommon) {\n      var isArr = isArray(srcValue),\n          isBuff = !isArr && isBuffer(srcValue),\n          isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n      newValue = srcValue;\n\n      if (isArr || isBuff || isTyped) {\n        if (isArray(objValue)) {\n          newValue = objValue;\n        } else if (isArrayLikeObject(objValue)) {\n          newValue = copyArray(objValue);\n        } else if (isBuff) {\n          isCommon = false;\n          newValue = cloneBuffer(srcValue, true);\n        } else if (isTyped) {\n          isCommon = false;\n          newValue = cloneTypedArray(srcValue, true);\n        } else {\n          newValue = [];\n        }\n      } else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n        newValue = objValue;\n\n        if (isArguments(objValue)) {\n          newValue = toPlainObject(objValue);\n        } else if (!isObject(objValue) || srcIndex && isFunction(objValue)) {\n          newValue = initCloneObject(srcValue);\n        }\n      } else {\n        isCommon = false;\n      }\n    }\n\n    if (isCommon) {\n      stack.set(srcValue, newValue);\n      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n      stack['delete'](srcValue);\n    }\n\n    assignMergeValue(object, key, newValue);\n  }\n\n  module.exports = baseMergeDeep;\n});","map":[[2,0,1,0],[2,6,1,4,"assignMergeValue"],[2,25,1,23,"require"],[2,56,1,31],[2,77,1,23],[2,78,1,0],[3,0,1,0],[3,6,2,4,"cloneBuffer"],[3,20,2,18,"require"],[3,51,2,26],[3,67,2,18],[3,68,1,0],[4,0,1,0],[4,6,3,4,"cloneTypedArray"],[4,24,3,22,"require"],[4,55,3,30],[4,75,3,22],[4,76,1,0],[5,0,1,0],[5,6,4,4,"copyArray"],[5,18,4,16,"require"],[5,49,4,24],[5,63,4,16],[5,64,1,0],[6,0,1,0],[6,6,5,4,"initCloneObject"],[6,24,5,22,"require"],[6,55,5,30],[6,75,5,22],[6,76,1,0],[7,0,1,0],[7,6,6,4,"isArguments"],[7,20,6,18,"require"],[7,51,6,26],[7,66,6,18],[7,67,1,0],[8,0,1,0],[8,6,7,4,"isArray"],[8,16,7,14,"require"],[8,47,7,22],[8,58,7,14],[8,59,1,0],[9,0,1,0],[9,6,8,4,"isArrayLikeObject"],[9,26,8,24,"require"],[9,57,8,32],[9,78,8,24],[9,79,1,0],[10,0,1,0],[10,6,9,4,"isBuffer"],[10,17,9,15,"require"],[10,48,9,23],[10,60,9,15],[10,61,1,0],[11,0,1,0],[11,6,10,4,"isFunction"],[11,19,10,17,"require"],[11,50,10,25],[11,64,10,17],[11,65,1,0],[12,0,1,0],[12,6,11,4,"isObject"],[12,17,11,15,"require"],[12,49,11,23],[12,61,11,15],[12,62,1,0],[13,0,1,0],[13,6,12,4,"isPlainObject"],[13,22,12,20,"require"],[13,54,12,28],[13,71,12,20],[13,72,1,0],[14,0,1,0],[14,6,13,4,"isTypedArray"],[14,21,13,19,"require"],[14,53,13,27],[14,69,13,19],[14,70,1,0],[15,0,1,0],[15,6,14,4,"safeGet"],[15,16,14,14,"require"],[15,48,14,22],[15,60,14,14],[15,61,1,0],[16,0,1,0],[16,6,15,4,"toPlainObject"],[16,22,15,20,"require"],[16,54,15,28],[16,71,15,20],[16,72,1,0],[18,0,32,0],[18,11,32,9,"baseMergeDeep"],[18,24,32,0],[18,25,32,23,"object"],[18,31,32,0],[18,33,32,31,"source"],[18,39,32,0],[18,41,32,39,"key"],[18,44,32,0],[18,46,32,44,"srcIndex"],[18,54,32,0],[18,56,32,54,"mergeFunc"],[18,65,32,0],[18,67,32,65,"customizer"],[18,77,32,0],[18,79,32,77,"stack"],[18,84,32,0],[18,86,32,84],[19,0,33,2],[19,8,33,6,"objValue"],[19,19,33,17,"safeGet"],[19,27,33,25,"object"],[19,33,33,17],[19,35,33,33,"key"],[19,38,33,17],[19,39,33,2],[20,0,33,2],[20,8,34,6,"srcValue"],[20,19,34,17,"safeGet"],[20,27,34,25,"source"],[20,33,34,17],[20,35,34,33,"key"],[20,38,34,17],[20,39,33,2],[21,0,33,2],[21,8,35,6,"stacked"],[21,18,35,16,"stack"],[21,24,35,22,"get"],[21,27,35,16],[21,28,35,26,"srcValue"],[21,36,35,16],[21,37,33,2],[23,0,37,2],[23,8,37,6,"stacked"],[23,15,37,2],[23,17,37,15],[24,0,38,4,"assignMergeValue"],[24,23,38,21,"object"],[24,29,38,4],[24,31,38,29,"key"],[24,34,38,4],[24,36,38,34,"stacked"],[24,43,38,4],[25,0,39,4],[26,0,40,3],[28,0,41,2],[28,8,41,6,"newValue"],[28,19,41,17,"customizer"],[28,32,42,6,"customizer"],[28,43,42,17,"objValue"],[28,51,42,6],[28,53,42,27,"srcValue"],[28,61,42,6],[28,63,42,38,"key"],[28,69,42,44],[28,71,42,6],[28,73,42,49,"object"],[28,79,42,6],[28,81,42,57,"source"],[28,87,42,6],[28,89,42,65,"stack"],[28,94,42,6],[28,95,41,17],[28,98,43,6,"undefined"],[28,107,41,2],[29,0,45,2],[29,8,45,6,"isCommon"],[29,19,45,17,"newValue"],[29,32,45,30,"undefined"],[29,41,45,2],[31,0,47,2],[31,8,47,6,"isCommon"],[31,16,47,2],[31,18,47,16],[32,0,48,4],[32,10,48,8,"isArr"],[32,18,48,16,"isArray"],[32,26,48,24,"srcValue"],[32,34,48,16],[32,35,48,4],[33,0,48,4],[33,10,49,8,"isBuff"],[33,19,49,17],[33,20,49,18,"isArr"],[33,25,49,17],[33,29,49,27,"isBuffer"],[33,38,49,36,"srcValue"],[33,46,49,27],[33,47,48,4],[34,0,48,4],[34,10,50,8,"isTyped"],[34,20,50,18],[34,21,50,19,"isArr"],[34,26,50,18],[34,30,50,28],[34,31,50,29,"isBuff"],[34,37,50,18],[34,41,50,39,"isTypedArray"],[34,54,50,52,"srcValue"],[34,62,50,39],[34,63,48,4],[35,0,52,4,"newValue"],[35,17,52,15,"srcValue"],[35,25,52,4],[37,0,53,4],[37,10,53,8,"isArr"],[37,19,53,17,"isBuff"],[37,25,53,8],[37,29,53,27,"isTyped"],[37,36,53,4],[37,38,53,36],[38,0,54,6],[38,12,54,10,"isArray"],[38,20,54,18,"objValue"],[38,28,54,10],[38,29,54,6],[38,31,54,29],[39,0,55,8,"newValue"],[39,21,55,19,"objValue"],[39,29,55,8],[40,0,56,7],[40,9,54,6],[40,15,57,11],[40,19,57,15,"isArrayLikeObject"],[40,37,57,33,"objValue"],[40,45,57,15],[40,46,57,11],[40,48,57,44],[41,0,58,8,"newValue"],[41,21,58,19,"copyArray"],[41,31,58,29,"objValue"],[41,39,58,19],[41,40,58,8],[42,0,59,7],[42,9,57,11],[42,15,60,11],[42,19,60,15,"isBuff"],[42,25,60,11],[42,27,60,23],[43,0,61,8,"isCommon"],[43,21,61,19],[43,26,61,8],[44,0,62,8,"newValue"],[44,21,62,19,"cloneBuffer"],[44,33,62,31,"srcValue"],[44,41,62,19],[44,43,62,41],[44,47,62,19],[44,48,62,8],[45,0,63,7],[45,9,60,11],[45,15,64,11],[45,19,64,15,"isTyped"],[45,26,64,11],[45,28,64,24],[46,0,65,8,"isCommon"],[46,21,65,19],[46,26,65,8],[47,0,66,8,"newValue"],[47,21,66,19,"cloneTypedArray"],[47,37,66,35,"srcValue"],[47,45,66,19],[47,47,66,45],[47,51,66,19],[47,52,66,8],[48,0,67,7],[48,9,64,11],[48,15,68,11],[49,0,69,8,"newValue"],[49,21,69,19],[49,23,69,8],[50,0,70,7],[51,0,71,5],[51,7,53,4],[51,13,72,9],[51,17,72,13,"isPlainObject"],[51,31,72,27,"srcValue"],[51,39,72,13],[51,44,72,40,"isArguments"],[51,56,72,52,"srcValue"],[51,64,72,40],[51,65,72,9],[51,67,72,63],[52,0,73,6,"newValue"],[52,19,73,17,"objValue"],[52,27,73,6],[54,0,74,6],[54,12,74,10,"isArguments"],[54,24,74,22,"objValue"],[54,32,74,10],[54,33,74,6],[54,35,74,33],[55,0,75,8,"newValue"],[55,21,75,19,"toPlainObject"],[55,35,75,33,"objValue"],[55,43,75,19],[55,44,75,8],[56,0,76,7],[56,9,74,6],[56,15,77,11],[56,19,77,15],[56,20,77,16,"isObject"],[56,29,77,25,"objValue"],[56,37,77,16],[56,38,77,15],[56,42,77,39,"srcIndex"],[56,54,77,51,"isFunction"],[56,65,77,62,"objValue"],[56,73,77,51],[56,74,77,11],[56,76,77,74],[57,0,78,8,"newValue"],[57,21,78,19,"initCloneObject"],[57,37,78,35,"srcValue"],[57,45,78,19],[57,46,78,8],[58,0,79,7],[59,0,80,5],[59,7,72,9],[59,13,81,9],[60,0,82,6,"isCommon"],[60,19,82,17],[60,24,82,6],[61,0,83,5],[62,0,84,3],[64,0,85,2],[64,8,85,6,"isCommon"],[64,16,85,2],[64,18,85,16],[65,0,87,4,"stack"],[65,12,87,10,"set"],[65,15,87,4],[65,16,87,14,"srcValue"],[65,24,87,4],[65,26,87,24,"newValue"],[65,34,87,4],[66,0,88,4,"mergeFunc"],[66,16,88,14,"newValue"],[66,24,88,4],[66,26,88,24,"srcValue"],[66,34,88,4],[66,36,88,34,"srcIndex"],[66,44,88,4],[66,46,88,44,"customizer"],[66,56,88,4],[66,58,88,56,"stack"],[66,63,88,4],[67,0,89,4,"stack"],[67,12,89,10],[67,20,89,4],[67,22,89,20,"srcValue"],[67,30,89,4],[68,0,90,3],[70,0,91,2,"assignMergeValue"],[70,21,91,19,"object"],[70,27,91,2],[70,29,91,27,"key"],[70,32,91,2],[70,34,91,32,"newValue"],[70,42,91,2],[71,0,92,1],[73,0,94,0,"module"],[73,9,94,7,"exports"],[73,16,94,0],[73,19,94,17,"baseMergeDeep"],[73,32,94,0]]},"type":"js/module"}]}