{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-native-material-ripple","isAsync":false},{"name":"./styles","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _reactNativeMaterialRipple = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"react-native-material-ripple\"));\n\n  var _styles = _$$_REQUIRE(_dependencyMap[5], \"./styles\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/var/www/html/thg/node_modules/react-native-material-buttons/src/components/button/index.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  var _components = {\n    Button: {\n      displayName: \"Button\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/var/www/html/thg/node_modules/react-native-material-buttons/src/components/button/index.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var Button = _wrapComponent(\"Button\")((_temp = _class = function (_PureComponent) {\n    function Button(props) {\n      var _this;\n\n      _classCallCheck(this, Button);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Button).call(this, props));\n      _this.onPress = _this.onPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.onPressIn = _this.onPressIn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.onPressOut = _this.onPressOut.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.state = {\n        focusAnimation: _this.props.focusAnimation || new _reactNative.Animated.Value(0)\n      };\n      return _this;\n    }\n\n    _createClass(Button, [{\n      key: \"onPress\",\n      value: function onPress() {\n        var onPress = this.props.onPress;\n\n        if ('function' === typeof onPress) {\n          onPress();\n        }\n      }\n    }, {\n      key: \"onPressIn\",\n      value: function onPressIn() {\n        var focusAnimation = this.state.focusAnimation;\n        var focusAnimationDuration = this.props.focusAnimationDuration;\n\n        _reactNative.Animated.timing(focusAnimation, {\n          toValue: 1,\n          duration: focusAnimationDuration,\n          easing: _reactNative.Easing.out(_reactNative.Easing.ease)\n        }).start();\n      }\n    }, {\n      key: \"onPressOut\",\n      value: function onPressOut() {\n        var focusAnimation = this.state.focusAnimation;\n        var focusAnimationDuration = this.props.focusAnimationDuration;\n\n        _reactNative.Animated.timing(focusAnimation, {\n          toValue: 0,\n          duration: focusAnimationDuration,\n          easing: _reactNative.Easing.out(_reactNative.Easing.ease)\n        }).start();\n      }\n    }, {\n      key: \"componentWillReceiveProps\",\n      value: function componentWillReceiveProps(props) {\n        var focusAnimation = props.focusAnimation;\n\n        if (focusAnimation && focusAnimation !== this.state.focusAnimation) {\n          this.setState({\n            focusAnimation: focusAnimation\n          });\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            color = _this$props.color,\n            disabledColor = _this$props.disabledColor,\n            shadeColor = _this$props.shadeColor,\n            shadeOpacity = _this$props.shadeOpacity,\n            shadeBorderRadius = _this$props.shadeBorderRadius,\n            style = _this$props.style,\n            children = _this$props.children,\n            props = _objectWithoutProperties(_this$props, [\"color\", \"disabledColor\", \"shadeColor\", \"shadeOpacity\", \"shadeBorderRadius\", \"style\", \"children\"]);\n\n        var focusAnimation = this.state.focusAnimation;\n        var opacity = focusAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, shadeOpacity]\n        });\n        var rippleStyle = {\n          backgroundColor: props.disabled ? disabledColor : color\n        };\n        var shadeStyle = {\n          backgroundColor: shadeColor,\n          borderRadius: shadeBorderRadius,\n          opacity: opacity\n        };\n        return _react.default.createElement(_reactNativeMaterialRipple.default, _extends({}, props, {\n          style: [_styles.styles.container, rippleStyle, style],\n          onPress: this.onPress,\n          onPressIn: this.onPressIn,\n          onPressOut: this.onPressOut,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          }\n        }), children, _react.default.createElement(_reactNative.Animated.View, {\n          style: [_styles.styles.shade, shadeStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          }\n        }));\n      }\n    }]);\n\n    _inherits(Button, _PureComponent);\n\n    return Button;\n  }(_react.PureComponent), _class.defaultProps = {\n    rippleContainerBorderRadius: 2,\n    rippleSequential: true,\n    hitSlop: {\n      top: 6,\n      right: 4,\n      bottom: 6,\n      left: 4\n    },\n    color: 'rgb(224, 224, 224)',\n    shadeColor: 'rgb(0, 0, 0)',\n    shadeOpacity: 0.12,\n    shadeBorderRadius: 2,\n    focusAnimation: null,\n    focusAnimationDuration: 225,\n    disabledColor: 'rgba(0, 0, 0, .12)',\n    disabled: false\n  }, _class.propTypes = _objectSpread({}, _reactNativeMaterialRipple.default.propTypes, {\n    color: _propTypes.default.string,\n    shadeColor: _propTypes.default.string,\n    shadeOpacity: _propTypes.default.number,\n    shadeBorderRadius: _propTypes.default.number,\n    focusAnimation: _propTypes.default.instanceOf(_reactNative.Animated.Value),\n    focusAnimationDuration: _propTypes.default.number,\n    disabledColor: _propTypes.default.string\n  }), _temp));\n\n  var _default2 = Button;\n  exports.default = _default2;\n});","map":[[7,0,2,0],[11,0,1,0],[13,0,3,0],[15,0,4,0],[17,0,6,0],[71,0,43,2],[71,20,43,14,"props"],[71,25,43,2],[71,27,43,21],[72,0,43,21],[74,0,43,21],[76,0,44,4],[76,82,44,10,"props"],[76,87,44,4],[77,0,46,4],[77,12,46,9,"onPress"],[77,19,46,4],[77,22,46,19],[77,28,46,24,"onPress"],[77,35,46,19],[77,36,46,32,"bind"],[77,40,46,19],[77,95,46,4],[78,0,47,4],[78,12,47,9,"onPressIn"],[78,21,47,4],[78,24,47,21],[78,30,47,26,"onPressIn"],[78,39,47,21],[78,40,47,36,"bind"],[78,44,47,21],[78,99,47,4],[79,0,48,4],[79,12,48,9,"onPressOut"],[79,22,48,4],[79,25,48,22],[79,31,48,27,"onPressOut"],[79,41,48,22],[79,42,48,38,"bind"],[79,46,48,22],[79,101,48,4],[80,0,50,4],[80,12,50,9,"state"],[80,17,50,4],[80,20,50,17],[81,0,51,6,"focusAnimation"],[81,24,51,22],[81,30,51,27,"props"],[81,35,51,22],[81,36,51,33,"focusAnimation"],[81,50,51,22],[81,54,51,51],[81,58,51,55,"Animated"],[81,80,51,64,"Value"],[81,85,51,51],[81,86,51,70],[81,87,51,51],[82,0,50,17],[82,7,50,4],[83,0,43,21],[84,0,53,3],[88,32,55,12],[89,0,55,12],[89,12,56,10,"onPress"],[89,19,55,12],[89,22,56,22],[89,27,56,27,"props"],[89,32,55,12],[89,33,56,10,"onPress"],[89,40,55,12],[91,0,58,4],[91,12,58,8],[91,27,58,23],[91,34,58,30,"onPress"],[91,41,58,4],[91,43,58,39],[92,0,59,6,"onPress"],[93,0,60,5],[94,0,61,3],[97,34,63,14],[98,0,63,14],[98,12,64,10,"focusAnimation"],[98,26,63,14],[98,29,64,29],[98,34,64,34,"state"],[98,39,63,14],[98,40,64,10,"focusAnimation"],[98,54,63,14],[99,0,63,14],[99,12,65,10,"focusAnimationDuration"],[99,34,63,14],[99,37,65,37],[99,42,65,42,"props"],[99,47,63,14],[99,48,65,10,"focusAnimationDuration"],[99,70,63,14],[101,0,67,4,"Animated"],[101,30,68,7,"timing"],[101,36,67,4],[101,37,68,14,"focusAnimation"],[101,51,67,4],[101,53,68,30],[102,0,69,8,"toValue"],[102,19,69,17],[102,20,68,30],[103,0,70,8,"duration"],[103,20,70,18,"focusAnimationDuration"],[103,42,68,30],[104,0,71,8,"easing"],[104,18,71,16,"Easing"],[104,38,71,23,"out"],[104,41,71,16],[104,42,71,27,"Easing"],[104,62,71,34,"ease"],[104,66,71,16],[105,0,68,30],[105,9,67,4],[105,11,73,7,"start"],[105,16,67,4],[106,0,74,3],[109,35,76,15],[110,0,76,15],[110,12,77,10,"focusAnimation"],[110,26,76,15],[110,29,77,29],[110,34,77,34,"state"],[110,39,76,15],[110,40,77,10,"focusAnimation"],[110,54,76,15],[111,0,76,15],[111,12,78,10,"focusAnimationDuration"],[111,34,76,15],[111,37,78,37],[111,42,78,42,"props"],[111,47,76,15],[111,48,78,10,"focusAnimationDuration"],[111,70,76,15],[113,0,80,4,"Animated"],[113,30,81,7,"timing"],[113,36,80,4],[113,37,81,14,"focusAnimation"],[113,51,80,4],[113,53,81,30],[114,0,82,8,"toValue"],[114,19,82,17],[114,20,81,30],[115,0,83,8,"duration"],[115,20,83,18,"focusAnimationDuration"],[115,42,81,30],[116,0,84,8,"easing"],[116,18,84,16,"Easing"],[116,38,84,23,"out"],[116,41,84,16],[116,42,84,27,"Easing"],[116,62,84,34,"ease"],[116,66,84,16],[117,0,81,30],[117,9,80,4],[117,11,86,7,"start"],[117,16,80,4],[118,0,87,3],[121,48,89,28,"props"],[121,53],[121,55,89,35],[122,0,89,35],[122,12,90,10,"focusAnimation"],[122,26,89,35],[122,29,90,29,"props"],[122,34,89,35],[122,35,90,10,"focusAnimation"],[122,49,89,35],[124,0,92,4],[124,12,92,8,"focusAnimation"],[124,30,92,26,"focusAnimation"],[124,49,92,45],[124,54,92,50,"state"],[124,59,92,45],[124,60,92,56,"focusAnimation"],[124,74,92,4],[124,76,92,72],[125,0,93,6],[125,15,93,11,"setState"],[125,23,93,6],[125,24,93,20],[126,0,93,22,"focusAnimation"],[127,0,93,20],[127,11,93,6],[128,0,94,5],[129,0,95,3],[132,31,97,11],[133,0,97,11],[133,26,98,107],[133,31,98,112,"props"],[133,36,97,11],[134,0,97,11],[134,12,98,10,"color"],[134,17,97,11],[134,32,98,10,"color"],[134,37,97,11],[135,0,97,11],[135,12,98,17,"disabledColor"],[135,25,97,11],[135,40,98,17,"disabledColor"],[135,53,97,11],[136,0,97,11],[136,12,98,32,"shadeColor"],[136,22,97,11],[136,37,98,32,"shadeColor"],[136,47,97,11],[137,0,97,11],[137,12,98,44,"shadeOpacity"],[137,24,97,11],[137,39,98,44,"shadeOpacity"],[137,51,97,11],[138,0,97,11],[138,12,98,58,"shadeBorderRadius"],[138,29,97,11],[138,44,98,58,"shadeBorderRadius"],[138,61,97,11],[139,0,97,11],[139,12,98,77,"style"],[139,17,97,11],[139,32,98,77,"style"],[139,37,97,11],[140,0,97,11],[140,12,98,84,"children"],[140,20,97,11],[140,35,98,84,"children"],[140,43,97,11],[141,0,97,11],[141,12,98,97,"props"],[141,17,97,11],[143,0,97,11],[143,12,99,10,"focusAnimation"],[143,26,97,11],[143,29,99,29],[143,34,99,34,"state"],[143,39,97,11],[143,40,99,10,"focusAnimation"],[143,54,97,11],[144,0,101,4],[144,12,101,8,"opacity"],[144,22,101,18,"focusAnimation"],[144,37,101,33,"interpolate"],[144,48,101,18],[144,49,101,45],[145,0,102,6,"inputRange"],[145,22,102,18],[145,23,102,19],[145,24,102,18],[145,26,102,22],[145,27,102,18],[145,28,101,45],[146,0,103,6,"outputRange"],[146,23,103,19],[146,24,103,20],[146,25,103,19],[146,27,103,23,"shadeOpacity"],[146,39,103,19],[147,0,101,45],[147,9,101,18],[147,10,101,4],[148,0,106,4],[148,12,106,8,"rippleStyle"],[148,26,106,22],[149,0,107,6,"backgroundColor"],[149,27,107,23,"props"],[149,33,107,29,"disabled"],[149,41,107,23],[149,44,107,39,"disabledColor"],[149,57,107,23],[149,60,107,55,"color"],[150,0,106,22],[150,9,106,4],[151,0,110,4],[151,12,110,8,"shadeStyle"],[151,25,110,21],[152,0,111,6,"backgroundColor"],[152,27,111,23,"shadeColor"],[152,37,110,21],[153,0,112,6,"borderRadius"],[153,24,112,20,"shadeBorderRadius"],[153,41,110,21],[154,0,113,6,"opacity"],[155,0,110,21],[155,9,110,4],[156,0,116,4],[156,15,117,6],[156,44,117,7],[156,78,117,6],[156,93,118,12,"props"],[156,98,117,6],[157,0,120,8],[157,17,120,15],[157,18,120,16,"styles"],[157,33,120,23,"container"],[157,42,120,15],[157,44,120,34,"rippleStyle"],[157,55,120,15],[157,57,120,47,"style"],[157,62,120,15],[157,63,117,6],[158,0,121,8],[158,19,121,17],[158,24,121,22,"onPress"],[158,31,117,6],[159,0,122,8],[159,21,122,19],[159,26,122,24,"onPressIn"],[159,35,117,6],[160,0,123,8],[160,22,123,20],[160,27,123,25,"onPressOut"],[160,37,117,6],[161,0,117,6],[162,0,117,6],[163,0,117,6],[164,0,117,6],[165,0,117,6],[165,12,125,9,"children"],[165,20,117,6],[165,22,126,8],[165,51,126,9],[165,72,126,8],[165,73,126,18],[165,77,126,8],[166,0,126,23],[166,17,126,30],[166,18,126,32,"styles"],[166,33,126,39,"shade"],[166,38,126,30],[166,40,126,46,"shadeStyle"],[166,50,126,30],[166,51,126,8],[167,0,126,8],[168,0,126,8],[169,0,126,8],[170,0,126,8],[171,0,126,8],[171,10,117,6],[171,11,116,4],[172,0,129,3],[178,4,8,36,"PureComponent"],[178,24],[178,34,9,9,"defaultProps"],[178,46],[178,49,9,24],[179,0,10,4,"rippleContainerBorderRadius"],[179,33,10,33],[179,34,9,24],[180,0,11,4,"rippleSequential"],[180,22,11,22],[180,26,9,24],[181,0,13,4,"hitSlop"],[181,13,13,13],[182,0,13,15,"top"],[182,11,13,20],[182,12,13,13],[183,0,13,23,"right"],[183,13,13,30],[183,14,13,13],[184,0,13,33,"bottom"],[184,14,13,41],[184,15,13,13],[185,0,13,44,"left"],[185,12,13,50],[186,0,13,13],[186,5,9,24],[187,0,15,4,"color"],[187,11,15,11],[187,31,9,24],[188,0,17,4,"shadeColor"],[188,16,17,16],[188,30,9,24],[189,0,18,4,"shadeOpacity"],[189,18,18,18],[189,22,9,24],[190,0,19,4,"shadeBorderRadius"],[190,23,19,23],[190,24,9,24],[191,0,21,4,"focusAnimation"],[191,20,21,20],[191,24,9,24],[192,0,22,4,"focusAnimationDuration"],[192,28,22,28],[192,31,9,24],[193,0,24,4,"disabledColor"],[193,19,24,19],[193,39,9,24],[194,0,25,4,"disabled"],[194,14,25,14],[195,0,9,24],[195,3],[195,12,28,9,"propTypes"],[195,21],[195,42,29,7,"Ripple"],[195,77,29,14,"propTypes"],[195,86],[196,0,31,4,"color"],[196,11,31,11,"PropTypes"],[196,30,31,21,"string"],[196,36],[197,0,33,4,"shadeColor"],[197,16,33,16,"PropTypes"],[197,35,33,26,"string"],[197,41],[198,0,34,4,"shadeOpacity"],[198,18,34,18,"PropTypes"],[198,37,34,28,"number"],[198,43],[199,0,35,4,"shadeBorderRadius"],[199,23,35,23,"PropTypes"],[199,42,35,33,"number"],[199,48],[200,0,37,4,"focusAnimation"],[200,20,37,20,"PropTypes"],[200,39,37,30,"instanceOf"],[200,49,37,20],[200,50,37,41,"Animated"],[200,72,37,50,"Value"],[200,77,37,20],[200,78],[201,0,38,4,"focusAnimationDuration"],[201,28,38,28,"PropTypes"],[201,47,38,38,"number"],[201,53],[202,0,40,4,"disabledColor"],[202,19,40,19,"PropTypes"],[202,38,40,29,"string"]]},"type":"js/module"}]}