{"dependencies":[{"name":"react","isAsync":false},{"name":"./../react-transform-hmr/lib/index.js","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"react-native","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _class,\n      _temp2,\n      _jsxFileName = \"/var/www/html/thg/node_modules/react-native-lightbox/LightboxOverlay.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    LightboxOverlay: {\n      displayName: \"LightboxOverlay\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/var/www/html/thg/node_modules/react-native-lightbox/LightboxOverlay.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var WINDOW_HEIGHT = _reactNative.Dimensions.get('window').height;\n\n  var WINDOW_WIDTH = _reactNative.Dimensions.get('window').width;\n\n  var DRAG_DISMISS_THRESHOLD = 150;\n  var STATUS_BAR_OFFSET = _reactNative.Platform.OS === 'android' ? -25 : 0;\n  var isIOS = _reactNative.Platform.OS === 'ios';\n\n  var styles = _reactNative.StyleSheet.create({\n    background: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: WINDOW_WIDTH,\n      height: WINDOW_HEIGHT\n    },\n    open: {\n      position: 'absolute',\n      flex: 1,\n      justifyContent: 'center',\n      backgroundColor: 'transparent'\n    },\n    header: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: WINDOW_WIDTH,\n      backgroundColor: 'transparent'\n    },\n    closeButton: {\n      fontSize: 35,\n      color: 'white',\n      lineHeight: 40,\n      width: 40,\n      textAlign: 'center',\n      shadowOffset: {\n        width: 0,\n        height: 0\n      },\n      shadowRadius: 1.5,\n      shadowColor: 'black',\n      shadowOpacity: 0.8\n    }\n  });\n\n  var LightboxOverlay = _wrapComponent(\"LightboxOverlay\")((_temp2 = _class = function (_Component) {\n    function LightboxOverlay() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, LightboxOverlay);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LightboxOverlay)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.state = {\n        isAnimating: false,\n        isPanning: false,\n        target: {\n          x: 0,\n          y: 0,\n          opacity: 1\n        },\n        pan: new _reactNative.Animated.Value(0),\n        openVal: new _reactNative.Animated.Value(0)\n      }, _this.open = function () {\n        if (isIOS) {\n          _reactNative.StatusBar.setHidden(true, 'fade');\n        }\n\n        _this.state.pan.setValue(0);\n\n        _this.setState({\n          isAnimating: true,\n          target: {\n            x: 0,\n            y: 0,\n            opacity: 1\n          }\n        });\n\n        _reactNative.Animated.spring(_this.state.openVal, _objectSpread({\n          toValue: 1\n        }, _this.props.springConfig)).start(function () {\n          return _this.setState({\n            isAnimating: false\n          });\n        });\n      }, _this.close = function () {\n        if (isIOS) {\n          _reactNative.StatusBar.setHidden(false, 'fade');\n        }\n\n        _this.setState({\n          isAnimating: true\n        });\n\n        _reactNative.Animated.spring(_this.state.openVal, _objectSpread({\n          toValue: 0\n        }, _this.props.springConfig)).start(function () {\n          _this.setState({\n            isAnimating: false\n          });\n\n          _this.props.onClose();\n        });\n      }, _temp));\n    }\n\n    _createClass(LightboxOverlay, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        var _this2 = this;\n\n        this._panResponder = _reactNative.PanResponder.create({\n          onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n            return !_this2.state.isAnimating;\n          },\n          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n            return !_this2.state.isAnimating;\n          },\n          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n            return !_this2.state.isAnimating;\n          },\n          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n            return !_this2.state.isAnimating;\n          },\n          onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {\n            _this2.state.pan.setValue(0);\n\n            _this2.setState({\n              isPanning: true\n            });\n          },\n          onPanResponderMove: _reactNative.Animated.event([null, {\n            dy: this.state.pan\n          }]),\n          onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n            return true;\n          },\n          onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n            if (Math.abs(gestureState.dy) > DRAG_DISMISS_THRESHOLD) {\n              _this2.setState({\n                isPanning: false,\n                target: {\n                  y: gestureState.dy,\n                  x: gestureState.dx,\n                  opacity: 1 - Math.abs(gestureState.dy / WINDOW_HEIGHT)\n                }\n              });\n\n              _this2.close();\n            } else {\n              _reactNative.Animated.spring(_this2.state.pan, _objectSpread({\n                toValue: 0\n              }, _this2.props.springConfig)).start(function () {\n                _this2.setState({\n                  isPanning: false\n                });\n              });\n            }\n          }\n        });\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this.props.isOpen) {\n          this.open();\n        }\n      }\n    }, {\n      key: \"componentWillReceiveProps\",\n      value: function componentWillReceiveProps(props) {\n        if (this.props.isOpen != props.isOpen && props.isOpen) {\n          this.open();\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var _this$props = this.props,\n            isOpen = _this$props.isOpen,\n            renderHeader = _this$props.renderHeader,\n            swipeToDismiss = _this$props.swipeToDismiss,\n            origin = _this$props.origin,\n            backgroundColor = _this$props.backgroundColor;\n        var _this$state = this.state,\n            isPanning = _this$state.isPanning,\n            isAnimating = _this$state.isAnimating,\n            openVal = _this$state.openVal,\n            target = _this$state.target;\n        var lightboxOpacityStyle = {\n          opacity: openVal.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, target.opacity]\n          })\n        };\n        var handlers;\n\n        if (swipeToDismiss) {\n          handlers = this._panResponder.panHandlers;\n        }\n\n        var dragStyle;\n\n        if (isPanning) {\n          dragStyle = {\n            top: this.state.pan\n          };\n          lightboxOpacityStyle.opacity = this.state.pan.interpolate({\n            inputRange: [-WINDOW_HEIGHT, 0, WINDOW_HEIGHT],\n            outputRange: [0, 1, 0]\n          });\n        }\n\n        var openStyle = [styles.open, {\n          left: openVal.interpolate({\n            inputRange: [0, 1],\n            outputRange: [origin.x, target.x]\n          }),\n          top: openVal.interpolate({\n            inputRange: [0, 1],\n            outputRange: [origin.y + STATUS_BAR_OFFSET, target.y + STATUS_BAR_OFFSET]\n          }),\n          width: openVal.interpolate({\n            inputRange: [0, 1],\n            outputRange: [origin.width, WINDOW_WIDTH]\n          }),\n          height: openVal.interpolate({\n            inputRange: [0, 1],\n            outputRange: [origin.height, WINDOW_HEIGHT]\n          })\n        }];\n\n        var background = _react.default.createElement(_reactNative.Animated.View, {\n          style: [styles.background, {\n            backgroundColor: backgroundColor\n          }, lightboxOpacityStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          }\n        });\n\n        var header = _react.default.createElement(_reactNative.Animated.View, {\n          style: [styles.header, lightboxOpacityStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          }\n        }, renderHeader ? renderHeader(this.close) : _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.close,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.closeButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          }\n        }, \"\\xD7\")));\n\n        var content = _react.default.createElement(_reactNative.Animated.View, _extends({\n          style: [openStyle, dragStyle]\n        }, handlers, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          }\n        }), this.props.children);\n\n        if (this.props.navigator) {\n          return _react.default.createElement(_reactNative.View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            }\n          }, background, content, header);\n        }\n\n        return _react.default.createElement(_reactNative.Modal, {\n          visible: isOpen,\n          transparent: true,\n          onRequestClose: function onRequestClose() {\n            return _this3.close();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          }\n        }, background, content, header);\n      }\n    }]);\n\n    _inherits(LightboxOverlay, _Component);\n\n    return LightboxOverlay;\n  }(_react.Component), _class.propTypes = {\n    origin: _propTypes.default.shape({\n      x: _propTypes.default.number,\n      y: _propTypes.default.number,\n      width: _propTypes.default.number,\n      height: _propTypes.default.number\n    }),\n    springConfig: _propTypes.default.shape({\n      tension: _propTypes.default.number,\n      friction: _propTypes.default.number\n    }),\n    backgroundColor: _propTypes.default.string,\n    isOpen: _propTypes.default.bool,\n    renderHeader: _propTypes.default.func,\n    onOpen: _propTypes.default.func,\n    onClose: _propTypes.default.func,\n    swipeToDismiss: _propTypes.default.bool\n  }, _class.defaultProps = {\n    springConfig: {\n      tension: 30,\n      friction: 7\n    },\n    backgroundColor: 'black'\n  }, _temp2));\n\n  var _default2 = LightboxOverlay;\n  exports.default = _default2;\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,3,0],[64,0,5,0],[64,6,5,6,"WINDOW_HEIGHT"],[64,22,5,22,"Dimensions"],[64,46,5,33,"get"],[64,49,5,22],[64,50,5,37],[64,58,5,22],[64,60,5,47,"height"],[64,66,5,0],[66,0,6,0],[66,6,6,6,"WINDOW_WIDTH"],[66,21,6,21,"Dimensions"],[66,45,6,32,"get"],[66,48,6,21],[66,49,6,36],[66,57,6,21],[66,59,6,46,"width"],[66,64,6,0],[68,0,7,0],[68,6,7,6,"DRAG_DISMISS_THRESHOLD"],[68,31,7,31],[68,34,7,0],[69,0,8,0],[69,6,8,6,"STATUS_BAR_OFFSET"],[69,26,8,27,"Platform"],[69,48,8,36,"OS"],[69,50,8,27],[69,55,8,43],[69,64,8,27],[69,67,8,55],[69,68,8,56],[69,70,8,27],[69,73,8,61],[69,74,8,0],[70,0,9,0],[70,6,9,6,"isIOS"],[70,14,9,14,"Platform"],[70,36,9,23,"OS"],[70,38,9,14],[70,43,9,30],[70,48,9,0],[72,0,11,0],[72,6,11,6,"styles"],[72,15,11,15,"StyleSheet"],[72,39,11,26,"create"],[72,45,11,15],[72,46,11,33],[73,0,12,2,"background"],[73,16,12,14],[74,0,13,4,"position"],[74,16,13,14],[74,26,12,14],[75,0,14,4,"top"],[75,11,14,9],[75,12,12,14],[76,0,15,4,"left"],[76,12,15,10],[76,13,12,14],[77,0,16,4,"width"],[77,13,16,11,"WINDOW_WIDTH"],[77,25,12,14],[78,0,17,4,"height"],[78,14,17,12,"WINDOW_HEIGHT"],[79,0,12,14],[79,5,11,33],[80,0,19,2,"open"],[80,10,19,8],[81,0,20,4,"position"],[81,16,20,14],[81,26,19,8],[82,0,21,4,"flex"],[82,12,21,10],[82,13,19,8],[83,0,22,4,"justifyContent"],[83,22,22,20],[83,30,19,8],[84,0,24,4,"backgroundColor"],[84,23,24,21],[85,0,19,8],[85,5,11,33],[86,0,26,2,"header"],[86,12,26,10],[87,0,27,4,"position"],[87,16,27,14],[87,26,26,10],[88,0,28,4,"top"],[88,11,28,9],[88,12,26,10],[89,0,29,4,"left"],[89,12,29,10],[89,13,26,10],[90,0,30,4,"width"],[90,13,30,11,"WINDOW_WIDTH"],[90,25,26,10],[91,0,31,4,"backgroundColor"],[91,23,31,21],[92,0,26,10],[92,5,11,33],[93,0,33,2,"closeButton"],[93,17,33,15],[94,0,34,4,"fontSize"],[94,16,34,14],[94,18,33,15],[95,0,35,4,"color"],[95,13,35,11],[95,20,33,15],[96,0,36,4,"lineHeight"],[96,18,36,16],[96,20,33,15],[97,0,37,4,"width"],[97,13,37,11],[97,15,33,15],[98,0,38,4,"textAlign"],[98,17,38,15],[98,25,33,15],[99,0,39,4,"shadowOffset"],[99,20,39,18],[100,0,40,6,"width"],[100,15,40,13],[100,16,39,18],[101,0,41,6,"height"],[101,16,41,14],[102,0,39,18],[102,7,33,15],[103,0,43,4,"shadowRadius"],[103,20,43,18],[103,23,33,15],[104,0,44,4,"shadowColor"],[104,19,44,17],[104,26,33,15],[105,0,45,4,"shadowOpacity"],[105,21,45,19],[106,0,33,15],[107,0,11,33],[107,3,11,15],[107,4,11,0],[121,209,74,2,"state"],[121,214],[121,217,74,10],[122,0,75,4,"isAnimating"],[122,21,75,17],[122,26,74,10],[123,0,76,4,"isPanning"],[123,19,76,15],[123,24,74,10],[124,0,77,4,"target"],[124,16,77,12],[125,0,78,6,"x"],[125,13,78,9],[125,14,77,12],[126,0,79,6,"y"],[126,13,79,9],[126,14,77,12],[127,0,80,6,"opacity"],[127,19,80,15],[128,0,77,12],[128,9,74,10],[129,0,82,4,"pan"],[129,13,82,9],[129,17,82,13,"Animated"],[129,39,82,22,"Value"],[129,44,82,9],[129,45,82,28],[129,46,82,9],[129,47,74,10],[130,0,83,4,"openVal"],[130,17,83,13],[130,21,83,17,"Animated"],[130,43,83,26,"Value"],[130,48,83,13],[130,49,83,32],[130,50,83,13],[131,0,74,10],[131,7],[131,15,130,2,"open"],[131,19],[131,22,130,9],[131,34,130,15],[132,0,131,4],[132,12,131,7,"isIOS"],[132,17,131,4],[132,19,131,14],[133,0,132,6,"StatusBar"],[133,33,132,16,"setHidden"],[133,42,132,6],[133,43,132,26],[133,47,132,6],[133,49,132,32],[133,55,132,6],[134,0,133,5],[136,0,134,4],[136,14,134,9,"state"],[136,19,134,4],[136,20,134,15,"pan"],[136,23,134,4],[136,24,134,19,"setValue"],[136,32,134,4],[136,33,134,28],[136,34,134,4],[138,0,135,4],[138,14,135,9,"setState"],[138,22,135,4],[138,23,135,18],[139,0,136,6,"isAnimating"],[139,23,136,19],[139,27,135,18],[140,0,137,6,"target"],[140,18,137,14],[141,0,138,8,"x"],[141,15,138,11],[141,16,137,14],[142,0,139,8,"y"],[142,15,139,11],[142,16,137,14],[143,0,140,8,"opacity"],[143,21,140,17],[144,0,137,14],[145,0,135,18],[145,9,135,4],[147,0,144,4,"Animated"],[147,30,144,13,"spring"],[147,36,144,4],[147,37,145,6],[147,43,145,11,"state"],[147,48,145,6],[147,49,145,17,"openVal"],[147,56,144,4],[148,0,146,8,"toValue"],[148,19,146,17],[149,0,144,4],[149,11,146,23],[149,17,146,28,"props"],[149,22,146,23],[149,23,146,34,"springConfig"],[149,35,144,4],[149,38,147,6,"start"],[149,43,144,4],[149,44,147,12],[150,0,147,12],[150,17,147,18],[150,23,147,23,"setState"],[150,31,147,18],[150,32,147,32],[151,0,147,34,"isAnimating"],[151,25,147,47],[152,0,147,32],[152,11,147,18],[152,12,147,12],[153,0,147,12],[153,9,144,4],[154,0,148,3],[154,7],[154,15,150,2,"close"],[154,20],[154,23,150,10],[154,35,150,16],[155,0,151,4],[155,12,151,7,"isIOS"],[155,17,151,4],[155,19,151,14],[156,0,152,6,"StatusBar"],[156,33,152,16,"setHidden"],[156,42,152,6],[156,43,152,26],[156,48,152,6],[156,50,152,33],[156,56,152,6],[157,0,153,5],[159,0,154,4],[159,14,154,9,"setState"],[159,22,154,4],[159,23,154,18],[160,0,155,6,"isAnimating"],[160,23,155,19],[161,0,154,18],[161,9,154,4],[163,0,157,4,"Animated"],[163,30,157,13,"spring"],[163,36,157,4],[163,37,158,6],[163,43,158,11,"state"],[163,48,158,6],[163,49,158,17,"openVal"],[163,56,157,4],[164,0,159,8,"toValue"],[164,19,159,17],[165,0,157,4],[165,11,159,23],[165,17,159,28,"props"],[165,22,159,23],[165,23,159,34,"springConfig"],[165,35,157,4],[165,38,160,6,"start"],[165,43,157,4],[165,44,160,12],[165,56,160,18],[166,0,161,6],[166,16,161,11,"setState"],[166,24,161,6],[166,25,161,20],[167,0,162,8,"isAnimating"],[167,25,162,21],[168,0,161,20],[168,11,161,6],[170,0,164,6],[170,16,164,11,"props"],[170,21,164,6],[170,22,164,17,"onClose"],[170,29,164,6],[171,0,165,5],[171,9,157,4],[172,0,166,3],[172,7],[177,43,86,23],[178,0,86,23],[180,0,87,4],[180,13,87,9,"_panResponder"],[180,26,87,4],[180,29,87,25,"PanResponder"],[180,55,87,38,"create"],[180,61,87,25],[180,62,87,45],[181,0,89,6,"onStartShouldSetPanResponder"],[181,40,89,36],[181,78,89,37,"evt"],[181,81,89,36],[181,83,89,42,"gestureState"],[181,95,89,36],[182,0,89,36],[182,19,89,59],[182,20,89,60],[182,27,89,65,"state"],[182,32,89,60],[182,33,89,71,"isAnimating"],[182,44,89,36],[183,0,89,36],[183,11,87,45],[184,0,90,6,"onStartShouldSetPanResponderCapture"],[184,47,90,43],[184,92,90,44,"evt"],[184,95,90,43],[184,97,90,49,"gestureState"],[184,109,90,43],[185,0,90,43],[185,19,90,66],[185,20,90,67],[185,27,90,72,"state"],[185,32,90,67],[185,33,90,78,"isAnimating"],[185,44,90,43],[186,0,90,43],[186,11,87,45],[187,0,91,6,"onMoveShouldSetPanResponder"],[187,39,91,35],[187,76,91,36,"evt"],[187,79,91,35],[187,81,91,41,"gestureState"],[187,93,91,35],[188,0,91,35],[188,19,91,58],[188,20,91,59],[188,27,91,64,"state"],[188,32,91,59],[188,33,91,70,"isAnimating"],[188,44,91,35],[189,0,91,35],[189,11,87,45],[190,0,92,6,"onMoveShouldSetPanResponderCapture"],[190,46,92,42],[190,90,92,43,"evt"],[190,93,92,42],[190,95,92,48,"gestureState"],[190,107,92,42],[191,0,92,42],[191,19,92,65],[191,20,92,66],[191,27,92,71,"state"],[191,32,92,66],[191,33,92,77,"isAnimating"],[191,44,92,42],[192,0,92,42],[192,11,87,45],[193,0,94,6,"onPanResponderGrant"],[193,31,94,27],[193,60,94,28,"evt"],[193,63,94,27],[193,65,94,33,"gestureState"],[193,77,94,27],[193,79,94,50],[194,0,95,8],[194,19,95,13,"state"],[194,24,95,8],[194,25,95,19,"pan"],[194,28,95,8],[194,29,95,23,"setValue"],[194,37,95,8],[194,38,95,32],[194,39,95,8],[196,0,96,8],[196,19,96,13,"setState"],[196,27,96,8],[196,28,96,22],[197,0,96,24,"isPanning"],[197,25,96,35],[198,0,96,22],[198,13,96,8],[199,0,97,7],[199,11,87,45],[200,0,98,6,"onPanResponderMove"],[200,30,98,26,"Animated"],[200,52,98,35,"event"],[200,57,98,26],[200,58,98,41],[200,59,99,8],[200,63,98,41],[200,65,100,8],[201,0,100,10,"dy"],[201,16,100,14],[201,21,100,19,"state"],[201,26,100,14],[201,27,100,25,"pan"],[202,0,100,8],[202,11,98,41],[202,12,98,26],[202,13,87,45],[203,0,102,6,"onPanResponderTerminationRequest"],[203,44,102,40],[203,86,102,41,"evt"],[203,89,102,40],[203,91,102,46,"gestureState"],[203,103,102,40],[204,0,102,40],[204,19,102,63],[204,23,102,40],[205,0,102,40],[205,11,87,45],[206,0,103,6,"onPanResponderRelease"],[206,33,103,29],[206,64,103,30,"evt"],[206,67,103,29],[206,69,103,35,"gestureState"],[206,81,103,29],[206,83,103,52],[207,0,104,8],[207,16,104,11,"Math"],[207,21,104,16,"abs"],[207,24,104,11],[207,25,104,20,"gestureState"],[207,38,104,33,"dy"],[207,40,104,11],[207,44,104,39,"DRAG_DISMISS_THRESHOLD"],[207,66,104,8],[207,68,104,63],[208,0,105,10],[208,21,105,15,"setState"],[208,29,105,10],[208,30,105,24],[209,0,106,12,"isPanning"],[209,27,106,23],[209,32,105,24],[210,0,107,12,"target"],[210,24,107,20],[211,0,108,14,"y"],[211,21,108,17,"gestureState"],[211,34,108,30,"dy"],[211,36,107,20],[212,0,109,14,"x"],[212,21,109,17,"gestureState"],[212,34,109,30,"dx"],[212,36,107,20],[213,0,110,14,"opacity"],[213,27,110,23],[213,31,110,27,"Math"],[213,36,110,32,"abs"],[213,39,110,27],[213,40,110,36,"gestureState"],[213,53,110,49,"dy"],[213,55,110,36],[213,58,110,54,"WINDOW_HEIGHT"],[213,71,110,27],[214,0,107,20],[215,0,105,24],[215,15,105,10],[217,0,113,10],[217,21,113,15,"close"],[217,26,113,10],[218,0,114,9],[218,13,104,8],[218,19,114,15],[219,0,115,10,"Animated"],[219,36,115,19,"spring"],[219,42,115,10],[219,43,116,12],[219,50,116,17,"state"],[219,55,116,12],[219,56,116,23,"pan"],[219,59,115,10],[220,0,117,14,"toValue"],[220,25,117,23],[221,0,115,10],[221,17,117,29],[221,24,117,34,"props"],[221,29,117,29],[221,30,117,40,"springConfig"],[221,42,115,10],[221,45,118,12,"start"],[221,50,115,10],[221,51,118,18],[221,63,118,24],[222,0,118,26],[222,23,118,31,"setState"],[222,31,118,26],[222,32,118,40],[223,0,118,42,"isPanning"],[223,29,118,53],[224,0,118,40],[224,17,118,26],[225,0,118,64],[225,15,115,10],[226,0,119,9],[227,0,120,7],[228,0,87,45],[228,9,87,25],[228,10,87,4],[229,0,122,3],[232,42,124,22],[233,0,125,4],[233,12,125,7],[233,17,125,12,"props"],[233,22,125,7],[233,23,125,18,"isOpen"],[233,29,125,4],[233,31,125,26],[234,0,126,6],[234,15,126,11,"open"],[234,19,126,6],[235,0,127,5],[236,0,128,3],[239,48,168,28,"props"],[239,53],[239,55,168,35],[240,0,169,4],[240,12,169,7],[240,17,169,12,"props"],[240,22,169,7],[240,23,169,18,"isOpen"],[240,29,169,7],[240,33,169,28,"props"],[240,39,169,34,"isOpen"],[240,45,169,7],[240,49,169,44,"props"],[240,55,169,50,"isOpen"],[240,61,169,4],[240,63,169,58],[241,0,170,6],[241,15,170,11,"open"],[241,19,170,6],[242,0,171,5],[243,0,172,3],[246,31,174,11],[247,0,174,11],[249,0,174,11],[249,26,181,8],[249,31,181,13,"props"],[249,36,174,11],[250,0,174,11],[250,12,176,6,"isOpen"],[250,18,174,11],[250,33,176,6,"isOpen"],[250,39,174,11],[251,0,174,11],[251,12,177,6,"renderHeader"],[251,24,174,11],[251,39,177,6,"renderHeader"],[251,51,174,11],[252,0,174,11],[252,12,178,6,"swipeToDismiss"],[252,26,174,11],[252,41,178,6,"swipeToDismiss"],[252,55,174,11],[253,0,174,11],[253,12,179,6,"origin"],[253,18,174,11],[253,33,179,6,"origin"],[253,39,174,11],[254,0,174,11],[254,12,180,6,"backgroundColor"],[254,27,174,11],[254,42,180,6,"backgroundColor"],[254,57,174,11],[255,0,174,11],[255,26,188,8],[255,31,188,13,"state"],[255,36,174,11],[256,0,174,11],[256,12,184,6,"isPanning"],[256,21,174,11],[256,36,184,6,"isPanning"],[256,45,174,11],[257,0,174,11],[257,12,185,6,"isAnimating"],[257,23,174,11],[257,38,185,6,"isAnimating"],[257,49,174,11],[258,0,174,11],[258,12,186,6,"openVal"],[258,19,174,11],[258,34,186,6,"openVal"],[258,41,174,11],[259,0,174,11],[259,12,187,6,"target"],[259,18,174,11],[259,33,187,6,"target"],[259,39,174,11],[260,0,190,4],[260,12,190,10,"lightboxOpacityStyle"],[260,35,190,33],[261,0,191,6,"opacity"],[261,19,191,15,"openVal"],[261,27,191,23,"interpolate"],[261,38,191,15],[261,39,191,35],[262,0,191,36,"inputRange"],[262,24,191,48],[262,25,191,49],[262,26,191,48],[262,28,191,52],[262,29,191,48],[262,30,191,35],[263,0,191,56,"outputRange"],[263,25,191,69],[263,26,191,70],[263,27,191,69],[263,29,191,73,"target"],[263,36,191,80,"opacity"],[263,43,191,69],[264,0,191,35],[264,11,191,15],[265,0,190,33],[265,9,190,4],[266,0,194,4],[266,12,194,8,"handlers"],[266,20,194,4],[268,0,195,4],[268,12,195,7,"swipeToDismiss"],[268,26,195,4],[268,28,195,23],[269,0,196,6,"handlers"],[269,21,196,17],[269,26,196,22,"_panResponder"],[269,39,196,17],[269,40,196,36,"panHandlers"],[269,51,196,6],[270,0,197,5],[272,0,199,4],[272,12,199,8,"dragStyle"],[272,21,199,4],[274,0,200,4],[274,12,200,7,"isPanning"],[274,21,200,4],[274,23,200,18],[275,0,201,6,"dragStyle"],[275,22,201,18],[276,0,202,8,"top"],[276,17,202,13],[276,22,202,18,"state"],[276,27,202,13],[276,28,202,24,"pan"],[277,0,201,18],[277,11,201,6],[278,0,204,6,"lightboxOpacityStyle"],[278,31,204,27,"opacity"],[278,38,204,6],[278,41,204,37],[278,46,204,42,"state"],[278,51,204,37],[278,52,204,48,"pan"],[278,55,204,37],[278,56,204,52,"interpolate"],[278,67,204,37],[278,68,204,64],[279,0,204,65,"inputRange"],[279,24,204,77],[279,25,204,78],[279,26,204,79,"WINDOW_HEIGHT"],[279,39,204,77],[279,41,204,94],[279,42,204,77],[279,44,204,97,"WINDOW_HEIGHT"],[279,57,204,77],[279,58,204,64],[280,0,204,113,"outputRange"],[280,25,204,126],[280,26,204,127],[280,27,204,126],[280,29,204,130],[280,30,204,126],[280,32,204,133],[280,33,204,126],[281,0,204,64],[281,11,204,37],[281,12,204,6],[282,0,205,5],[284,0,207,4],[284,12,207,10,"openStyle"],[284,24,207,22],[284,25,207,23,"styles"],[284,32,207,30,"open"],[284,36,207,22],[284,38,207,36],[285,0,208,6,"left"],[285,16,208,14,"openVal"],[285,24,208,22,"interpolate"],[285,35,208,14],[285,36,208,34],[286,0,208,35,"inputRange"],[286,24,208,47],[286,25,208,48],[286,26,208,47],[286,28,208,51],[286,29,208,47],[286,30,208,34],[287,0,208,55,"outputRange"],[287,25,208,68],[287,26,208,69,"origin"],[287,33,208,76,"x"],[287,34,208,68],[287,36,208,79,"target"],[287,43,208,86,"x"],[287,44,208,68],[288,0,208,34],[288,11,208,14],[288,12,207,36],[289,0,209,6,"top"],[289,15,209,14,"openVal"],[289,23,209,22,"interpolate"],[289,34,209,14],[289,35,209,34],[290,0,209,35,"inputRange"],[290,24,209,47],[290,25,209,48],[290,26,209,47],[290,28,209,51],[290,29,209,47],[290,30,209,34],[291,0,209,55,"outputRange"],[291,25,209,68],[291,26,209,69,"origin"],[291,33,209,76,"y"],[291,34,209,69],[291,37,209,80,"STATUS_BAR_OFFSET"],[291,54,209,68],[291,56,209,99,"target"],[291,63,209,106,"y"],[291,64,209,99],[291,67,209,110,"STATUS_BAR_OFFSET"],[291,84,209,68],[292,0,209,34],[292,11,209,14],[292,12,207,36],[293,0,210,6,"width"],[293,17,210,14,"openVal"],[293,25,210,22,"interpolate"],[293,36,210,14],[293,37,210,34],[294,0,210,35,"inputRange"],[294,24,210,47],[294,25,210,48],[294,26,210,47],[294,28,210,51],[294,29,210,47],[294,30,210,34],[295,0,210,55,"outputRange"],[295,25,210,68],[295,26,210,69,"origin"],[295,33,210,76,"width"],[295,38,210,68],[295,40,210,83,"WINDOW_WIDTH"],[295,52,210,68],[296,0,210,34],[296,11,210,14],[296,12,207,36],[297,0,211,6,"height"],[297,18,211,14,"openVal"],[297,26,211,22,"interpolate"],[297,37,211,14],[297,38,211,34],[298,0,211,35,"inputRange"],[298,24,211,47],[298,25,211,48],[298,26,211,47],[298,28,211,51],[298,29,211,47],[298,30,211,34],[299,0,211,55,"outputRange"],[299,25,211,68],[299,26,211,69,"origin"],[299,33,211,76,"height"],[299,39,211,68],[299,41,211,84,"WINDOW_HEIGHT"],[299,54,211,68],[300,0,211,34],[300,11,211,14],[301,0,207,36],[301,9,207,22],[301,10,207,4],[303,0,214,4],[303,12,214,10,"background"],[303,25,214,24],[303,54,214,25],[303,75,214,24],[303,76,214,34],[303,80,214,24],[304,0,214,39],[304,17,214,46],[304,18,214,47,"styles"],[304,25,214,54,"background"],[304,35,214,46],[304,37,214,66],[305,0,214,68,"backgroundColor"],[305,29,214,85,"backgroundColor"],[306,0,214,66],[306,11,214,46],[306,13,214,104,"lightboxOpacityStyle"],[306,33,214,46],[306,34,214,24],[307,0,214,24],[308,0,214,24],[309,0,214,24],[310,0,214,24],[311,0,214,24],[311,10,214,4],[313,0,215,4],[313,12,215,10,"header"],[313,21,215,20],[313,50,215,21],[313,71,215,20],[313,72,215,30],[313,76,215,20],[314,0,215,35],[314,17,215,42],[314,18,215,43,"styles"],[314,25,215,50,"header"],[314,31,215,42],[314,33,215,58,"lightboxOpacityStyle"],[314,53,215,42],[314,54,215,20],[315,0,215,20],[316,0,215,20],[317,0,215,20],[318,0,215,20],[319,0,215,20],[319,11,215,83,"renderHeader"],[319,26,216,6,"renderHeader"],[319,39,216,19],[319,44,216,24,"close"],[319,49,216,6],[319,50,215,83],[319,53,218,8],[319,82,218,9],[319,111,218,8],[320,0,218,26],[320,19,218,35],[320,24,218,40,"close"],[320,29,218,8],[321,0,218,8],[322,0,218,8],[323,0,218,8],[324,0,218,8],[325,0,218,8],[325,11,219,10],[325,40,219,11],[325,57,219,10],[326,0,219,16],[326,17,219,23,"styles"],[326,24,219,30,"closeButton"],[326,35,219,10],[327,0,219,10],[328,0,219,10],[329,0,219,10],[330,0,219,10],[331,0,219,10],[331,18,218,8],[331,19,215,20],[331,20,215,4],[333,0,223,4],[333,12,223,10,"content"],[333,22,224,6],[333,51,224,7],[333,72,224,6],[333,73,224,16],[333,77,224,6],[334,0,224,21],[334,17,224,28],[334,18,224,29,"openStyle"],[334,27,224,28],[334,29,224,40,"dragStyle"],[334,38,224,28],[335,0,224,6],[335,11,224,56,"handlers"],[335,19,224,6],[336,0,224,6],[337,0,224,6],[338,0,224,6],[339,0,224,6],[340,0,224,6],[340,12,225,9],[340,17,225,14,"props"],[340,22,225,9],[340,23,225,20,"children"],[340,31,224,6],[340,32,223,4],[342,0,229,4],[342,12,229,8],[342,17,229,13,"props"],[342,22,229,8],[342,23,229,19,"navigator"],[342,32,229,4],[342,34,229,30],[343,0,230,6],[343,17,231,8],[343,46,231,9],[343,63,231,8],[344,0,231,8],[345,0,231,8],[346,0,231,8],[347,0,231,8],[348,0,231,8],[348,13,232,11,"background"],[348,23,231,8],[348,25,233,11,"content"],[348,32,231,8],[348,34,234,11,"header"],[348,40,231,8],[348,41,230,6],[349,0,237,5],[351,0,239,4],[351,15,240,6],[351,44,240,7],[351,62,240,6],[352,0,240,13],[352,19,240,22,"isOpen"],[352,25,240,6],[353,0,240,30],[353,23,240,43],[353,27,240,6],[354,0,240,49],[354,26,240,65],[355,0,240,65],[355,19,240,71],[355,26,240,76,"close"],[355,31,240,71],[355,33,240,65],[356,0,240,65],[356,11,240,6],[357,0,240,6],[358,0,240,6],[359,0,240,6],[360,0,240,6],[361,0,240,6],[361,11,241,9,"background"],[361,21,240,6],[361,23,242,9,"content"],[361,30,240,6],[361,32,243,9,"header"],[361,38,240,6],[361,39,239,4],[362,0,246,3],[368,4,49,45,"Component"],[368,20],[368,30,50,9,"propTypes"],[368,39],[368,42,50,21],[369,0,51,4,"origin"],[369,12,51,12,"PropTypes"],[369,31,51,22,"shape"],[369,36,51,12],[369,37,51,28],[370,0,52,6,"x"],[370,9,52,16,"PropTypes"],[370,28,52,26,"number"],[370,34,51,28],[371,0,53,6,"y"],[371,9,53,16,"PropTypes"],[371,28,53,26,"number"],[371,34,51,28],[372,0,54,6,"width"],[372,13,54,16,"PropTypes"],[372,32,54,26,"number"],[372,38,51,28],[373,0,55,6,"height"],[373,14,55,16,"PropTypes"],[373,33,55,26,"number"],[374,0,51,28],[374,5,51,12],[374,6,50,21],[375,0,57,4,"springConfig"],[375,18,57,18,"PropTypes"],[375,37,57,28,"shape"],[375,42,57,18],[375,43,57,34],[376,0,58,6,"tension"],[376,15,58,16,"PropTypes"],[376,34,58,26,"number"],[376,40,57,34],[377,0,59,6,"friction"],[377,16,59,16,"PropTypes"],[377,35,59,26,"number"],[378,0,57,34],[378,5,57,18],[378,6,50,21],[379,0,61,4,"backgroundColor"],[379,21,61,21,"PropTypes"],[379,40,61,31,"string"],[379,46,50,21],[380,0,62,4,"isOpen"],[380,12,62,21,"PropTypes"],[380,31,62,31,"bool"],[380,35,50,21],[381,0,63,4,"renderHeader"],[381,18,63,21,"PropTypes"],[381,37,63,31,"func"],[381,41,50,21],[382,0,64,4,"onOpen"],[382,12,64,21,"PropTypes"],[382,31,64,31,"func"],[382,35,50,21],[383,0,65,4,"onClose"],[383,13,65,21,"PropTypes"],[383,32,65,31,"func"],[383,36,50,21],[384,0,66,4,"swipeToDismiss"],[384,20,66,21,"PropTypes"],[384,39,66,31,"bool"],[385,0,50,21],[385,3],[385,12,69,9,"defaultProps"],[385,24],[385,27,69,24],[386,0,70,4,"springConfig"],[386,18,70,18],[387,0,70,20,"tension"],[387,15,70,29],[387,17,70,18],[388,0,70,33,"friction"],[388,16,70,43],[389,0,70,18],[389,5,69,24],[390,0,71,4,"backgroundColor"],[390,21,71,21],[391,0,69,24],[391,3]]},"type":"js/module"}]}