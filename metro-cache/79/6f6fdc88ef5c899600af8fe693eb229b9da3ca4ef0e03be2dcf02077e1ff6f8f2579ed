{"dependencies":[{"name":"domelementtype","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var ElementType = _$$_REQUIRE(_dependencyMap[0], \"domelementtype\");\n\n  var isTag = exports.isTag = ElementType.isTag;\n\n  exports.testElement = function (options, element) {\n    for (var key in options) {\n      if (!options.hasOwnProperty(key)) ;else if (key === \"tag_name\") {\n        if (!isTag(element) || !options.tag_name(element.name)) {\n          return false;\n        }\n      } else if (key === \"tag_type\") {\n        if (!options.tag_type(element.type)) return false;\n      } else if (key === \"tag_contains\") {\n        if (isTag(element) || !options.tag_contains(element.data)) {\n          return false;\n        }\n      } else if (!element.attribs || !options[key](element.attribs[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var Checks = {\n    tag_name: function tag_name(name) {\n      if (typeof name === \"function\") {\n        return function (elem) {\n          return isTag(elem) && name(elem.name);\n        };\n      } else if (name === \"*\") {\n        return isTag;\n      } else {\n        return function (elem) {\n          return isTag(elem) && elem.name === name;\n        };\n      }\n    },\n    tag_type: function tag_type(type) {\n      if (typeof type === \"function\") {\n        return function (elem) {\n          return type(elem.type);\n        };\n      } else {\n        return function (elem) {\n          return elem.type === type;\n        };\n      }\n    },\n    tag_contains: function tag_contains(data) {\n      if (typeof data === \"function\") {\n        return function (elem) {\n          return !isTag(elem) && data(elem.data);\n        };\n      } else {\n        return function (elem) {\n          return !isTag(elem) && elem.data === data;\n        };\n      }\n    }\n  };\n\n  function getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n      return function (elem) {\n        return elem.attribs && value(elem.attribs[attrib]);\n      };\n    } else {\n      return function (elem) {\n        return elem.attribs && elem.attribs[attrib] === value;\n      };\n    }\n  }\n\n  function combineFuncs(a, b) {\n    return function (elem) {\n      return a(elem) || b(elem);\n    };\n  }\n\n  exports.getElements = function (options, element, recurse, limit) {\n    var funcs = Object.keys(options).map(function (key) {\n      var value = options[key];\n      return key in Checks ? Checks[key](value) : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? [] : this.filter(funcs.reduce(combineFuncs), element, recurse, limit);\n  };\n\n  exports.getElementById = function (id, element, recurse) {\n    if (!Array.isArray(element)) element = [element];\n    return this.findOne(getAttribCheck(\"id\", id), element, recurse !== false);\n  };\n\n  exports.getElementsByTagName = function (name, element, recurse, limit) {\n    return this.filter(Checks.tag_name(name), element, recurse, limit);\n  };\n\n  exports.getElementsByTagType = function (type, element, recurse, limit) {\n    return this.filter(Checks.tag_type(type), element, recurse, limit);\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"ElementType"],[2,20,1,18,"require"],[2,51,1,26],[2,67,1,18],[2,68,1,0],[4,0,2,0],[4,6,2,4,"isTag"],[4,14,2,12,"exports"],[4,22,2,20,"isTag"],[4,27,2,12],[4,30,2,28,"ElementType"],[4,42,2,40,"isTag"],[4,47,2,0],[6,0,4,0,"exports"],[6,10,4,8,"testElement"],[6,21,4,0],[6,24,4,22],[6,34,4,31,"options"],[6,41,4,22],[6,43,4,40,"element"],[6,50,4,22],[6,52,4,48],[7,0,5,1],[7,9,5,5],[7,13,5,9,"key"],[7,16,5,1],[7,20,5,16,"options"],[7,27,5,1],[7,29,5,24],[8,0,6,2],[8,10,6,5],[8,11,6,6,"options"],[8,19,6,14,"hasOwnProperty"],[8,33,6,6],[8,34,6,29,"key"],[8,37,6,6],[8,38,6,2],[8,40,6,34],[8,41,6,2],[8,46,7,7],[8,50,7,10,"key"],[8,58,7,18],[8,68,7,7],[8,70,7,29],[9,0,8,3],[9,12,8,6],[9,13,8,7,"isTag"],[9,19,8,13,"element"],[9,26,8,7],[9,27,8,6],[9,31,8,25],[9,32,8,26,"options"],[9,40,8,34,"tag_name"],[9,48,8,26],[9,49,8,43,"element"],[9,57,8,51,"name"],[9,61,8,26],[9,62,8,3],[9,64,8,57],[10,0,9,4],[10,17,9,11],[10,22,9,4],[11,0,10,4],[12,0,11,3],[12,7,7,7],[12,13,11,9],[12,17,11,12,"key"],[12,25,11,20],[12,35,11,9],[12,37,11,31],[13,0,12,3],[13,12,12,6],[13,13,12,7,"options"],[13,21,12,15,"tag_type"],[13,29,12,7],[13,30,12,24,"element"],[13,38,12,32,"type"],[13,42,12,7],[13,43,12,3],[13,45,12,39],[13,52,12,46],[13,57,12,39],[14,0,13,3],[14,7,11,9],[14,13,13,9],[14,17,13,12,"key"],[14,25,13,20],[14,39,13,9],[14,41,13,35],[15,0,14,3],[15,12,14,6,"isTag"],[15,18,14,12,"element"],[15,25,14,6],[15,30,14,24],[15,31,14,25,"options"],[15,39,14,33,"tag_contains"],[15,51,14,25],[15,52,14,46,"element"],[15,60,14,54,"data"],[15,64,14,25],[15,65,14,3],[15,67,14,60],[16,0,15,4],[16,17,15,11],[16,22,15,4],[17,0,16,4],[18,0,17,3],[18,7,13,9],[18,13,17,9],[18,17,17,12],[18,18,17,13,"element"],[18,26,17,21,"attribs"],[18,33,17,12],[18,37,17,32],[18,38,17,33,"options"],[18,46,17,41,"key"],[18,49,17,33],[18,51,17,46,"element"],[18,59,17,54,"attribs"],[18,66,17,46],[18,67,17,62,"key"],[18,70,17,46],[18,71,17,33],[18,72,17,9],[18,74,17,68],[19,0,18,3],[19,15,18,10],[19,20,18,3],[20,0,19,3],[21,0,20,2],[23,0,21,1],[23,11,21,8],[23,15,21,1],[24,0,22,1],[24,3,4,0],[26,0,24,0],[26,6,24,4,"Checks"],[26,15,24,13],[27,0,25,1,"tag_name"],[27,14,25,11],[27,32,25,20,"name"],[27,36,25,11],[27,38,25,25],[28,0,26,2],[28,10,26,5],[28,17,26,12,"name"],[28,21,26,5],[28,26,26,21],[28,36,26,2],[28,38,26,32],[29,0,27,3],[29,15,27,10],[29,25,27,19,"elem"],[29,29,27,10],[29,31,27,24],[30,0,27,26],[30,17,27,33,"isTag"],[30,23,27,39,"elem"],[30,27,27,33],[30,32,27,48,"name"],[30,37,27,53,"elem"],[30,42,27,58,"name"],[30,46,27,48],[30,47,27,26],[31,0,27,66],[31,9,27,3],[32,0,28,3],[32,7,26,2],[32,13,28,9],[32,17,28,12,"name"],[32,26,28,21],[32,29,28,9],[32,31,28,25],[33,0,29,3],[33,15,29,10,"isTag"],[33,20,29,3],[34,0,30,3],[34,7,28,9],[34,13,30,9],[35,0,31,3],[35,15,31,10],[35,25,31,19,"elem"],[35,29,31,10],[35,31,31,24],[36,0,31,26],[36,17,31,33,"isTag"],[36,23,31,39,"elem"],[36,27,31,33],[36,32,31,48,"elem"],[36,37,31,53,"name"],[36,41,31,48],[36,46,31,62,"name"],[36,50,31,26],[37,0,31,69],[37,9,31,3],[38,0,32,3],[39,0,33,2],[39,5,24,13],[40,0,34,1,"tag_type"],[40,14,34,11],[40,32,34,20,"type"],[40,36,34,11],[40,38,34,25],[41,0,35,2],[41,10,35,5],[41,17,35,12,"type"],[41,21,35,5],[41,26,35,21],[41,36,35,2],[41,38,35,32],[42,0,36,3],[42,15,36,10],[42,25,36,19,"elem"],[42,29,36,10],[42,31,36,24],[43,0,36,26],[43,17,36,33,"type"],[43,22,36,38,"elem"],[43,27,36,43,"type"],[43,31,36,33],[43,32,36,26],[44,0,36,51],[44,9,36,3],[45,0,37,3],[45,7,35,2],[45,13,37,9],[46,0,38,3],[46,15,38,10],[46,25,38,19,"elem"],[46,29,38,10],[46,31,38,24],[47,0,38,26],[47,17,38,33,"elem"],[47,22,38,38,"type"],[47,26,38,33],[47,31,38,47,"type"],[47,35,38,26],[48,0,38,54],[48,9,38,3],[49,0,39,3],[50,0,40,2],[50,5,24,13],[51,0,41,1,"tag_contains"],[51,18,41,15],[51,40,41,24,"data"],[51,44,41,15],[51,46,41,29],[52,0,42,2],[52,10,42,5],[52,17,42,12,"data"],[52,21,42,5],[52,26,42,21],[52,36,42,2],[52,38,42,32],[53,0,43,3],[53,15,43,10],[53,25,43,19,"elem"],[53,29,43,10],[53,31,43,24],[54,0,43,26],[54,17,43,33],[54,18,43,34,"isTag"],[54,24,43,40,"elem"],[54,28,43,34],[54,29,43,33],[54,33,43,49,"data"],[54,38,43,54,"elem"],[54,43,43,59,"data"],[54,47,43,49],[54,48,43,26],[55,0,43,67],[55,9,43,3],[56,0,44,3],[56,7,42,2],[56,13,44,9],[57,0,45,3],[57,15,45,10],[57,25,45,19,"elem"],[57,29,45,10],[57,31,45,24],[58,0,45,26],[58,17,45,33],[58,18,45,34,"isTag"],[58,24,45,40,"elem"],[58,28,45,34],[58,29,45,33],[58,33,45,49,"elem"],[58,38,45,54,"data"],[58,42,45,49],[58,47,45,63,"data"],[58,51,45,26],[59,0,45,70],[59,9,45,3],[60,0,46,3],[61,0,47,2],[62,0,24,13],[62,3,24,0],[64,0,50,0],[64,11,50,9,"getAttribCheck"],[64,25,50,0],[64,26,50,24,"attrib"],[64,32,50,0],[64,34,50,32,"value"],[64,39,50,0],[64,41,50,38],[65,0,51,1],[65,8,51,4],[65,15,51,11,"value"],[65,20,51,4],[65,25,51,21],[65,35,51,1],[65,37,51,32],[66,0,52,2],[66,13,52,9],[66,23,52,18,"elem"],[66,27,52,9],[66,29,52,23],[67,0,52,25],[67,15,52,32,"elem"],[67,20,52,37,"attribs"],[67,27,52,32],[67,31,52,48,"value"],[67,37,52,54,"elem"],[67,42,52,59,"attribs"],[67,49,52,54],[67,50,52,67,"attrib"],[67,56,52,54],[67,57,52,48],[67,58,52,25],[68,0,52,78],[68,7,52,2],[69,0,53,2],[69,5,51,1],[69,11,53,8],[70,0,54,2],[70,13,54,9],[70,23,54,18,"elem"],[70,27,54,9],[70,29,54,23],[71,0,54,25],[71,15,54,32,"elem"],[71,20,54,37,"attribs"],[71,27,54,32],[71,31,54,48,"elem"],[71,36,54,53,"attribs"],[71,43,54,48],[71,44,54,61,"attrib"],[71,50,54,48],[71,56,54,73,"value"],[71,61,54,25],[72,0,54,81],[72,7,54,2],[73,0,55,2],[74,0,56,1],[76,0,58,0],[76,11,58,9,"combineFuncs"],[76,23,58,0],[76,24,58,22,"a"],[76,25,58,0],[76,27,58,25,"b"],[76,28,58,0],[76,30,58,27],[77,0,59,1],[77,11,59,8],[77,21,59,17,"elem"],[77,25,59,8],[77,27,59,22],[78,0,60,2],[78,13,60,9,"a"],[78,15,60,11,"elem"],[78,19,60,9],[78,24,60,20,"b"],[78,26,60,22,"elem"],[78,30,60,20],[78,31,60,2],[79,0,61,2],[79,5,59,1],[80,0,62,1],[82,0,64,0,"exports"],[82,10,64,8,"getElements"],[82,21,64,0],[82,24,64,22],[82,34,64,31,"options"],[82,41,64,22],[82,43,64,40,"element"],[82,50,64,22],[82,52,64,49,"recurse"],[82,59,64,22],[82,61,64,58,"limit"],[82,66,64,22],[82,68,64,64],[83,0,65,1],[83,8,65,5,"funcs"],[83,16,65,13,"Object"],[83,23,65,20,"keys"],[83,27,65,13],[83,28,65,25,"options"],[83,35,65,13],[83,37,65,34,"map"],[83,40,65,13],[83,41,65,38],[83,51,65,47,"key"],[83,54,65,38],[83,56,65,51],[84,0,66,2],[84,10,66,6,"value"],[84,18,66,14,"options"],[84,26,66,22,"key"],[84,29,66,14],[84,30,66,2],[85,0,67,2],[85,13,67,9,"key"],[85,20,67,16,"Checks"],[85,26,67,9],[85,29,67,25,"Checks"],[85,36,67,32,"key"],[85,39,67,25],[85,41,67,37,"value"],[85,46,67,25],[85,47,67,9],[85,50,67,46,"getAttribCheck"],[85,65,67,61,"key"],[85,68,67,46],[85,70,67,66,"value"],[85,75,67,46],[85,76,67,2],[86,0,68,2],[86,5,65,13],[86,6,65,1],[87,0,70,1],[87,11,70,8,"funcs"],[87,17,70,14,"length"],[87,23,70,8],[87,28,70,25],[87,29,70,8],[87,32,70,29],[87,34,70,8],[87,37,70,34],[87,42,70,39,"filter"],[87,48,70,34],[87,49,71,2,"funcs"],[87,55,71,8,"reduce"],[87,61,71,2],[87,62,71,15,"combineFuncs"],[87,74,71,2],[87,75,70,34],[87,77,72,2,"element"],[87,84,70,34],[87,86,72,11,"recurse"],[87,93,70,34],[87,95,72,20,"limit"],[87,100,70,34],[87,101,70,1],[88,0,74,1],[88,3,64,0],[90,0,76,0,"exports"],[90,10,76,8,"getElementById"],[90,24,76,0],[90,27,76,25],[90,37,76,34,"id"],[90,39,76,25],[90,41,76,38,"element"],[90,48,76,25],[90,50,76,47,"recurse"],[90,57,76,25],[90,59,76,55],[91,0,77,1],[91,8,77,4],[91,9,77,5,"Array"],[91,15,77,11,"isArray"],[91,22,77,5],[91,23,77,19,"element"],[91,30,77,5],[91,31,77,1],[91,33,77,29,"element"],[91,43,77,39],[91,44,77,40,"element"],[91,51,77,39],[91,52,77,29],[92,0,78,1],[92,11,78,8],[92,16,78,13,"findOne"],[92,23,78,8],[92,24,78,21,"getAttribCheck"],[92,39,78,36],[92,43,78,21],[92,45,78,42,"id"],[92,47,78,21],[92,48,78,8],[92,50,78,47,"element"],[92,57,78,8],[92,59,78,56,"recurse"],[92,71,78,68],[92,76,78,8],[92,77,78,1],[93,0,79,1],[93,3,76,0],[95,0,81,0,"exports"],[95,10,81,8,"getElementsByTagName"],[95,30,81,0],[95,33,81,31],[95,43,81,40,"name"],[95,47,81,31],[95,49,81,46,"element"],[95,56,81,31],[95,58,81,55,"recurse"],[95,65,81,31],[95,67,81,64,"limit"],[95,72,81,31],[95,74,81,70],[96,0,82,1],[96,11,82,8],[96,16,82,13,"filter"],[96,22,82,8],[96,23,82,20,"Checks"],[96,30,82,27,"tag_name"],[96,38,82,20],[96,39,82,36,"name"],[96,43,82,20],[96,44,82,8],[96,46,82,43,"element"],[96,53,82,8],[96,55,82,52,"recurse"],[96,62,82,8],[96,64,82,61,"limit"],[96,69,82,8],[96,70,82,1],[97,0,83,1],[97,3,81,0],[99,0,85,0,"exports"],[99,10,85,8,"getElementsByTagType"],[99,30,85,0],[99,33,85,31],[99,43,85,40,"type"],[99,47,85,31],[99,49,85,46,"element"],[99,56,85,31],[99,58,85,55,"recurse"],[99,65,85,31],[99,67,85,64,"limit"],[99,72,85,31],[99,74,85,70],[100,0,86,1],[100,11,86,8],[100,16,86,13,"filter"],[100,22,86,8],[100,23,86,20,"Checks"],[100,30,86,27,"tag_type"],[100,38,86,20],[100,39,86,36,"type"],[100,43,86,20],[100,44,86,8],[100,46,86,43,"element"],[100,53,86,8],[100,55,86,52,"recurse"],[100,62,86,8],[100,64,86,61,"limit"],[100,69,86,8],[100,70,86,1],[101,0,87,1],[101,3,85,0]]},"type":"js/module"}]}