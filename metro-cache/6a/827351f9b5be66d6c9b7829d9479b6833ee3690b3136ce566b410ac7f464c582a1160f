{"dependencies":[{"name":"./_curry2","isAsync":false},{"name":"./_xfBase","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], './_curry2');\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[1], './_xfBase');\n\n  module.exports = function () {\n    function XDropRepeatsWith(pred, xf) {\n      this.xf = xf;\n      this.pred = pred;\n      this.lastValue = undefined;\n      this.seenFirstValue = false;\n    }\n\n    XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n    XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\n    XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n      var sameAsLast = false;\n\n      if (!this.seenFirstValue) {\n        this.seenFirstValue = true;\n      } else if (this.pred(this.lastValue, input)) {\n        sameAsLast = true;\n      }\n\n      this.lastValue = input;\n      return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n    };\n\n    return _curry2(function _xdropRepeatsWith(pred, xf) {\n      return new XDropRepeatsWith(pred, xf);\n    });\n  }();\n});","map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,16,1,14,"require"],[2,47,1,22],[2,58,1,14],[2,59,1,0],[4,0,2,0],[4,6,2,4,"_xfBase"],[4,16,2,14,"require"],[4,47,2,22],[4,58,2,14],[4,59,2,0],[6,0,5,0,"module"],[6,9,5,7,"exports"],[6,16,5,0],[6,19,5,18],[6,31,5,29],[7,0,6,2],[7,13,6,11,"XDropRepeatsWith"],[7,29,6,2],[7,30,6,28,"pred"],[7,34,6,2],[7,36,6,34,"xf"],[7,38,6,2],[7,40,6,38],[8,0,7,4],[8,11,7,9,"xf"],[8,13,7,4],[8,16,7,14,"xf"],[8,18,7,4],[9,0,8,4],[9,11,8,9,"pred"],[9,15,8,4],[9,18,8,16,"pred"],[9,22,8,4],[10,0,9,4],[10,11,9,9,"lastValue"],[10,20,9,4],[10,23,9,21,"undefined"],[10,32,9,4],[11,0,10,4],[11,11,10,9,"seenFirstValue"],[11,25,10,4],[11,28,10,26],[11,33,10,4],[12,0,11,3],[14,0,13,2,"XDropRepeatsWith"],[14,21,13,19,"prototype"],[14,30,13,2],[14,31,13,29],[14,50,13,2],[14,54,13,52,"_xfBase"],[14,62,13,60,"init"],[14,66,13,2],[15,0,14,2,"XDropRepeatsWith"],[15,21,14,19,"prototype"],[15,30,14,2],[15,31,14,29],[15,52,14,2],[15,56,14,54,"_xfBase"],[15,64,14,62,"result"],[15,70,14,2],[17,0,15,2,"XDropRepeatsWith"],[17,21,15,19,"prototype"],[17,30,15,2],[17,31,15,29],[17,50,15,2],[17,54,15,52],[17,64,15,61,"result"],[17,70,15,52],[17,72,15,69,"input"],[17,77,15,52],[17,79,15,76],[18,0,16,4],[18,10,16,8,"sameAsLast"],[18,23,16,21],[18,28,16,4],[20,0,17,4],[20,10,17,8],[20,11,17,9],[20,16,17,14,"seenFirstValue"],[20,30,17,4],[20,32,17,30],[21,0,18,6],[21,13,18,11,"seenFirstValue"],[21,27,18,6],[21,30,18,28],[21,34,18,6],[22,0,19,5],[22,7,17,4],[22,13,19,11],[22,17,19,15],[22,22,19,20,"pred"],[22,26,19,15],[22,27,19,25],[22,32,19,30,"lastValue"],[22,41,19,15],[22,43,19,41,"input"],[22,48,19,15],[22,49,19,11],[22,51,19,49],[23,0,20,6,"sameAsLast"],[23,21,20,19],[23,25,20,6],[24,0,21,5],[26,0,22,4],[26,11,22,9,"lastValue"],[26,20,22,4],[26,23,22,21,"input"],[26,28,22,4],[27,0,23,4],[27,13,23,11,"sameAsLast"],[27,26,23,24,"result"],[27,32,23,11],[27,35,23,33],[27,40,23,38,"xf"],[27,42,23,33],[27,43,23,41],[27,62,23,33],[27,64,23,62,"result"],[27,70,23,33],[27,72,23,70,"input"],[27,77,23,33],[27,78,23,4],[28,0,24,3],[28,5,15,2],[30,0,26,2],[30,11,26,9,"_curry2"],[30,19,26,17],[30,28,26,26,"_xdropRepeatsWith"],[30,45,26,17],[30,46,26,44,"pred"],[30,50,26,17],[30,52,26,50,"xf"],[30,54,26,17],[30,56,26,54],[31,0,26,56],[31,13,26,63],[31,17,26,67,"XDropRepeatsWith"],[31,33,26,63],[31,34,26,84,"pred"],[31,38,26,63],[31,40,26,90,"xf"],[31,42,26,63],[31,43,26,56],[32,0,26,96],[32,5,26,9],[32,6,26,2],[33,0,27,1],[33,3,5,18],[33,5,5,0]]},"type":"js/module"}]}