{"dependencies":[{"name":"react-native","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;\n\n  var RNFetchBlobWriteStream = function () {\n    function RNFetchBlobWriteStream(streamId, encoding, append) {\n      _classCallCheck(this, RNFetchBlobWriteStream);\n\n      this.id = streamId;\n      this.encoding = encoding;\n      this.append = append;\n    }\n\n    _createClass(RNFetchBlobWriteStream, [{\n      key: \"write\",\n      value: function write(data) {\n        var _this = this;\n\n        return new Promise(function (resolve, reject) {\n          try {\n            var method = _this.encoding === 'ascii' ? 'writeArrayChunk' : 'writeChunk';\n\n            if (_this.encoding.toLocaleLowerCase() === 'ascii' && !Array.isArray(data)) {\n              reject(new Error('ascii input data must be an Array'));\n              return;\n            }\n\n            RNFetchBlob[method](_this.id, data, function (error) {\n              if (error) reject(new Error(error));else resolve(_this);\n            });\n          } catch (err) {\n            reject(new Error(err));\n          }\n        });\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        var _this2 = this;\n\n        return new Promise(function (resolve, reject) {\n          try {\n            RNFetchBlob.closeStream(_this2.id, function () {\n              resolve();\n            });\n          } catch (err) {\n            reject(new Error(err));\n          }\n        });\n      }\n    }]);\n\n    return RNFetchBlobWriteStream;\n  }();\n\n  exports.default = RNFetchBlobWriteStream;\n});","map":[[7,0,5,0],[15,0,11,0],[15,6,11,6,"RNFetchBlob"],[15,20,11,20,"NativeModules"],[15,47,11,34,"RNFetchBlob"],[15,58,11,0],[17,6,13,21,"RNFetchBlobWriteStream"],[17,28],[18,0,19,2],[18,36,19,14,"streamId"],[18,44,19,2],[18,46,19,31,"encoding"],[18,54,19,2],[18,56,19,48,"append"],[18,62,19,2],[18,64,19,64],[19,0,19,64],[21,0,20,4],[21,11,20,9,"id"],[21,13,20,4],[21,16,20,14,"streamId"],[21,24,20,4],[22,0,21,4],[22,11,21,9,"encoding"],[22,19,21,4],[22,22,21,20,"encoding"],[22,30,21,4],[23,0,22,4],[23,11,22,9,"append"],[23,17,22,4],[23,20,22,18,"append"],[23,26,22,4],[24,0,23,3],[28,28,25,8,"data"],[28,32],[28,34,25,54],[29,0,25,54],[31,0,26,4],[31,15,26,11],[31,19,26,15,"Promise"],[31,26,26,11],[31,27,26,23],[31,37,26,24,"resolve"],[31,44,26,23],[31,46,26,33,"reject"],[31,52,26,23],[31,54,26,44],[32,0,27,6],[32,14,27,10],[33,0,28,8],[33,16,28,12,"method"],[33,25,28,21],[33,31,28,26,"encoding"],[33,39,28,21],[33,44,28,39],[33,51,28,21],[33,54,28,49],[33,71,28,21],[33,74,28,69],[33,86,28,8],[35,0,29,8],[35,16,29,11],[35,22,29,16,"encoding"],[35,30,29,11],[35,31,29,25,"toLocaleLowerCase"],[35,48,29,11],[35,55,29,49],[35,62,29,11],[35,66,29,60],[35,67,29,61,"Array"],[35,73,29,67,"isArray"],[35,80,29,61],[35,81,29,75,"data"],[35,85,29,61],[35,86,29,8],[35,88,29,82],[36,0,30,12,"reject"],[36,21,30,19],[36,25,30,23,"Error"],[36,30,30,19],[36,31,30,29],[36,66,30,19],[36,67,30,12],[37,0,31,12],[38,0,32,9],[40,0,33,8,"RNFetchBlob"],[40,24,33,20,"method"],[40,30,33,8],[40,32,33,28],[40,38,33,33,"id"],[40,40,33,8],[40,42,33,37,"data"],[40,46,33,8],[40,48,33,43],[40,58,33,44,"error"],[40,63,33,43],[40,65,33,54],[41,0,34,10],[41,18,34,13,"error"],[41,23,34,10],[41,25,35,12,"reject"],[41,32,35,19],[41,36,35,23,"Error"],[41,41,35,19],[41,42,35,29,"error"],[41,47,35,19],[41,48,35,12],[41,50,34,10],[41,55,37,12,"resolve"],[41,63,37,20],[41,68,37,12],[42,0,38,9],[42,13,33,8],[43,0,39,7],[43,11,27,6],[43,12,39,8],[43,19,39,14,"err"],[43,22,39,8],[43,24,39,19],[44,0,40,8,"reject"],[44,19,40,15],[44,23,40,19,"Error"],[44,28,40,15],[44,29,40,25,"err"],[44,32,40,15],[44,33,40,8],[45,0,41,7],[46,0,42,5],[46,9,26,11],[46,10,26,4],[47,0,43,3],[50,30,45,10],[51,0,45,10],[53,0,46,4],[53,15,46,11],[53,19,46,15,"Promise"],[53,26,46,11],[53,27,46,23],[53,37,46,24,"resolve"],[53,44,46,23],[53,46,46,33,"reject"],[53,52,46,23],[53,54,46,44],[54,0,47,6],[54,14,47,10],[55,0,48,8,"RNFetchBlob"],[55,24,48,20,"closeStream"],[55,35,48,8],[55,36,48,32],[55,43,48,37,"id"],[55,45,48,8],[55,47,48,41],[55,59,48,47],[56,0,49,10,"resolve"],[57,0,50,9],[57,13,48,8],[58,0,51,7],[58,11,47,6],[58,12,51,8],[58,19,51,15,"err"],[58,22,51,8],[58,24,51,20],[59,0,52,8,"reject"],[59,19,52,15],[59,23,52,19,"Error"],[59,28,52,15],[59,29,52,25,"err"],[59,32,52,15],[59,33,52,8],[60,0,53,7],[61,0,54,5],[61,9,46,11],[61,10,46,4],[62,0,55,3]]},"type":"js/module"}]}