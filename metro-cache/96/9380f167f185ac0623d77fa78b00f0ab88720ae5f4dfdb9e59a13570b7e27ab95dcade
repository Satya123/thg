{"dependencies":[{"name":"./index.js","isAsync":false},{"name":"inherits","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var index = _$$_REQUIRE(_dependencyMap[0], \"./index.js\");\n\n  var DomHandler = index.DomHandler;\n  var DomUtils = index.DomUtils;\n\n  function FeedHandler(callback, options) {\n    this.init(callback, options);\n  }\n\n  _$$_REQUIRE(_dependencyMap[1], \"inherits\")(FeedHandler, DomHandler);\n\n  FeedHandler.prototype.init = DomHandler;\n\n  function getElements(what, where) {\n    return DomUtils.getElementsByTagName(what, where, true);\n  }\n\n  function getOneElement(what, where) {\n    return DomUtils.getElementsByTagName(what, where, true, 1)[0];\n  }\n\n  function fetch(what, where, recurse) {\n    return DomUtils.getText(DomUtils.getElementsByTagName(what, where, recurse, 1)).trim();\n  }\n\n  function addConditionally(obj, prop, what, where, recurse) {\n    var tmp = fetch(what, where, recurse);\n    if (tmp) obj[prop] = tmp;\n  }\n\n  var isValidFeed = function isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n  };\n\n  FeedHandler.prototype.onend = function () {\n    var feed = {},\n        feedRoot = getOneElement(isValidFeed, this.dom),\n        tmp,\n        childs;\n\n    if (feedRoot) {\n      if (feedRoot.name === \"feed\") {\n        childs = feedRoot.children;\n        feed.type = \"atom\";\n        addConditionally(feed, \"id\", \"id\", childs);\n        addConditionally(feed, \"title\", \"title\", childs);\n        if ((tmp = getOneElement(\"link\", childs)) && (tmp = tmp.attribs) && (tmp = tmp.href)) feed.link = tmp;\n        addConditionally(feed, \"description\", \"subtitle\", childs);\n        if (tmp = fetch(\"updated\", childs)) feed.updated = new Date(tmp);\n        addConditionally(feed, \"author\", \"email\", childs, true);\n        feed.items = getElements(\"entry\", childs).map(function (item) {\n          var entry = {},\n              tmp;\n          item = item.children;\n          addConditionally(entry, \"id\", \"id\", item);\n          addConditionally(entry, \"title\", \"title\", item);\n          if ((tmp = getOneElement(\"link\", item)) && (tmp = tmp.attribs) && (tmp = tmp.href)) entry.link = tmp;\n          if (tmp = fetch(\"summary\", item) || fetch(\"content\", item)) entry.description = tmp;\n          if (tmp = fetch(\"updated\", item)) entry.pubDate = new Date(tmp);\n          return entry;\n        });\n      } else {\n        childs = getOneElement(\"channel\", feedRoot.children).children;\n        feed.type = feedRoot.name.substr(0, 3);\n        feed.id = \"\";\n        addConditionally(feed, \"title\", \"title\", childs);\n        addConditionally(feed, \"link\", \"link\", childs);\n        addConditionally(feed, \"description\", \"description\", childs);\n        if (tmp = fetch(\"lastBuildDate\", childs)) feed.updated = new Date(tmp);\n        addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n        feed.items = getElements(\"item\", feedRoot.children).map(function (item) {\n          var entry = {},\n              tmp;\n          item = item.children;\n          addConditionally(entry, \"id\", \"guid\", item);\n          addConditionally(entry, \"title\", \"title\", item);\n          addConditionally(entry, \"link\", \"link\", item);\n          addConditionally(entry, \"description\", \"description\", item);\n          if (tmp = fetch(\"pubDate\", item)) entry.pubDate = new Date(tmp);\n          return entry;\n        });\n      }\n    }\n\n    this.dom = feed;\n\n    DomHandler.prototype._handleCallback.call(this, feedRoot ? null : Error(\"couldn't find root of feed\"));\n  };\n\n  module.exports = FeedHandler;\n});","map":[[2,0,1,0],[2,6,1,4,"index"],[2,14,1,12,"require"],[2,45,1,20],[2,57,1,12],[2,58,1,0],[4,0,2,0],[4,6,2,4,"DomHandler"],[4,19,2,17,"index"],[4,25,2,23,"DomHandler"],[4,35,2,0],[5,0,3,0],[5,6,3,4,"DomUtils"],[5,17,3,15,"index"],[5,23,3,21,"DomUtils"],[5,31,3,0],[7,0,6,0],[7,11,6,9,"FeedHandler"],[7,22,6,0],[7,23,6,21,"callback"],[7,31,6,0],[7,33,6,31,"options"],[7,40,6,0],[7,42,6,39],[8,0,7,1],[8,9,7,6,"init"],[8,13,7,1],[8,14,7,11,"callback"],[8,22,7,1],[8,24,7,21,"options"],[8,31,7,1],[9,0,8,1],[11,0,10,0,"require"],[11,33,10,8],[11,43,10,0],[11,45,10,20,"FeedHandler"],[11,56,10,0],[11,58,10,33,"DomHandler"],[11,68,10,0],[13,0,12,0,"FeedHandler"],[13,14,12,12,"prototype"],[13,23,12,0],[13,24,12,22,"init"],[13,28,12,0],[13,31,12,29,"DomHandler"],[13,41,12,0],[15,0,14,0],[15,11,14,9,"getElements"],[15,22,14,0],[15,23,14,21,"what"],[15,27,14,0],[15,29,14,27,"where"],[15,34,14,0],[15,36,14,33],[16,0,15,1],[16,11,15,8,"DomUtils"],[16,20,15,17,"getElementsByTagName"],[16,40,15,8],[16,41,15,38,"what"],[16,45,15,8],[16,47,15,44,"where"],[16,52,15,8],[16,54,15,51],[16,58,15,8],[16,59,15,1],[17,0,16,1],[19,0,17,0],[19,11,17,9,"getOneElement"],[19,24,17,0],[19,25,17,23,"what"],[19,29,17,0],[19,31,17,29,"where"],[19,36,17,0],[19,38,17,35],[20,0,18,1],[20,11,18,8,"DomUtils"],[20,20,18,17,"getElementsByTagName"],[20,40,18,8],[20,41,18,38,"what"],[20,45,18,8],[20,47,18,44,"where"],[20,52,18,8],[20,54,18,51],[20,58,18,8],[20,60,18,57],[20,61,18,8],[20,63,18,60],[20,64,18,8],[20,65,18,1],[21,0,19,1],[23,0,20,0],[23,11,20,9,"fetch"],[23,16,20,0],[23,17,20,15,"what"],[23,21,20,0],[23,23,20,21,"where"],[23,28,20,0],[23,30,20,28,"recurse"],[23,37,20,0],[23,39,20,36],[24,0,21,1],[24,11,21,8,"DomUtils"],[24,20,21,17,"getText"],[24,27,21,8],[24,28,22,2,"DomUtils"],[24,37,22,11,"getElementsByTagName"],[24,57,22,2],[24,58,22,32,"what"],[24,62,22,2],[24,64,22,38,"where"],[24,69,22,2],[24,71,22,45,"recurse"],[24,78,22,2],[24,80,22,54],[24,81,22,2],[24,82,21,8],[24,84,23,3,"trim"],[24,88,21,8],[24,90,21,1],[25,0,24,1],[27,0,26,0],[27,11,26,9,"addConditionally"],[27,27,26,0],[27,28,26,26,"obj"],[27,31,26,0],[27,33,26,31,"prop"],[27,37,26,0],[27,39,26,37,"what"],[27,43,26,0],[27,45,26,43,"where"],[27,50,26,0],[27,52,26,50,"recurse"],[27,59,26,0],[27,61,26,58],[28,0,27,1],[28,8,27,5,"tmp"],[28,14,27,11,"fetch"],[28,20,27,17,"what"],[28,24,27,11],[28,26,27,23,"where"],[28,31,27,11],[28,33,27,30,"recurse"],[28,40,27,11],[28,41,27,1],[29,0,28,1],[29,8,28,4,"tmp"],[29,11,28,1],[29,13,28,9,"obj"],[29,17,28,13,"prop"],[29,21,28,9],[29,25,28,21,"tmp"],[29,28,28,9],[30,0,29,1],[32,0,31,0],[32,6,31,4,"isValidFeed"],[32,20,31,18],[32,29,31,4,"isValidFeed"],[32,40,31,18],[32,41,31,27,"value"],[32,46,31,18],[32,48,31,33],[33,0,32,1],[33,11,32,8,"value"],[33,21,32,18],[33,26,32,8],[33,30,32,27,"value"],[33,40,32,37],[33,46,32,8],[33,50,32,47,"value"],[33,60,32,57],[33,69,32,1],[34,0,33,1],[34,3,31,0],[36,0,35,0,"FeedHandler"],[36,14,35,12,"prototype"],[36,23,35,0],[36,24,35,22,"onend"],[36,29,35,0],[36,32,35,30],[36,44,35,40],[37,0,36,1],[37,8,36,5,"feed"],[37,15,36,12],[37,17,36,1],[38,0,36,1],[38,8,37,5,"feedRoot"],[38,19,37,16,"getOneElement"],[38,33,37,30,"isValidFeed"],[38,44,37,16],[38,46,37,43],[38,51,37,48,"dom"],[38,54,37,16],[38,55,36,1],[39,0,36,1],[39,8,38,5,"tmp"],[39,11,36,1],[40,0,36,1],[40,8,38,10,"childs"],[40,14,36,1],[42,0,40,1],[42,8,40,4,"feedRoot"],[42,16,40,1],[42,18,40,13],[43,0,41,2],[43,10,41,5,"feedRoot"],[43,19,41,14,"name"],[43,23,41,5],[43,28,41,23],[43,34,41,2],[43,36,41,30],[44,0,42,3,"childs"],[44,17,42,12,"feedRoot"],[44,26,42,21,"children"],[44,34,42,3],[45,0,44,3,"feed"],[45,13,44,8,"type"],[45,17,44,3],[45,20,44,15],[45,26,44,3],[46,0,45,3,"addConditionally"],[46,25,45,20,"feed"],[46,29,45,3],[46,31,45,26],[46,35,45,3],[46,37,45,32],[46,41,45,3],[46,43,45,38,"childs"],[46,49,45,3],[47,0,46,3,"addConditionally"],[47,25,46,20,"feed"],[47,29,46,3],[47,31,46,26],[47,38,46,3],[47,40,46,35],[47,47,46,3],[47,49,46,44,"childs"],[47,55,46,3],[48,0,47,3],[48,12,47,6],[48,13,47,7,"tmp"],[48,19,47,13,"getOneElement"],[48,33,47,27],[48,39,47,13],[48,41,47,35,"childs"],[48,47,47,13],[48,48,47,6],[48,54,47,48,"tmp"],[48,60,47,54,"tmp"],[48,64,47,58,"attribs"],[48,71,47,6],[48,77,47,71,"tmp"],[48,83,47,77,"tmp"],[48,87,47,81,"href"],[48,91,47,6],[48,92,47,3],[48,94,47,88,"feed"],[48,99,47,93,"link"],[48,103,47,88],[48,106,47,100,"tmp"],[48,109,47,88],[49,0,48,3,"addConditionally"],[49,25,48,20,"feed"],[49,29,48,3],[49,31,48,26],[49,44,48,3],[49,46,48,41],[49,56,48,3],[49,58,48,53,"childs"],[49,64,48,3],[50,0,49,3],[50,12,49,7,"tmp"],[50,18,49,13,"fetch"],[50,24,49,19],[50,33,49,13],[50,35,49,30,"childs"],[50,41,49,13],[50,42,49,3],[50,44,49,40,"feed"],[50,49,49,45,"updated"],[50,56,49,40],[50,59,49,55],[50,63,49,59,"Date"],[50,67,49,55],[50,68,49,64,"tmp"],[50,71,49,55],[50,72,49,40],[51,0,50,3,"addConditionally"],[51,25,50,20,"feed"],[51,29,50,3],[51,31,50,26],[51,39,50,3],[51,41,50,36],[51,48,50,3],[51,50,50,45,"childs"],[51,56,50,3],[51,58,50,53],[51,62,50,3],[52,0,52,3,"feed"],[52,13,52,8,"items"],[52,18,52,3],[52,21,52,16,"getElements"],[52,33,52,28],[52,40,52,16],[52,42,52,37,"childs"],[52,48,52,16],[52,50,52,45,"map"],[52,53,52,16],[52,54,52,49],[52,64,52,58,"item"],[52,68,52,49],[52,70,52,63],[53,0,53,4],[53,14,53,8,"entry"],[53,22,53,16],[53,24,53,4],[54,0,53,4],[54,14,53,20,"tmp"],[54,17,53,4],[55,0,55,4,"item"],[55,17,55,11,"item"],[55,22,55,16,"children"],[55,30,55,4],[56,0,57,4,"addConditionally"],[56,27,57,21,"entry"],[56,32,57,4],[56,34,57,28],[56,38,57,4],[56,40,57,34],[56,44,57,4],[56,46,57,40,"item"],[56,50,57,4],[57,0,58,4,"addConditionally"],[57,27,58,21,"entry"],[57,32,58,4],[57,34,58,28],[57,41,58,4],[57,43,58,37],[57,50,58,4],[57,52,58,46,"item"],[57,56,58,4],[58,0,59,4],[58,14,59,7],[58,15,59,8,"tmp"],[58,21,59,14,"getOneElement"],[58,35,59,28],[58,41,59,14],[58,43,59,36,"item"],[58,47,59,14],[58,48,59,7],[58,54,59,47,"tmp"],[58,60,59,53,"tmp"],[58,64,59,57,"attribs"],[58,71,59,7],[58,77,59,70,"tmp"],[58,83,59,76,"tmp"],[58,87,59,80,"href"],[58,91,59,7],[58,92,59,4],[58,94,59,87,"entry"],[58,100,59,93,"link"],[58,104,59,87],[58,107,59,100,"tmp"],[58,110,59,87],[59,0,60,4],[59,14,60,8,"tmp"],[59,20,60,14,"fetch"],[59,26,60,20],[59,35,60,14],[59,37,60,31,"item"],[59,41,60,14],[59,46,60,40,"fetch"],[59,52,60,46],[59,61,60,40],[59,63,60,57,"item"],[59,67,60,40],[59,68,60,4],[59,70,60,65,"entry"],[59,76,60,71,"description"],[59,87,60,65],[59,90,60,85,"tmp"],[59,93,60,65],[60,0,61,4],[60,14,61,8,"tmp"],[60,20,61,14,"fetch"],[60,26,61,20],[60,35,61,14],[60,37,61,31,"item"],[60,41,61,14],[60,42,61,4],[60,44,61,39,"entry"],[60,50,61,45,"pubDate"],[60,57,61,39],[60,60,61,55],[60,64,61,59,"Date"],[60,68,61,55],[60,69,61,64,"tmp"],[60,72,61,55],[60,73,61,39],[61,0,62,4],[61,17,62,11,"entry"],[61,22,62,4],[62,0,63,4],[62,9,52,16],[62,10,52,3],[63,0,64,3],[63,7,41,2],[63,13,64,9],[64,0,65,3,"childs"],[64,17,65,12,"getOneElement"],[64,31,65,26],[64,40,65,12],[64,42,65,37,"feedRoot"],[64,51,65,46,"children"],[64,59,65,12],[64,61,65,56,"children"],[64,69,65,3],[65,0,67,3,"feed"],[65,13,67,8,"type"],[65,17,67,3],[65,20,67,15,"feedRoot"],[65,29,67,24,"name"],[65,33,67,15],[65,34,67,29,"substr"],[65,40,67,15],[65,41,67,36],[65,42,67,15],[65,44,67,39],[65,45,67,15],[65,46,67,3],[66,0,68,3,"feed"],[66,13,68,8,"id"],[66,15,68,3],[66,18,68,13],[66,20,68,3],[67,0,69,3,"addConditionally"],[67,25,69,20,"feed"],[67,29,69,3],[67,31,69,26],[67,38,69,3],[67,40,69,35],[67,47,69,3],[67,49,69,44,"childs"],[67,55,69,3],[68,0,70,3,"addConditionally"],[68,25,70,20,"feed"],[68,29,70,3],[68,31,70,26],[68,37,70,3],[68,39,70,34],[68,45,70,3],[68,47,70,42,"childs"],[68,53,70,3],[69,0,71,3,"addConditionally"],[69,25,71,20,"feed"],[69,29,71,3],[69,31,71,26],[69,44,71,3],[69,46,71,41],[69,59,71,3],[69,61,71,56,"childs"],[69,67,71,3],[70,0,72,3],[70,12,72,7,"tmp"],[70,18,72,13,"fetch"],[70,24,72,19],[70,39,72,13],[70,41,72,36,"childs"],[70,47,72,13],[70,48,72,3],[70,50,72,46,"feed"],[70,55,72,51,"updated"],[70,62,72,46],[70,65,72,61],[70,69,72,65,"Date"],[70,73,72,61],[70,74,72,70,"tmp"],[70,77,72,61],[70,78,72,46],[71,0,73,3,"addConditionally"],[71,25,73,20,"feed"],[71,29,73,3],[71,31,73,26],[71,39,73,3],[71,41,73,36],[71,57,73,3],[71,59,73,54,"childs"],[71,65,73,3],[71,67,73,62],[71,71,73,3],[72,0,75,3,"feed"],[72,13,75,8,"items"],[72,18,75,3],[72,21,75,16,"getElements"],[72,33,75,28],[72,39,75,16],[72,41,75,36,"feedRoot"],[72,50,75,45,"children"],[72,58,75,16],[72,60,75,55,"map"],[72,63,75,16],[72,64,75,59],[72,74,75,68,"item"],[72,78,75,59],[72,80,75,73],[73,0,76,4],[73,14,76,8,"entry"],[73,22,76,16],[73,24,76,4],[74,0,76,4],[74,14,76,20,"tmp"],[74,17,76,4],[75,0,78,4,"item"],[75,17,78,11,"item"],[75,22,78,16,"children"],[75,30,78,4],[76,0,80,4,"addConditionally"],[76,27,80,21,"entry"],[76,32,80,4],[76,34,80,28],[76,38,80,4],[76,40,80,34],[76,46,80,4],[76,48,80,42,"item"],[76,52,80,4],[77,0,81,4,"addConditionally"],[77,27,81,21,"entry"],[77,32,81,4],[77,34,81,28],[77,41,81,4],[77,43,81,37],[77,50,81,4],[77,52,81,46,"item"],[77,56,81,4],[78,0,82,4,"addConditionally"],[78,27,82,21,"entry"],[78,32,82,4],[78,34,82,28],[78,40,82,4],[78,42,82,36],[78,48,82,4],[78,50,82,44,"item"],[78,54,82,4],[79,0,83,4,"addConditionally"],[79,27,83,21,"entry"],[79,32,83,4],[79,34,83,28],[79,47,83,4],[79,49,83,43],[79,62,83,4],[79,64,83,58,"item"],[79,68,83,4],[80,0,84,4],[80,14,84,8,"tmp"],[80,20,84,14,"fetch"],[80,26,84,20],[80,35,84,14],[80,37,84,31,"item"],[80,41,84,14],[80,42,84,4],[80,44,84,39,"entry"],[80,50,84,45,"pubDate"],[80,57,84,39],[80,60,84,55],[80,64,84,59,"Date"],[80,68,84,55],[80,69,84,64,"tmp"],[80,72,84,55],[80,73,84,39],[81,0,85,4],[81,17,85,11,"entry"],[81,22,85,4],[82,0,86,4],[82,9,75,16],[82,10,75,3],[83,0,87,3],[84,0,88,2],[86,0,89,1],[86,9,89,6,"dom"],[86,12,89,1],[86,15,89,12,"feed"],[86,19,89,1],[88,0,90,1,"DomHandler"],[88,15,90,12,"prototype"],[88,24,90,1],[88,25,90,22,"_handleCallback"],[88,40,90,1],[88,41,90,38,"call"],[88,45,90,1],[88,46,91,2],[88,50,90,1],[88,52,91,8,"feedRoot"],[88,63,91,19],[88,67,91,8],[88,70,91,26,"Error"],[88,76,91,32],[88,104,91,26],[88,105,90,1],[89,0,93,1],[89,3,35,0],[91,0,95,0,"module"],[91,9,95,7,"exports"],[91,16,95,0],[91,19,95,17,"FeedHandler"],[91,30,95,0]]},"type":"js/module"}]}