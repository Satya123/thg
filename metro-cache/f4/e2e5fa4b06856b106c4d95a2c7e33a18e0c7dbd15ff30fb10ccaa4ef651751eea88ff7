{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var nativeMax = Math.max;\n\n  function composeArgs(args, partials, holders, isCurried) {\n    var argsIndex = -1,\n        argsLength = args.length,\n        holdersLength = holders.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        rangeLength = nativeMax(argsLength - holdersLength, 0),\n        result = Array(leftLength + rangeLength),\n        isUncurried = !isCurried;\n\n    while (++leftIndex < leftLength) {\n      result[leftIndex] = partials[leftIndex];\n    }\n\n    while (++argsIndex < holdersLength) {\n      if (isUncurried || argsIndex < argsLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n    }\n\n    while (rangeLength--) {\n      result[leftIndex++] = args[argsIndex++];\n    }\n\n    return result;\n  }\n\n  module.exports = composeArgs;\n});","map":[[2,0,2,0],[2,6,2,4,"nativeMax"],[2,18,2,16,"Math"],[2,23,2,21,"max"],[2,26,2,0],[4,0,15,0],[4,11,15,9,"composeArgs"],[4,22,15,0],[4,23,15,21,"args"],[4,27,15,0],[4,29,15,27,"partials"],[4,37,15,0],[4,39,15,37,"holders"],[4,46,15,0],[4,48,15,46,"isCurried"],[4,57,15,0],[4,59,15,57],[5,0,16,2],[5,8,16,6,"argsIndex"],[5,20,16,18],[5,21,16,19],[5,22,16,2],[6,0,16,2],[6,8,17,6,"argsLength"],[6,21,17,19,"args"],[6,26,17,24,"length"],[6,32,16,2],[7,0,16,2],[7,8,18,6,"holdersLength"],[7,24,18,22,"holders"],[7,32,18,30,"length"],[7,38,16,2],[8,0,16,2],[8,8,19,6,"leftIndex"],[8,20,19,18],[8,21,19,19],[8,22,16,2],[9,0,16,2],[9,8,20,6,"leftLength"],[9,21,20,19,"partials"],[9,30,20,28,"length"],[9,36,16,2],[10,0,16,2],[10,8,21,6,"rangeLength"],[10,22,21,20,"nativeMax"],[10,32,21,30,"argsLength"],[10,45,21,43,"holdersLength"],[10,58,21,20],[10,60,21,58],[10,61,21,20],[10,62,16,2],[11,0,16,2],[11,8,22,6,"result"],[11,17,22,15,"Array"],[11,23,22,21,"leftLength"],[11,36,22,34,"rangeLength"],[11,47,22,15],[11,48,16,2],[12,0,16,2],[12,8,23,6,"isUncurried"],[12,22,23,20],[12,23,23,21,"isCurried"],[12,32,16,2],[14,0,25,2],[14,11,25,9],[14,13,25,11,"leftIndex"],[14,22,25,9],[14,25,25,23,"leftLength"],[14,35,25,2],[14,37,25,35],[15,0,26,4,"result"],[15,13,26,11,"leftIndex"],[15,22,26,4],[15,26,26,24,"partials"],[15,35,26,33,"leftIndex"],[15,44,26,24],[15,45,26,4],[16,0,27,3],[18,0,28,2],[18,11,28,9],[18,13,28,11,"argsIndex"],[18,22,28,9],[18,25,28,23,"holdersLength"],[18,38,28,2],[18,40,28,38],[19,0,29,4],[19,10,29,8,"isUncurried"],[19,25,29,23,"argsIndex"],[19,37,29,35,"argsLength"],[19,47,29,4],[19,49,29,47],[20,0,30,6,"result"],[20,15,30,13,"holders"],[20,23,30,21,"argsIndex"],[20,32,30,13],[20,33,30,6],[20,37,30,35,"args"],[20,42,30,40,"argsIndex"],[20,51,30,35],[20,52,30,6],[21,0,31,5],[22,0,32,3],[24,0,33,2],[24,11,33,9,"rangeLength"],[24,24,33,2],[24,26,33,24],[25,0,34,4,"result"],[25,13,34,11,"leftIndex"],[25,24,34,4],[25,28,34,26,"args"],[25,33,34,31,"argsIndex"],[25,44,34,26],[25,45,34,4],[26,0,35,3],[28,0,36,2],[28,11,36,9,"result"],[28,17,36,2],[29,0,37,1],[31,0,39,0,"module"],[31,9,39,7,"exports"],[31,16,39,0],[31,19,39,17,"composeArgs"],[31,30,39,0]]},"type":"js/module"}]}