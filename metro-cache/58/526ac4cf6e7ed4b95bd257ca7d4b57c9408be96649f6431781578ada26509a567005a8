{"dependencies":[{"name":"./_LodashWrapper","isAsync":false},{"name":"./_flatRest","isAsync":false},{"name":"./_getData","isAsync":false},{"name":"./_getFuncName","isAsync":false},{"name":"./isArray","isAsync":false},{"name":"./_isLaziable","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var LodashWrapper = _$$_REQUIRE(_dependencyMap[0], './_LodashWrapper'),\n      flatRest = _$$_REQUIRE(_dependencyMap[1], './_flatRest'),\n      getData = _$$_REQUIRE(_dependencyMap[2], './_getData'),\n      getFuncName = _$$_REQUIRE(_dependencyMap[3], './_getFuncName'),\n      isArray = _$$_REQUIRE(_dependencyMap[4], './isArray'),\n      isLaziable = _$$_REQUIRE(_dependencyMap[5], './_isLaziable');\n\n  var FUNC_ERROR_TEXT = 'Expected a function';\n  var WRAP_CURRY_FLAG = 8,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256;\n\n  function createFlow(fromRight) {\n    return flatRest(function (funcs) {\n      var length = funcs.length,\n          index = length,\n          prereq = LodashWrapper.prototype.thru;\n\n      if (fromRight) {\n        funcs.reverse();\n      }\n\n      while (index--) {\n        var func = funcs[index];\n\n        if (typeof func != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n\n        if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n          var wrapper = new LodashWrapper([], true);\n        }\n      }\n\n      index = wrapper ? index : length;\n\n      while (++index < length) {\n        func = funcs[index];\n        var funcName = getFuncName(func),\n            data = funcName == 'wrapper' ? getData(func) : undefined;\n\n        if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {\n          wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n        } else {\n          wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);\n        }\n      }\n\n      return function () {\n        var args = arguments,\n            value = args[0];\n\n        if (wrapper && args.length == 1 && isArray(value)) {\n          return wrapper.plant(value).value();\n        }\n\n        var index = 0,\n            result = length ? funcs[index].apply(this, args) : value;\n\n        while (++index < length) {\n          result = funcs[index].call(this, result);\n        }\n\n        return result;\n      };\n    });\n  }\n\n  module.exports = createFlow;\n});","map":[[2,0,1,0],[2,6,1,4,"LodashWrapper"],[2,22,1,20,"require"],[2,53,1,28],[2,71,1,20],[2,72,1,0],[3,0,1,0],[3,6,2,4,"flatRest"],[3,17,2,15,"require"],[3,48,2,23],[3,61,2,15],[3,62,1,0],[4,0,1,0],[4,6,3,4,"getData"],[4,16,3,14,"require"],[4,47,3,22],[4,59,3,14],[4,60,1,0],[5,0,1,0],[5,6,4,4,"getFuncName"],[5,20,4,18,"require"],[5,51,4,26],[5,67,4,18],[5,68,1,0],[6,0,1,0],[6,6,5,4,"isArray"],[6,16,5,14,"require"],[6,47,5,22],[6,58,5,14],[6,59,1,0],[7,0,1,0],[7,6,6,4,"isLaziable"],[7,19,6,17,"require"],[7,50,6,25],[7,65,6,17],[7,66,1,0],[9,0,9,0],[9,6,9,4,"FUNC_ERROR_TEXT"],[9,24,9,22],[9,45,9,0],[10,0,12,0],[10,6,12,4,"WRAP_CURRY_FLAG"],[10,24,12,22],[10,25,12,0],[11,0,12,0],[11,6,13,4,"WRAP_PARTIAL_FLAG"],[11,26,13,24],[11,28,12,0],[12,0,12,0],[12,6,14,4,"WRAP_ARY_FLAG"],[12,22,14,20],[12,25,12,0],[13,0,12,0],[13,6,15,4,"WRAP_REARG_FLAG"],[13,24,15,22],[13,27,12,0],[15,0,24,0],[15,11,24,9,"createFlow"],[15,21,24,0],[15,22,24,20,"fromRight"],[15,31,24,0],[15,33,24,31],[16,0,25,2],[16,11,25,9,"flatRest"],[16,20,25,18],[16,30,25,27,"funcs"],[16,35,25,18],[16,37,25,34],[17,0,26,4],[17,10,26,8,"length"],[17,19,26,17,"funcs"],[17,25,26,23,"length"],[17,31,26,4],[18,0,26,4],[18,10,27,8,"index"],[18,18,27,16,"length"],[18,24,26,4],[19,0,26,4],[19,10,28,8,"prereq"],[19,19,28,17,"LodashWrapper"],[19,33,28,31,"prototype"],[19,42,28,17],[19,43,28,41,"thru"],[19,47,26,4],[21,0,30,4],[21,10,30,8,"fromRight"],[21,19,30,4],[21,21,30,19],[22,0,31,6,"funcs"],[22,14,31,12,"reverse"],[22,21,31,6],[23,0,32,5],[25,0,33,4],[25,13,33,11,"index"],[25,20,33,4],[25,22,33,20],[26,0,34,6],[26,12,34,10,"func"],[26,19,34,17,"funcs"],[26,25,34,23,"index"],[26,30,34,17],[26,31,34,6],[28,0,35,6],[28,12,35,10],[28,19,35,17,"func"],[28,23,35,10],[28,27,35,25],[28,37,35,6],[28,39,35,37],[29,0,36,8],[29,16,36,14],[29,20,36,18,"TypeError"],[29,29,36,14],[29,30,36,28,"FUNC_ERROR_TEXT"],[29,45,36,14],[29,46,36,8],[30,0,37,7],[32,0,38,6],[32,12,38,10,"prereq"],[32,22,38,20],[32,23,38,21,"wrapper"],[32,30,38,10],[32,34,38,32,"getFuncName"],[32,46,38,44,"func"],[32,50,38,32],[32,55,38,53],[32,64,38,6],[32,66,38,64],[33,0,39,8],[33,14,39,12,"wrapper"],[33,24,39,22],[33,28,39,26,"LodashWrapper"],[33,41,39,22],[33,42,39,40],[33,44,39,22],[33,46,39,44],[33,50,39,22],[33,51,39,8],[34,0,40,7],[35,0,41,5],[37,0,42,4,"index"],[37,14,42,12,"wrapper"],[37,24,42,22,"index"],[37,29,42,12],[37,32,42,30,"length"],[37,38,42,4],[39,0,43,4],[39,13,43,11],[39,15,43,13,"index"],[39,20,43,11],[39,23,43,21,"length"],[39,29,43,4],[39,31,43,29],[40,0,44,6,"func"],[40,15,44,13,"funcs"],[40,21,44,19,"index"],[40,26,44,13],[40,27,44,6],[41,0,46,6],[41,12,46,10,"funcName"],[41,23,46,21,"getFuncName"],[41,35,46,33,"func"],[41,39,46,21],[41,40,46,6],[42,0,46,6],[42,12,47,10,"data"],[42,19,47,17,"funcName"],[42,31,47,29],[42,40,47,17],[42,43,47,41,"getData"],[42,51,47,49,"func"],[42,55,47,41],[42,56,47,17],[42,59,47,57,"undefined"],[42,68,46,6],[44,0,49,6],[44,12,49,10,"data"],[44,20,49,18,"isLaziable"],[44,31,49,29,"data"],[44,36,49,34],[44,37,49,29],[44,38,49,18],[44,39,49,10],[44,43,50,12,"data"],[44,48,50,17],[44,49,50,12],[44,55,50,24,"WRAP_ARY_FLAG"],[44,71,50,40,"WRAP_CURRY_FLAG"],[44,86,50,24],[44,89,50,58,"WRAP_PARTIAL_FLAG"],[44,106,50,24],[44,109,50,78,"WRAP_REARG_FLAG"],[44,124,50,12],[44,125,49,10],[44,129,51,12],[44,130,51,13,"data"],[44,135,51,18],[44,136,51,13],[44,138,51,21,"length"],[44,144,49,10],[44,148,51,31,"data"],[44,153,51,36],[44,154,51,31],[44,159,51,42],[44,160,49,6],[44,162,52,12],[45,0,53,8,"wrapper"],[45,20,53,18,"wrapper"],[45,28,53,26,"getFuncName"],[45,40,53,38,"data"],[45,45,53,43],[45,46,53,38],[45,47,53,26],[45,48,53,18],[45,50,53,48,"apply"],[45,55,53,18],[45,56,53,54,"wrapper"],[45,63,53,18],[45,65,53,63,"data"],[45,70,53,68],[45,71,53,63],[45,72,53,18],[45,73,53,8],[46,0,54,7],[46,9,49,6],[46,15,54,13],[47,0,55,8,"wrapper"],[47,20,55,19,"func"],[47,25,55,24,"length"],[47,31,55,19],[47,35,55,34],[47,36,55,19],[47,40,55,39,"isLaziable"],[47,51,55,50,"func"],[47,55,55,39],[47,56,55,18],[47,59,56,12,"wrapper"],[47,67,56,20,"funcName"],[47,75,56,12],[47,78,55,18],[47,81,57,12,"wrapper"],[47,89,57,20,"thru"],[47,93,57,12],[47,94,57,25,"func"],[47,98,57,12],[47,99,55,8],[48,0,58,7],[49,0,59,5],[51,0,60,4],[51,13,60,11],[51,25,60,22],[52,0,61,6],[52,12,61,10,"args"],[52,19,61,17,"arguments"],[52,28,61,6],[53,0,61,6],[53,12,62,10,"value"],[53,20,62,18,"args"],[53,25,62,23],[53,26,62,18],[53,27,61,6],[55,0,64,6],[55,12,64,10,"wrapper"],[55,23,64,21,"args"],[55,28,64,26,"length"],[55,34,64,21],[55,38,64,36],[55,39,64,10],[55,43,64,41,"isArray"],[55,51,64,49,"value"],[55,56,64,41],[55,57,64,6],[55,59,64,57],[56,0,65,8],[56,17,65,15,"wrapper"],[56,25,65,23,"plant"],[56,30,65,15],[56,31,65,29,"value"],[56,36,65,15],[56,38,65,36,"value"],[56,43,65,15],[56,45,65,8],[57,0,66,7],[59,0,67,6],[59,12,67,10,"index"],[59,20,67,18],[59,21,67,6],[60,0,67,6],[60,12,68,10,"result"],[60,21,68,19,"length"],[60,30,68,28,"funcs"],[60,36,68,34,"index"],[60,41,68,28],[60,43,68,41,"apply"],[60,48,68,28],[60,49,68,47],[60,53,68,28],[60,55,68,53,"args"],[60,59,68,28],[60,60,68,19],[60,63,68,61,"value"],[60,68,67,6],[62,0,70,6],[62,15,70,13],[62,17,70,15,"index"],[62,22,70,13],[62,25,70,23,"length"],[62,31,70,6],[62,33,70,31],[63,0,71,8,"result"],[63,19,71,17,"funcs"],[63,25,71,23,"index"],[63,30,71,17],[63,32,71,30,"call"],[63,36,71,17],[63,37,71,35],[63,41,71,17],[63,43,71,41,"result"],[63,49,71,17],[63,50,71,8],[64,0,72,7],[66,0,73,6],[66,15,73,13,"result"],[66,21,73,6],[67,0,74,5],[67,7,60,4],[68,0,75,3],[68,5,25,9],[68,6,25,2],[69,0,76,1],[71,0,78,0,"module"],[71,9,78,7,"exports"],[71,16,78,0],[71,19,78,17,"createFlow"],[71,29,78,0]]},"type":"js/module"}]}