{"dependencies":[{"name":"./_curry2","isAsync":false},{"name":"./_xfBase","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], './_curry2');\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[1], './_xfBase');\n\n  module.exports = function () {\n    function XFindLastIndex(f, xf) {\n      this.xf = xf;\n      this.f = f;\n      this.idx = -1;\n      this.lastIdx = -1;\n    }\n\n    XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n    XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n      return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n    };\n\n    XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n      this.idx += 1;\n\n      if (this.f(input)) {\n        this.lastIdx = this.idx;\n      }\n\n      return result;\n    };\n\n    return _curry2(function _xfindLastIndex(f, xf) {\n      return new XFindLastIndex(f, xf);\n    });\n  }();\n});","map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,16,1,14,"require"],[2,47,1,22],[2,58,1,14],[2,59,1,0],[4,0,2,0],[4,6,2,4,"_xfBase"],[4,16,2,14,"require"],[4,47,2,22],[4,58,2,14],[4,59,2,0],[6,0,5,0,"module"],[6,9,5,7,"exports"],[6,16,5,0],[6,19,5,18],[6,31,5,29],[7,0,6,2],[7,13,6,11,"XFindLastIndex"],[7,27,6,2],[7,28,6,26,"f"],[7,29,6,2],[7,31,6,29,"xf"],[7,33,6,2],[7,35,6,33],[8,0,7,4],[8,11,7,9,"xf"],[8,13,7,4],[8,16,7,14,"xf"],[8,18,7,4],[9,0,8,4],[9,11,8,9,"f"],[9,12,8,4],[9,15,8,13,"f"],[9,16,8,4],[10,0,9,4],[10,11,9,9,"idx"],[10,14,9,4],[10,17,9,15],[10,18,9,16],[10,19,9,4],[11,0,10,4],[11,11,10,9,"lastIdx"],[11,18,10,4],[11,21,10,19],[11,22,10,20],[11,23,10,4],[12,0,11,3],[14,0,12,2,"XFindLastIndex"],[14,19,12,17,"prototype"],[14,28,12,2],[14,29,12,27],[14,48,12,2],[14,52,12,50,"_xfBase"],[14,60,12,58,"init"],[14,64,12,2],[16,0,13,2,"XFindLastIndex"],[16,19,13,17,"prototype"],[16,28,13,2],[16,29,13,27],[16,50,13,2],[16,54,13,52],[16,64,13,61,"result"],[16,70,13,52],[16,72,13,69],[17,0,14,4],[17,13,14,11],[17,18,14,16,"xf"],[17,20,14,11],[17,21,14,19],[17,42,14,11],[17,44,14,42],[17,49,14,47,"xf"],[17,51,14,42],[17,52,14,50],[17,71,14,42],[17,73,14,71,"result"],[17,79,14,42],[17,81,14,79],[17,86,14,84,"lastIdx"],[17,93,14,42],[17,94,14,11],[17,95,14,4],[18,0,15,3],[18,5,13,2],[20,0,16,2,"XFindLastIndex"],[20,19,16,17,"prototype"],[20,28,16,2],[20,29,16,27],[20,48,16,2],[20,52,16,50],[20,62,16,59,"result"],[20,68,16,50],[20,70,16,67,"input"],[20,75,16,50],[20,77,16,74],[21,0,17,4],[21,11,17,9,"idx"],[21,14,17,4],[21,18,17,16],[21,19,17,4],[23,0,18,4],[23,10,18,8],[23,15,18,13,"f"],[23,16,18,8],[23,17,18,15,"input"],[23,22,18,8],[23,23,18,4],[23,25,18,23],[24,0,19,6],[24,13,19,11,"lastIdx"],[24,20,19,6],[24,23,19,21],[24,28,19,26,"idx"],[24,31,19,6],[25,0,20,5],[27,0,21,4],[27,13,21,11,"result"],[27,19,21,4],[28,0,22,3],[28,5,16,2],[30,0,24,2],[30,11,24,9,"_curry2"],[30,19,24,17],[30,28,24,26,"_xfindLastIndex"],[30,43,24,17],[30,44,24,42,"f"],[30,45,24,17],[30,47,24,45,"xf"],[30,49,24,17],[30,51,24,49],[31,0,24,51],[31,13,24,58],[31,17,24,62,"XFindLastIndex"],[31,31,24,58],[31,32,24,77,"f"],[31,33,24,58],[31,35,24,80,"xf"],[31,37,24,58],[31,38,24,51],[32,0,24,86],[32,5,24,9],[32,6,24,2],[33,0,25,1],[33,3,5,18],[33,5,5,0]]},"type":"js/module"}]}