{"dependencies":[{"name":"./_apply","isAsync":false},{"name":"./_createCtor","isAsync":false},{"name":"./_root","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var apply = _$$_REQUIRE(_dependencyMap[0], './_apply'),\n      createCtor = _$$_REQUIRE(_dependencyMap[1], './_createCtor'),\n      root = _$$_REQUIRE(_dependencyMap[2], './_root');\n\n  var WRAP_BIND_FLAG = 1;\n\n  function createPartial(func, bitmask, thisArg, partials) {\n    var isBind = bitmask & WRAP_BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = this && this !== root && this instanceof wrapper ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n\n      return apply(fn, isBind ? thisArg : this, args);\n    }\n\n    return wrapper;\n  }\n\n  module.exports = createPartial;\n});","map":[[2,0,1,0],[2,6,1,4,"apply"],[2,14,1,12,"require"],[2,45,1,20],[2,55,1,12],[2,56,1,0],[3,0,1,0],[3,6,2,4,"createCtor"],[3,19,2,17,"require"],[3,50,2,25],[3,65,2,17],[3,66,1,0],[4,0,1,0],[4,6,3,4,"root"],[4,13,3,11,"require"],[4,44,3,19],[4,53,3,11],[4,54,1,0],[6,0,6,0],[6,6,6,4,"WRAP_BIND_FLAG"],[6,23,6,21],[6,24,6,0],[8,0,20,0],[8,11,20,9,"createPartial"],[8,24,20,0],[8,25,20,23,"func"],[8,29,20,0],[8,31,20,29,"bitmask"],[8,38,20,0],[8,40,20,38,"thisArg"],[8,47,20,0],[8,49,20,47,"partials"],[8,57,20,0],[8,59,20,57],[9,0,21,2],[9,8,21,6,"isBind"],[9,17,21,15,"bitmask"],[9,27,21,25,"WRAP_BIND_FLAG"],[9,41,21,2],[10,0,21,2],[10,8,22,6,"Ctor"],[10,15,22,13,"createCtor"],[10,26,22,24,"func"],[10,30,22,13],[10,31,21,2],[12,0,24,2],[12,13,24,11,"wrapper"],[12,20,24,2],[12,23,24,21],[13,0,25,4],[13,10,25,8,"argsIndex"],[13,22,25,20],[13,23,25,21],[13,24,25,4],[14,0,25,4],[14,10,26,8,"argsLength"],[14,23,26,21,"arguments"],[14,33,26,31,"length"],[14,39,25,4],[15,0,25,4],[15,10,27,8,"leftIndex"],[15,22,27,20],[15,23,27,21],[15,24,25,4],[16,0,25,4],[16,10,28,8,"leftLength"],[16,23,28,21,"partials"],[16,32,28,30,"length"],[16,38,25,4],[17,0,25,4],[17,10,29,8,"args"],[17,17,29,15,"Array"],[17,23,29,21,"leftLength"],[17,36,29,34,"argsLength"],[17,46,29,15],[17,47,25,4],[18,0,25,4],[18,10,30,8,"fn"],[18,15,30,14],[18,23,30,22],[18,32,30,31,"root"],[18,36,30,14],[18,40,30,39],[18,56,30,55,"wrapper"],[18,63,30,13],[18,66,30,66,"Ctor"],[18,70,30,13],[18,73,30,73,"func"],[18,77,25,4],[20,0,32,4],[20,13,32,11],[20,15,32,13,"leftIndex"],[20,24,32,11],[20,27,32,25,"leftLength"],[20,37,32,4],[20,39,32,37],[21,0,33,6,"args"],[21,13,33,11,"leftIndex"],[21,22,33,6],[21,26,33,24,"partials"],[21,35,33,33,"leftIndex"],[21,44,33,24],[21,45,33,6],[22,0,34,5],[24,0,35,4],[24,13,35,11,"argsLength"],[24,25,35,4],[24,27,35,25],[25,0,36,6,"args"],[25,13,36,11,"leftIndex"],[25,24,36,6],[25,28,36,26,"arguments"],[25,38,36,36],[25,40,36,38,"argsIndex"],[25,49,36,26],[25,50,36,6],[26,0,37,5],[28,0,38,4],[28,13,38,11,"apply"],[28,19,38,17,"fn"],[28,21,38,11],[28,23,38,21,"isBind"],[28,32,38,30,"thisArg"],[28,39,38,21],[28,42,38,40],[28,46,38,11],[28,48,38,46,"args"],[28,52,38,11],[28,53,38,4],[29,0,39,3],[31,0,40,2],[31,11,40,9,"wrapper"],[31,18,40,2],[32,0,41,1],[34,0,43,0,"module"],[34,9,43,7,"exports"],[34,16,43,0],[34,19,43,17,"createPartial"],[34,32,43,0]]},"type":"js/module"}]}