{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-native-iphone-x-helper","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"prop-types\"));\n\n  var _reactNative = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"react-native\"));\n\n  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[4], \"react-native-iphone-x-helper\");\n\n  var _jsxFileName = \"/var/www/html/thg/node_modules/native-base/node_modules/react-native-keyboard-aware-scroll-view/lib/KeyboardAwareHOC.js\";\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\n  function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    _component: {\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/var/www/html/thg/node_modules/native-base/node_modules/react-native-keyboard-aware-scroll-view/lib/KeyboardAwareHOC.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var _KAM_DEFAULT_TAB_BAR_HEIGHT = (0, _reactNativeIphoneXHelper.isIphoneX)() ? 83 : 49;\n\n  var _KAM_KEYBOARD_OPENING_TIME = 250;\n  var _KAM_EXTRA_HEIGHT = 75;\n\n  function listenToKeyboardEvents(ScrollableComponent) {\n    var _class, _temp;\n\n    return _wrapComponent(\"_component\")((_temp = _class = function (_React$Component) {\n      function _class(props) {\n        var _this;\n\n        _classCallCheck(this, _class);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));\n\n        _this.getScrollResponder = function () {\n          return _this._rnkasv_keyboardView && _this._rnkasv_keyboardView.getScrollResponder();\n        };\n\n        _this.scrollToPosition = function (x, y) {\n          var animated = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n          var responder = _this.getScrollResponder();\n\n          responder && responder.scrollResponderScrollTo({\n            x: x,\n            y: y,\n            animated: animated\n          });\n        };\n\n        _this.scrollToEnd = function () {\n          var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n          var responder = _this.getScrollResponder();\n\n          responder && responder.scrollResponderScrollToEnd({\n            animated: animated\n          });\n        };\n\n        _this.scrollForExtraHeightOnAndroid = function (extraHeight) {\n          _this.scrollToPosition(0, _this.position.y + extraHeight, true);\n        };\n\n        _this.scrollToFocusedInput = function (reactNode, extraHeight, keyboardOpeningTime) {\n          if (extraHeight === undefined) {\n            extraHeight = _this.props.extraHeight || 0;\n          }\n\n          if (keyboardOpeningTime === undefined) {\n            keyboardOpeningTime = _this.props.keyboardOpeningTime || 0;\n          }\n\n          setTimeout(function () {\n            if (!_this.mountedComponent) {\n              return;\n            }\n\n            var responder = _this.getScrollResponder();\n\n            responder && responder.scrollResponderScrollNativeHandleToKeyboard(reactNode, extraHeight, true);\n          }, keyboardOpeningTime);\n        };\n\n        _this.scrollIntoView = function _callee(element) {\n          var options,\n              _ref,\n              _ref2,\n              parentLayout,\n              childLayout,\n              getScrollPosition,\n              _getScrollPosition,\n              x,\n              y,\n              animated,\n              _args = arguments;\n\n          return regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n                  if (!(!_this._rnkasv_keyboardView || !element)) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 3:\n                  _context.next = 5;\n                  return regeneratorRuntime.awrap(Promise.all([_this._measureElement(_this._rnkasv_keyboardView), _this._measureElement(element)]));\n\n                case 5:\n                  _ref = _context.sent;\n                  _ref2 = _slicedToArray(_ref, 2);\n                  parentLayout = _ref2[0];\n                  childLayout = _ref2[1];\n                  getScrollPosition = options.getScrollPosition || _this._defaultGetScrollPosition;\n                  _getScrollPosition = getScrollPosition(parentLayout, childLayout, _this.position), x = _getScrollPosition.x, y = _getScrollPosition.y, animated = _getScrollPosition.animated;\n\n                  _this.scrollToPosition(x, y, animated);\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, this);\n        };\n\n        _this._defaultGetScrollPosition = function (parentLayout, childLayout, contentOffset) {\n          return {\n            x: 0,\n            y: Math.max(0, childLayout.y - parentLayout.y + contentOffset.y),\n            animated: true\n          };\n        };\n\n        _this._measureElement = function (element) {\n          var node = (0, _reactNative.findNodeHandle)(element);\n          return new Promise(function (resolve) {\n            _reactNative.UIManager.measureInWindow(node, function (x, y, width, height) {\n              resolve({\n                x: x,\n                y: y,\n                width: width,\n                height: height\n              });\n            });\n          });\n        };\n\n        _this._updateKeyboardSpace = function (frames) {\n          if (_this.props.enableAutomaticScroll) {\n            var _keyboardSpace2 = frames.endCoordinates.height + _this.props.extraScrollHeight;\n\n            if (_this.props.viewIsInsideTabBar) {\n              _keyboardSpace2 -= _KAM_DEFAULT_TAB_BAR_HEIGHT;\n            }\n\n            _this.setState({\n              keyboardSpace: _keyboardSpace2\n            });\n\n            var currentlyFocusedField = _reactNative.TextInput.State.currentlyFocusedField();\n\n            var responder = _this.getScrollResponder();\n\n            if (!currentlyFocusedField || !responder) {\n              return;\n            }\n\n            _reactNative.UIManager.viewIsDescendantOf(currentlyFocusedField, responder.getInnerViewNode(), function (isAncestor) {\n              if (isAncestor) {\n                _reactNative.UIManager.measureInWindow(currentlyFocusedField, function (x, y, width, height) {\n                  var textInputBottomPosition = y + height;\n                  var keyboardPosition = frames.endCoordinates.screenY;\n                  var totalExtraHeight = _this.props.extraScrollHeight + _this.props.extraHeight;\n\n                  if (_reactNative.Platform.OS === 'ios') {\n                    if (textInputBottomPosition > keyboardPosition - totalExtraHeight) {\n                      _this._scrollToFocusedInputWithNodeHandle(currentlyFocusedField);\n                    }\n                  } else {\n                    if (textInputBottomPosition > keyboardPosition) {\n                      _keyboardSpace2 = _keyboardSpace2 - (textInputBottomPosition - keyboardPosition);\n\n                      _this.setState({\n                        keyboardSpace: _keyboardSpace2\n                      });\n\n                      _this.scrollForExtraHeightOnAndroid(totalExtraHeight);\n                    } else if (textInputBottomPosition > keyboardPosition - totalExtraHeight) {\n                      _this.scrollForExtraHeightOnAndroid(totalExtraHeight - (keyboardPosition - textInputBottomPosition));\n                    }\n                  }\n                });\n              }\n            });\n          }\n\n          if (!_this.resetCoords) {\n            if (!_this.defaultResetScrollToCoords) {\n              _this.defaultResetScrollToCoords = _this.position;\n            }\n          }\n        };\n\n        _this._resetKeyboardSpace = function () {\n          var keyboardSpace = _this.props.viewIsInsideTabBar ? _KAM_DEFAULT_TAB_BAR_HEIGHT + _this.props.extraScrollHeight || 0 : _this.props.extraScrollHeight || 0;\n\n          _this.setState({\n            keyboardSpace: keyboardSpace\n          });\n\n          if (_this.props.enableResetScrollToCoords === false) {\n            _this.defaultResetScrollToCoords = null;\n            return;\n          } else if (_this.resetCoords) {\n            _this.scrollToPosition(_this.resetCoords.x, _this.resetCoords.y, true);\n          } else {\n            if (_this.defaultResetScrollToCoords) {\n              _this.scrollToPosition(_this.defaultResetScrollToCoords.x, _this.defaultResetScrollToCoords.y, true);\n\n              _this.defaultResetScrollToCoords = null;\n            } else {\n              _this.scrollToPosition(0, 0, true);\n            }\n          }\n        };\n\n        _this._scrollToFocusedInputWithNodeHandle = function (nodeID, extraHeight, keyboardOpeningTime) {\n          if (extraHeight === undefined) {\n            extraHeight = _this.props.extraHeight;\n          }\n\n          var reactNode = _reactNative.default.findNodeHandle(nodeID);\n\n          _this.scrollToFocusedInput(reactNode, extraHeight + _this.props.extraScrollHeight, keyboardOpeningTime !== undefined ? keyboardOpeningTime : _this.props.keyboardOpeningTime || 0);\n        };\n\n        _this._handleOnScroll = function (e) {\n          _this.position = e.nativeEvent.contentOffset;\n        };\n\n        _this._handleRef = function (ref) {\n          _this._rnkasv_keyboardView = ref;\n\n          if (_this.props.innerRef) {\n            _this.props.innerRef(_this._rnkasv_keyboardView);\n          }\n        };\n\n        _this._onScroll = function (e) {\n          _this._handleOnScroll(e);\n\n          _this.props.onScroll && _this.props.onScroll(e);\n        };\n\n        _this.keyboardWillShowEvent = undefined;\n        _this.keyboardWillHideEvent = undefined;\n        _this.position = {\n          x: 0,\n          y: 0\n        };\n        _this.defaultResetScrollToCoords = null;\n\n        var _keyboardSpace = props.viewIsInsideTabBar ? _KAM_DEFAULT_TAB_BAR_HEIGHT : 0;\n\n        _this.state = {\n          keyboardSpace: _keyboardSpace\n        };\n        return _this;\n      }\n\n      _createClass(_class, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this.mountedComponent = true;\n\n          if (_reactNative.Platform.OS === 'ios') {\n            this.keyboardWillShowEvent = _reactNative.Keyboard.addListener('keyboardWillShow', this._updateKeyboardSpace);\n            this.keyboardWillHideEvent = _reactNative.Keyboard.addListener('keyboardWillHide', this._resetKeyboardSpace);\n          } else if (_reactNative.Platform.OS === 'android' && this.props.enableOnAndroid) {\n            this.keyboardWillShowEvent = _reactNative.Keyboard.addListener('keyboardDidShow', this._updateKeyboardSpace);\n            this.keyboardWillHideEvent = _reactNative.Keyboard.addListener('keyboardDidHide', this._resetKeyboardSpace);\n          }\n        }\n      }, {\n        key: \"componentWillReceiveProps\",\n        value: function componentWillReceiveProps(nextProps) {\n          if (nextProps.viewIsInsideTabBar !== this.props.viewIsInsideTabBar) {\n            var _keyboardSpace3 = nextProps.viewIsInsideTabBar ? _KAM_DEFAULT_TAB_BAR_HEIGHT : 0;\n\n            if (this.state.keyboardSpace !== _keyboardSpace3) {\n              this.setState({\n                keyboardSpace: _keyboardSpace3\n              });\n            }\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.mountedComponent = false;\n          this.keyboardWillShowEvent && this.keyboardWillShowEvent.remove();\n          this.keyboardWillHideEvent && this.keyboardWillHideEvent.remove();\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              enableOnAndroid = _this$props.enableOnAndroid,\n              contentContainerStyle = _this$props.contentContainerStyle;\n          var newContentContainerStyle;\n\n          if (_reactNative.Platform.OS === 'android' && enableOnAndroid) {\n            newContentContainerStyle = [].concat(contentContainerStyle).concat({\n              paddingBottom: ((contentContainerStyle || {}).paddingBottom || 0) + this.state.keyboardSpace\n            });\n          }\n\n          return _react.default.createElement(ScrollableComponent, _extends({\n            ref: this._handleRef,\n            keyboardDismissMode: \"interactive\",\n            contentInset: {\n              bottom: this.state.keyboardSpace\n            },\n            automaticallyAdjustContentInsets: false,\n            showsVerticalScrollIndicator: true,\n            scrollEventThrottle: 1\n          }, this.props, {\n            contentContainerStyle: newContentContainerStyle || contentContainerStyle,\n            keyboardSpace: this.state.keyboardSpace,\n            getScrollResponder: this.getScrollResponder,\n            scrollToPosition: this.scrollToPosition,\n            scrollToEnd: this.scrollToEnd,\n            scrollForExtraHeightOnAndroid: this.scrollForExtraHeightOnAndroid,\n            scrollToFocusedInput: this.scrollToFocusedInput,\n            resetKeyboardSpace: this._resetKeyboardSpace,\n            handleOnScroll: this._handleOnScroll,\n            onScroll: this._onScroll,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 397\n            }\n          }));\n        }\n      }]);\n\n      _inherits(_class, _React$Component);\n\n      return _class;\n    }(_react.default.Component), _class.propTypes = {\n      viewIsInsideTabBar: _propTypes.default.bool,\n      resetScrollToCoords: _propTypes.default.shape({\n        x: _propTypes.default.number.isRequired,\n        y: _propTypes.default.number.isRequired\n      }),\n      enableResetScrollToCoords: _propTypes.default.bool,\n      enableAutomaticScroll: _propTypes.default.bool,\n      extraHeight: _propTypes.default.number,\n      extraScrollHeight: _propTypes.default.number,\n      keyboardOpeningTime: _propTypes.default.number,\n      onScroll: _propTypes.default.func,\n      contentContainerStyle: _propTypes.default.any,\n      enableOnAndroid: _propTypes.default.bool,\n      innerRef: _propTypes.default.func\n    }, _class.defaultProps = {\n      enableAutomaticScroll: true,\n      extraHeight: _KAM_EXTRA_HEIGHT,\n      extraScrollHeight: 0,\n      enableResetScrollToCoords: true,\n      keyboardOpeningTime: _KAM_KEYBOARD_OPENING_TIME,\n      viewIsInsideTabBar: false\n    }, _temp));\n  }\n\n  var _default2 = listenToKeyboardEvents;\n  exports.default = _default2;\n});","map":[[7,0,3,0],[11,0,4,0],[13,0,5,0],[15,0,12,0],[68,0,16,0],[68,6,16,6,"_KAM_DEFAULT_TAB_BAR_HEIGHT"],[68,36,16,44],[68,81,16,58],[68,83,16,44],[68,86,16,63],[68,88,16,0],[70,0,17,0],[70,6,17,6,"_KAM_KEYBOARD_OPENING_TIME"],[70,35,17,43],[70,38,17,0],[71,0,18,0],[71,6,18,6,"_KAM_EXTRA_HEIGHT"],[71,26,18,34],[71,28,18,0],[73,0,66,0],[73,11,66,9,"listenToKeyboardEvents"],[73,33,66,0],[73,34,66,32,"ScrollableComponent"],[73,53,66,0],[73,55,66,70],[74,0,66,70],[76,0,67,2],[77,0,107,4],[77,22,107,16,"props"],[77,27,107,4],[77,29,107,46],[78,0,107,46],[80,0,107,46],[82,0,108,6],[82,84,108,12,"props"],[82,89,108,6],[84,0,107,46],[84,14,160,4,"getScrollResponder"],[84,32,107,46],[84,35,160,25],[84,47,160,31],[85,0,161,6],[85,17,162,8],[85,23,162,13,"_rnkasv_keyboardView"],[85,43,162,8],[85,47,163,8],[85,53,163,13,"_rnkasv_keyboardView"],[85,73,163,8],[85,74,163,34,"getScrollResponder"],[85,92,163,8],[85,94,161,6],[86,0,165,5],[86,9,107,46],[88,0,107,46],[88,14,167,4,"scrollToPosition"],[88,30,107,46],[88,33,167,23],[88,43,167,24,"x"],[88,44,167,23],[88,46,167,35,"y"],[88,47,167,23],[88,49,167,75],[89,0,167,75],[89,14,167,46,"animated"],[89,22,167,75],[89,93,167,66],[89,97,167,75],[91,0,168,6],[91,14,168,12,"responder"],[91,26,168,24],[91,32,168,29,"getScrollResponder"],[91,50,168,24],[91,52,168,6],[93,0,169,6,"responder"],[93,23,169,19,"responder"],[93,33,169,29,"scrollResponderScrollTo"],[93,56,169,19],[93,57,169,53],[94,0,169,55,"x"],[94,16,169,53],[95,0,169,58,"y"],[95,16,169,53],[96,0,169,61,"animated"],[97,0,169,53],[97,11,169,19],[97,12,169,6],[98,0,170,5],[98,9,107,46],[100,0,107,46],[100,14,172,4,"scrollToEnd"],[100,25,107,46],[100,28,172,18],[100,40,172,49],[101,0,172,49],[101,14,172,19,"animated"],[101,22,172,49],[101,93,172,40],[101,97,172,49],[103,0,173,6],[103,14,173,12,"responder"],[103,26,173,24],[103,32,173,29,"getScrollResponder"],[103,50,173,24],[103,52,173,6],[105,0,174,6,"responder"],[105,23,174,19,"responder"],[105,33,174,29,"scrollResponderScrollToEnd"],[105,59,174,19],[105,60,174,56],[106,0,174,58,"animated"],[107,0,174,56],[107,11,174,19],[107,12,174,6],[108,0,175,5],[108,9,107,46],[110,0,107,46],[110,14,177,4,"scrollForExtraHeightOnAndroid"],[110,43,107,46],[110,46,177,36],[110,56,177,37,"extraHeight"],[110,67,177,36],[110,69,177,61],[111,0,178,6],[111,16,178,11,"scrollToPosition"],[111,32,178,6],[111,33,178,28],[111,34,178,6],[111,36,178,31],[111,42,178,36,"position"],[111,50,178,31],[111,51,178,45,"y"],[111,52,178,31],[111,55,178,49,"extraHeight"],[111,66,178,6],[111,68,178,62],[111,72,178,6],[112,0,179,5],[112,9,107,46],[114,0,107,46],[114,14,185,4,"scrollToFocusedInput"],[114,34,107,46],[114,37,185,27],[114,47,186,6,"reactNode"],[114,56,185,27],[114,58,187,6,"extraHeight"],[114,69,185,27],[114,71,188,6,"keyboardOpeningTime"],[114,90,185,27],[114,92,189,9],[115,0,190,6],[115,14,190,10,"extraHeight"],[115,30,190,26,"undefined"],[115,39,190,6],[115,41,190,37],[116,0,191,8,"extraHeight"],[116,26,191,22],[116,32,191,27,"props"],[116,37,191,22],[116,38,191,33,"extraHeight"],[116,49,191,22],[116,53,191,48],[116,54,191,8],[117,0,192,7],[119,0,193,6],[119,14,193,10,"keyboardOpeningTime"],[119,38,193,34,"undefined"],[119,47,193,6],[119,49,193,45],[120,0,194,8,"keyboardOpeningTime"],[120,34,194,30],[120,40,194,35,"props"],[120,45,194,30],[120,46,194,41,"keyboardOpeningTime"],[120,65,194,30],[120,69,194,64],[120,70,194,8],[121,0,195,7],[123,0,196,6,"setTimeout"],[123,21,196,17],[123,33,196,23],[124,0,197,8],[124,16,197,12],[124,17,197,13],[124,23,197,18,"mountedComponent"],[124,39,197,8],[124,41,197,36],[125,0,198,10],[126,0,199,9],[128,0,200,8],[128,16,200,14,"responder"],[128,28,200,26],[128,34,200,31,"getScrollResponder"],[128,52,200,26],[128,54,200,8],[130,0,201,8,"responder"],[130,25,202,10,"responder"],[130,35,202,20,"scrollResponderScrollNativeHandleToKeyboard"],[130,78,202,10],[130,79,203,12,"reactNode"],[130,88,202,10],[130,90,204,12,"extraHeight"],[130,101,202,10],[130,103,205,12],[130,107,202,10],[130,108,201,8],[131,0,207,7],[131,11,196,6],[131,13,207,9,"keyboardOpeningTime"],[131,32,196,6],[132,0,208,5],[132,9,107,46],[134,0,107,46],[134,14,210,4,"scrollIntoView"],[134,28,107,46],[134,31,210,21],[134,48,211,6,"element"],[134,55,210,21],[135,0,210,21],[136,0,210,21],[137,0,210,21],[138,0,210,21],[139,0,210,21],[140,0,210,21],[141,0,210,21],[142,0,210,21],[143,0,210,21],[144,0,210,21],[145,0,210,21],[147,0,210,21],[148,0,210,21],[149,0,210,21],[150,0,210,21],[151,0,212,6,"options"],[151,25,210,21],[151,84,212,39],[151,86,210,21],[153,0,210,21],[153,24,214,10],[153,25,214,11],[153,31,214,16,"_rnkasv_keyboardView"],[153,51,214,10],[153,55,214,40],[153,56,214,41,"element"],[153,63,210,21],[154,0,210,21],[155,0,210,21],[156,0,210,21],[158,0,210,21],[160,0,210,21],[161,0,210,21],[162,0,210,21],[162,50,221,16,"Promise"],[162,58,221,24,"all"],[162,61,221,16],[162,62,221,28],[162,63,222,8],[162,69,222,13,"_measureElement"],[162,84,222,8],[162,85,222,29],[162,91,222,34,"_rnkasv_keyboardView"],[162,111,222,8],[162,112,221,28],[162,114,223,8],[162,120,223,13,"_measureElement"],[162,135,223,8],[162,136,223,29,"element"],[162,143,223,8],[162,144,221,28],[162,145,221,16],[162,146,210,21],[164,0,210,21],[165,0,210,21],[166,0,210,21],[167,0,219,8,"parentLayout"],[167,30,210,21],[168,0,220,8,"childLayout"],[168,29,210,21],[169,0,226,12,"getScrollPosition"],[169,35,210,21],[169,38,226,32,"options"],[169,46,226,40,"getScrollPosition"],[169,63,226,32],[169,67,226,61],[169,73,226,66,"_defaultGetScrollPosition"],[169,98,210,21],[170,0,210,21],[170,39,227,33,"getScrollPosition"],[170,57,227,51,"parentLayout"],[170,69,227,33],[170,71,227,65,"childLayout"],[170,82,227,33],[170,84,227,78],[170,90,227,83,"position"],[170,98,227,33],[170,99,210,21],[170,101,227,14,"x"],[170,102,210,21],[170,124,227,14,"x"],[170,125,210,21],[170,127,227,17,"y"],[170,128,210,21],[170,150,227,17,"y"],[170,151,210,21],[170,153,227,20,"animated"],[170,161,210,21],[170,183,227,20,"animated"],[170,191,210,21],[172,0,228,6],[172,24,228,11,"scrollToPosition"],[172,40,228,6],[172,41,228,28,"x"],[172,42,228,6],[172,44,228,31,"y"],[172,45,228,6],[172,47,228,34,"animated"],[172,55,228,6],[174,0,210,21],[175,0,210,21],[176,0,210,21],[177,0,210,21],[178,0,210,21],[179,0,210,21],[180,0,210,21],[180,9,107,46],[182,0,107,46],[182,14,231,4,"_defaultGetScrollPosition"],[182,39,107,46],[182,42,231,32],[182,52,232,6,"parentLayout"],[182,64,231,32],[182,66,233,6,"childLayout"],[182,77,231,32],[182,79,234,6,"contentOffset"],[182,92,231,32],[182,94,235,25],[183,0,236,6],[183,17,236,13],[184,0,237,8,"x"],[184,15,237,11],[184,16,236,13],[185,0,238,8,"y"],[185,15,238,11,"Math"],[185,20,238,16,"max"],[185,23,238,11],[185,24,238,20],[185,25,238,11],[185,27,238,23,"childLayout"],[185,39,238,35,"y"],[185,40,238,23],[185,43,238,39,"parentLayout"],[185,56,238,52,"y"],[185,57,238,23],[185,60,238,56,"contentOffset"],[185,74,238,70,"y"],[185,75,238,11],[185,76,236,13],[186,0,239,8,"animated"],[186,22,239,18],[187,0,236,13],[187,11,236,6],[188,0,241,5],[188,9,107,46],[190,0,107,46],[190,14,243,4,"_measureElement"],[190,29,107,46],[190,32,243,22],[190,42,243,23,"element"],[190,49,243,22],[190,51,243,77],[191,0,244,6],[191,14,244,12,"node"],[191,21,244,19],[191,54,244,34,"element"],[191,61,244,19],[191,62,244,6],[192,0,245,6],[192,17,245,13],[192,21,245,17,"Promise"],[192,28,245,13],[192,29,245,25],[192,39,245,26,"resolve"],[192,46,245,25],[192,48,245,63],[193,0,246,8,"UIManager"],[193,35,246,18,"measureInWindow"],[193,50,246,8],[193,51,246,34,"node"],[193,55,246,8],[193,57,246,40],[193,67,246,41,"x"],[193,68,246,40],[193,70,246,52,"y"],[193,71,246,40],[193,73,246,63,"width"],[193,78,246,40],[193,80,246,78,"height"],[193,86,246,40],[193,88,246,97],[194,0,247,10,"resolve"],[194,22,247,18],[195,0,247,20,"x"],[195,20,247,18],[196,0,247,23,"y"],[196,20,247,18],[197,0,247,26,"width"],[197,28,247,18],[198,0,247,33,"height"],[199,0,247,18],[199,15,247,10],[200,0,248,9],[200,13,246,8],[201,0,249,7],[201,11,245,13],[201,12,245,6],[202,0,250,5],[202,9,107,46],[204,0,107,46],[204,14,253,4,"_updateKeyboardSpace"],[204,34,107,46],[204,37,253,27],[204,47,253,28,"frames"],[204,53,253,27],[204,55,253,47],[205,0,255,6],[205,14,255,10],[205,20,255,15,"props"],[205,25,255,10],[205,26,255,21,"enableAutomaticScroll"],[205,47,255,6],[205,49,255,44],[206,0,256,8],[206,16,256,12,"keyboardSpace"],[206,34,256,36,"frames"],[206,41,256,43,"endCoordinates"],[206,55,256,36],[206,56,256,58,"height"],[206,62,256,36],[206,65,256,67],[206,71,256,72,"props"],[206,76,256,67],[206,77,256,78,"extraScrollHeight"],[206,94,256,8],[208,0,257,8],[208,16,257,12],[208,22,257,17,"props"],[208,27,257,12],[208,28,257,23,"viewIsInsideTabBar"],[208,46,257,8],[208,48,257,43],[209,0,258,10,"keyboardSpace"],[209,33,258,27,"_KAM_DEFAULT_TAB_BAR_HEIGHT"],[209,60,258,10],[210,0,259,9],[212,0,260,8],[212,18,260,13,"setState"],[212,26,260,8],[212,27,260,22],[213,0,260,24,"keyboardSpace"],[214,0,260,22],[214,13,260,8],[216,0,261,8],[216,16,261,14,"currentlyFocusedField"],[216,40,261,38,"TextInput"],[216,63,261,48,"State"],[216,68,261,38],[216,69,261,54,"currentlyFocusedField"],[216,90,261,38],[216,92,261,8],[218,0,262,8],[218,16,262,14,"responder"],[218,28,262,26],[218,34,262,31,"getScrollResponder"],[218,52,262,26],[218,54,262,8],[220,0,263,8],[220,16,263,12],[220,17,263,13,"currentlyFocusedField"],[220,38,263,12],[220,42,263,38],[220,43,263,39,"responder"],[220,52,263,8],[220,54,263,50],[221,0,264,10],[222,0,265,9],[224,0,266,8,"UIManager"],[224,35,266,18,"viewIsDescendantOf"],[224,53,266,8],[224,54,267,10,"currentlyFocusedField"],[224,75,266,8],[224,77,268,10,"responder"],[224,87,268,20,"getInnerViewNode"],[224,103,268,10],[224,105,266,8],[224,107,269,10],[224,117,269,11,"isAncestor"],[224,127,269,10],[224,129,269,35],[225,0,270,12],[225,18,270,16,"isAncestor"],[225,28,270,12],[225,30,270,28],[226,0,272,14,"UIManager"],[226,39,272,24,"measureInWindow"],[226,54,272,14],[226,55,273,16,"currentlyFocusedField"],[226,76,272,14],[226,78,274,16],[226,88,274,17,"x"],[226,89,274,16],[226,91,274,28,"y"],[226,92,274,16],[226,94,274,39,"width"],[226,99,274,16],[226,101,274,54,"height"],[226,107,274,16],[226,109,274,73],[227,0,275,18],[227,22,275,24,"textInputBottomPosition"],[227,48,275,50,"y"],[227,52,275,54,"height"],[227,58,275,18],[228,0,276,18],[228,22,276,24,"keyboardPosition"],[228,41,276,43,"frames"],[228,48,276,50,"endCoordinates"],[228,62,276,43],[228,63,276,65,"screenY"],[228,70,276,18],[229,0,277,18],[229,22,277,24,"totalExtraHeight"],[229,41,278,20],[229,47,278,25,"props"],[229,52,278,20],[229,53,278,31,"extraScrollHeight"],[229,70,278,20],[229,73,278,51],[229,79,278,56,"props"],[229,84,278,51],[229,85,278,62,"extraHeight"],[229,96,277,18],[231,0,279,18],[231,22,279,22,"Platform"],[231,44,279,31,"OS"],[231,46,279,22],[231,51,279,38],[231,56,279,18],[231,58,279,45],[232,0,280,20],[232,24,281,22,"textInputBottomPosition"],[232,50,282,22,"keyboardPosition"],[232,69,282,41,"totalExtraHeight"],[232,85,280,20],[232,87,283,22],[233,0,284,22],[233,28,284,27,"_scrollToFocusedInputWithNodeHandle"],[233,63,284,22],[233,64,285,24,"currentlyFocusedField"],[233,85,284,22],[234,0,287,21],[235,0,288,19],[235,19,279,18],[235,25,288,25],[236,0,292,20],[236,24,292,24,"textInputBottomPosition"],[236,50,292,50,"keyboardPosition"],[236,66,292,20],[236,68,292,68],[237,0,295,22,"keyboardSpace"],[237,40,296,24,"keyboardSpace"],[237,59,297,25,"textInputBottomPosition"],[237,85,297,51,"keyboardPosition"],[237,101,296,24],[237,102,295,22],[239,0,298,22],[239,28,298,27,"setState"],[239,36,298,22],[239,37,298,36],[240,0,298,38,"keyboardSpace"],[241,0,298,36],[241,23,298,22],[243,0,299,22],[243,28,299,27,"scrollForExtraHeightOnAndroid"],[243,57,299,22],[243,58,299,57,"totalExtraHeight"],[243,74,299,22],[244,0,300,21],[244,21,292,20],[244,27,300,27],[244,31,301,22,"textInputBottomPosition"],[244,57,302,22,"keyboardPosition"],[244,76,302,41,"totalExtraHeight"],[244,92,300,27],[244,94,303,22],[245,0,304,22],[245,28,304,27,"scrollForExtraHeightOnAndroid"],[245,57,304,22],[245,58,305,24,"totalExtraHeight"],[245,78,306,27,"keyboardPosition"],[245,97,306,46,"textInputBottomPosition"],[245,120,305,24],[245,121,304,22],[246,0,308,21],[247,0,309,19],[248,0,310,17],[248,17,272,14],[249,0,312,13],[250,0,313,11],[250,13,266,8],[251,0,315,7],[253,0,316,6],[253,14,316,10],[253,15,316,11],[253,21,316,16,"resetCoords"],[253,32,316,6],[253,34,316,29],[254,0,317,8],[254,16,317,12],[254,17,317,13],[254,23,317,18,"defaultResetScrollToCoords"],[254,49,317,8],[254,51,317,46],[255,0,318,10],[255,20,318,15,"defaultResetScrollToCoords"],[255,46,318,10],[255,49,318,44],[255,55,318,49,"position"],[255,63,318,10],[256,0,319,9],[257,0,320,7],[258,0,321,5],[258,9,107,46],[260,0,107,46],[260,14,323,4,"_resetKeyboardSpace"],[260,33,107,46],[260,36,323,26],[260,48,323,32],[261,0,324,6],[261,14,324,12,"keyboardSpace"],[261,30,324,36],[261,36,324,41,"props"],[261,41,324,36],[261,42,324,47,"viewIsInsideTabBar"],[261,60,324,36],[261,63,325,10,"_KAM_DEFAULT_TAB_BAR_HEIGHT"],[261,93,325,40],[261,99,325,45,"props"],[261,104,325,40],[261,105,325,51,"extraScrollHeight"],[261,122,325,10],[261,126,325,72],[261,127,324,36],[261,130,326,10],[261,136,326,15,"props"],[261,141,326,10],[261,142,326,21,"extraScrollHeight"],[261,159,326,10],[261,163,326,42],[261,164,324,6],[263,0,327,6],[263,16,327,11,"setState"],[263,24,327,6],[263,25,327,20],[264,0,327,22,"keyboardSpace"],[265,0,327,20],[265,11,327,6],[267,0,329,6],[267,14,329,10],[267,20,329,15,"props"],[267,25,329,10],[267,26,329,21,"enableResetScrollToCoords"],[267,51,329,10],[267,56,329,51],[267,61,329,6],[267,63,329,58],[268,0,330,8],[268,18,330,13,"defaultResetScrollToCoords"],[268,44,330,8],[268,47,330,42],[268,51,330,8],[269,0,331,8],[270,0,332,7],[270,11,329,6],[270,17,332,13],[270,21,332,17],[270,27,332,22,"resetCoords"],[270,38,332,13],[270,40,332,35],[271,0,333,8],[271,18,333,13,"scrollToPosition"],[271,34,333,8],[271,35,333,30],[271,41,333,35,"resetCoords"],[271,52,333,30],[271,53,333,47,"x"],[271,54,333,8],[271,56,333,50],[271,62,333,55,"resetCoords"],[271,73,333,50],[271,74,333,67,"y"],[271,75,333,8],[271,77,333,70],[271,81,333,8],[272,0,334,7],[272,11,332,13],[272,17,334,13],[273,0,335,8],[273,16,335,12],[273,22,335,17,"defaultResetScrollToCoords"],[273,48,335,8],[273,50,335,45],[274,0,336,10],[274,20,336,15,"scrollToPosition"],[274,36,336,10],[274,37,337,12],[274,43,337,17,"defaultResetScrollToCoords"],[274,69,337,12],[274,70,337,44,"x"],[274,71,336,10],[274,73,338,12],[274,79,338,17,"defaultResetScrollToCoords"],[274,105,338,12],[274,106,338,44,"y"],[274,107,336,10],[274,109,339,12],[274,113,336,10],[276,0,341,10],[276,20,341,15,"defaultResetScrollToCoords"],[276,46,341,10],[276,49,341,44],[276,53,341,10],[277,0,342,9],[277,13,335,8],[277,19,342,15],[278,0,343,10],[278,20,343,15,"scrollToPosition"],[278,36,343,10],[278,37,343,32],[278,38,343,10],[278,40,343,35],[278,41,343,10],[278,43,343,38],[278,47,343,10],[279,0,344,9],[280,0,345,7],[281,0,346,5],[281,9,107,46],[283,0,107,46],[283,14,348,4,"_scrollToFocusedInputWithNodeHandle"],[283,49,107,46],[283,52,348,42],[283,62,349,6,"nodeID"],[283,68,348,42],[283,70,350,6,"extraHeight"],[283,81,348,42],[283,83,351,6,"keyboardOpeningTime"],[283,102,348,42],[283,104,352,9],[284,0,353,6],[284,14,353,10,"extraHeight"],[284,30,353,26,"undefined"],[284,39,353,6],[284,41,353,37],[285,0,354,8,"extraHeight"],[285,26,354,22],[285,32,354,27,"props"],[285,37,354,22],[285,38,354,33,"extraHeight"],[285,49,354,8],[286,0,355,7],[288,0,356,6],[288,14,356,12,"reactNode"],[288,26,356,24,"ReactNative"],[288,47,356,36,"findNodeHandle"],[288,61,356,24],[288,62,356,51,"nodeID"],[288,68,356,24],[288,69,356,6],[290,0,357,6],[290,16,357,11,"scrollToFocusedInput"],[290,36,357,6],[290,37,358,8,"reactNode"],[290,46,357,6],[290,48,359,8,"extraHeight"],[290,62,359,22],[290,68,359,27,"props"],[290,73,359,22],[290,74,359,33,"extraScrollHeight"],[290,91,357,6],[290,93,360,8,"keyboardOpeningTime"],[290,117,360,32,"undefined"],[290,126,360,8],[290,129,361,12,"keyboardOpeningTime"],[290,148,360,8],[290,151,362,12],[290,157,362,17,"props"],[290,162,362,12],[290,163,362,23,"keyboardOpeningTime"],[290,182,362,12],[290,186,362,46],[290,187,357,6],[291,0,364,5],[291,9,107,46],[293,0,107,46],[293,14,366,4,"_handleOnScroll"],[293,29,107,46],[293,32,366,22],[293,42,367,6,"e"],[293,43,366,22],[293,45,368,9],[294,0,369,6],[294,16,369,11,"position"],[294,24,369,6],[294,27,369,22,"e"],[294,29,369,24,"nativeEvent"],[294,40,369,22],[294,41,369,36,"contentOffset"],[294,54,369,6],[295,0,370,5],[295,9,107,46],[297,0,107,46],[297,14,372,4,"_handleRef"],[297,24,107,46],[297,27,372,17],[297,37,372,18,"ref"],[297,40,372,17],[297,42,372,46],[298,0,373,6],[298,16,373,11,"_rnkasv_keyboardView"],[298,36,373,6],[298,39,373,34,"ref"],[298,42,373,6],[300,0,374,6],[300,14,374,10],[300,20,374,15,"props"],[300,25,374,10],[300,26,374,21,"innerRef"],[300,34,374,6],[300,36,374,31],[301,0,375,8],[301,18,375,13,"props"],[301,23,375,8],[301,24,375,19,"innerRef"],[301,32,375,8],[301,33,375,28],[301,39,375,33,"_rnkasv_keyboardView"],[301,59,375,8],[302,0,376,7],[303,0,377,5],[303,9,107,46],[305,0,107,46],[305,14,379,4,"_onScroll"],[305,23,107,46],[305,26,379,16],[305,36,380,6,"e"],[305,37,379,16],[305,39,381,9],[306,0,382,6],[306,16,382,11,"_handleOnScroll"],[306,31,382,6],[306,32,382,27,"e"],[306,33,382,6],[308,0,383,6],[308,16,383,11,"props"],[308,21,383,6],[308,22,383,17,"onScroll"],[308,30,383,6],[308,34,383,29],[308,40,383,34,"props"],[308,45,383,29],[308,46,383,40,"onScroll"],[308,54,383,29],[308,55,383,49,"e"],[308,56,383,29],[308,57,383,6],[309,0,384,5],[309,9,107,46],[311,0,109,6],[311,14,109,11,"keyboardWillShowEvent"],[311,35,109,6],[311,38,109,35,"undefined"],[311,47,109,6],[312,0,110,6],[312,14,110,11,"keyboardWillHideEvent"],[312,35,110,6],[312,38,110,35,"undefined"],[312,47,110,6],[313,0,111,6],[313,14,111,11,"position"],[313,22,111,6],[313,25,111,22],[314,0,111,24,"x"],[314,13,111,27],[314,14,111,22],[315,0,111,30,"y"],[315,13,111,33],[316,0,111,22],[316,9,111,6],[317,0,112,6],[317,14,112,11,"defaultResetScrollToCoords"],[317,40,112,6],[317,43,112,40],[317,47,112,6],[319,0,113,6],[319,12,113,12,"keyboardSpace"],[319,29,113,36,"props"],[319,35,113,42,"viewIsInsideTabBar"],[319,53,113,36],[319,56,114,10,"_KAM_DEFAULT_TAB_BAR_HEIGHT"],[319,83,113,36],[319,86,115,10],[319,87,113,6],[321,0,116,6],[321,14,116,11,"state"],[321,19,116,6],[321,22,116,19],[322,0,116,21,"keyboardSpace"],[323,0,116,19],[323,9,116,6],[324,0,107,46],[325,0,117,5],[327,0,67,2],[328,0,67,2],[329,0,67,2],[329,44,119,24],[330,0,120,6],[330,15,120,11,"mountedComponent"],[330,31,120,6],[330,34,120,30],[330,38,120,6],[332,0,122,6],[332,14,122,10,"Platform"],[332,36,122,19,"OS"],[332,38,122,10],[332,43,122,26],[332,48,122,6],[332,50,122,33],[333,0,123,8],[333,17,123,13,"keyboardWillShowEvent"],[333,38,123,8],[333,41,123,37,"Keyboard"],[333,63,123,46,"addListener"],[333,74,123,37],[333,75,124,10],[333,93,123,37],[333,95,125,10],[333,100,125,15,"_updateKeyboardSpace"],[333,120,123,37],[333,121,123,8],[334,0,127,8],[334,17,127,13,"keyboardWillHideEvent"],[334,38,127,8],[334,41,127,37,"Keyboard"],[334,63,127,46,"addListener"],[334,74,127,37],[334,75,128,10],[334,93,127,37],[334,95,129,10],[334,100,129,15,"_resetKeyboardSpace"],[334,119,127,37],[334,120,127,8],[335,0,131,7],[335,11,122,6],[335,17,131,13],[335,21,131,17,"Platform"],[335,43,131,26,"OS"],[335,45,131,17],[335,50,131,33],[335,59,131,17],[335,63,131,46],[335,68,131,51,"props"],[335,73,131,46],[335,74,131,57,"enableOnAndroid"],[335,89,131,13],[335,91,131,74],[336,0,132,8],[336,17,132,13,"keyboardWillShowEvent"],[336,38,132,8],[336,41,132,37,"Keyboard"],[336,63,132,46,"addListener"],[336,74,132,37],[336,75,133,10],[336,92,132,37],[336,94,134,10],[336,99,134,15,"_updateKeyboardSpace"],[336,119,132,37],[336,120,132,8],[337,0,136,8],[337,17,136,13,"keyboardWillHideEvent"],[337,38,136,8],[337,41,136,37,"Keyboard"],[337,63,136,46,"addListener"],[337,74,136,37],[337,75,137,10],[337,92,136,37],[337,94,138,10],[337,99,138,15,"_resetKeyboardSpace"],[337,118,136,37],[337,119,136,8],[338,0,140,7],[339,0,141,5],[340,0,67,2],[341,0,67,2],[342,0,67,2],[342,50,143,30,"nextProps"],[342,59,67,2],[342,61,143,64],[343,0,144,6],[343,14,144,10,"nextProps"],[343,24,144,20,"viewIsInsideTabBar"],[343,42,144,10],[343,47,144,43],[343,52,144,48,"props"],[343,57,144,43],[343,58,144,54,"viewIsInsideTabBar"],[343,76,144,6],[343,78,144,74],[344,0,145,8],[344,16,145,14,"keyboardSpace"],[344,34,145,38,"nextProps"],[344,44,145,48,"viewIsInsideTabBar"],[344,62,145,38],[344,65,146,12,"_KAM_DEFAULT_TAB_BAR_HEIGHT"],[344,92,145,38],[344,95,147,12],[344,96,145,8],[346,0,148,8],[346,16,148,12],[346,21,148,17,"state"],[346,26,148,12],[346,27,148,23,"keyboardSpace"],[346,40,148,12],[346,45,148,41,"keyboardSpace"],[346,60,148,8],[346,62,148,56],[347,0,149,10],[347,19,149,15,"setState"],[347,27,149,10],[347,28,149,24],[348,0,149,26,"keyboardSpace"],[349,0,149,24],[349,15,149,10],[350,0,150,9],[351,0,151,7],[352,0,152,5],[353,0,67,2],[354,0,67,2],[355,0,67,2],[355,47,154,27],[356,0,155,6],[356,15,155,11,"mountedComponent"],[356,31,155,6],[356,34,155,30],[356,39,155,6],[357,0,156,6],[357,15,156,11,"keyboardWillShowEvent"],[357,36,156,6],[357,40,156,36],[357,45,156,41,"keyboardWillShowEvent"],[357,66,156,36],[357,67,156,63,"remove"],[357,73,156,36],[357,75,156,6],[358,0,157,6],[358,15,157,11,"keyboardWillHideEvent"],[358,36,157,6],[358,40,157,36],[358,45,157,41,"keyboardWillHideEvent"],[358,66,157,36],[358,67,157,63,"remove"],[358,73,157,36],[358,75,157,6],[359,0,158,5],[360,0,67,2],[361,0,67,2],[362,0,67,2],[362,33,386,13],[363,0,386,13],[363,28,387,57],[363,33,387,62,"props"],[363,38,386,13],[364,0,386,13],[364,14,387,14,"enableOnAndroid"],[364,29,386,13],[364,44,387,14,"enableOnAndroid"],[364,59,386,13],[365,0,386,13],[365,14,387,31,"contentContainerStyle"],[365,35,386,13],[365,50,387,31,"contentContainerStyle"],[365,71,386,13],[366,0,388,6],[366,14,388,10,"newContentContainerStyle"],[366,38,388,6],[368,0,389,6],[368,14,389,10,"Platform"],[368,36,389,19,"OS"],[368,38,389,10],[368,43,389,26],[368,52,389,10],[368,56,389,39,"enableOnAndroid"],[368,71,389,6],[368,73,389,56],[369,0,390,8,"newContentContainerStyle"],[369,39,390,35],[369,42,390,38,"concat"],[369,48,390,35],[369,49,390,45,"contentContainerStyle"],[369,70,390,35],[369,72,390,68,"concat"],[369,78,390,35],[369,79,390,75],[370,0,391,10,"paddingBottom"],[370,29,392,12],[370,30,392,13],[370,31,392,14,"contentContainerStyle"],[370,56,392,39],[370,58,392,13],[370,60,392,43,"paddingBottom"],[370,73,392,13],[370,77,392,60],[370,78,392,12],[370,82,393,12],[370,87,393,17,"state"],[370,92,393,12],[370,93,393,23,"keyboardSpace"],[371,0,390,75],[371,13,390,35],[371,14,390,8],[372,0,395,7],[374,0,396,6],[374,17,397,8],[374,46,397,9],[374,65,397,8],[375,0,398,10],[375,17,398,15],[375,22,398,20,"_handleRef"],[375,32,397,8],[376,0,399,10],[376,33,399,30],[376,46,397,8],[377,0,400,10],[377,26,400,24],[378,0,400,26,"bottom"],[378,22,400,34],[378,27,400,39,"state"],[378,32,400,34],[378,33,400,45,"keyboardSpace"],[379,0,400,24],[379,13,397,8],[380,0,401,10],[380,46,401,44],[380,51,397,8],[381,0,402,10],[381,42,402,40],[381,46,397,8],[382,0,403,10],[382,33,403,31],[383,0,397,8],[383,13,404,14],[383,18,404,19,"props"],[383,23,397,8],[384,0,405,10],[384,35,406,12,"newContentContainerStyle"],[384,63,406,40,"contentContainerStyle"],[384,84,397,8],[385,0,408,10],[385,27,408,25],[385,32,408,30,"state"],[385,37,408,25],[385,38,408,36,"keyboardSpace"],[385,51,397,8],[386,0,409,10],[386,32,409,30],[386,37,409,35,"getScrollResponder"],[386,55,397,8],[387,0,410,10],[387,30,410,28],[387,35,410,33,"scrollToPosition"],[387,51,397,8],[388,0,411,10],[388,25,411,23],[388,30,411,28,"scrollToEnd"],[388,41,397,8],[389,0,412,10],[389,43,412,41],[389,48,412,46,"scrollForExtraHeightOnAndroid"],[389,77,397,8],[390,0,413,10],[390,34,413,32],[390,39,413,37,"scrollToFocusedInput"],[390,59,397,8],[391,0,414,10],[391,32,414,30],[391,37,414,35,"_resetKeyboardSpace"],[391,56,397,8],[392,0,415,10],[392,28,415,26],[392,33,415,31,"_handleOnScroll"],[392,48,397,8],[393,0,416,10],[393,22,416,20],[393,27,416,25,"_onScroll"],[393,36,397,8],[394,0,397,8],[395,0,397,8],[396,0,397,8],[397,0,397,8],[398,0,397,8],[398,13,396,6],[399,0,419,5],[400,0,67,2],[402,0,67,2],[404,0,67,2],[405,0,67,2],[405,6,67,23,"React"],[405,21,67,29,"Component"],[405,30,67,2],[405,40,81,11,"propTypes"],[405,49,67,2],[405,52,81,23],[406,0,82,6,"viewIsInsideTabBar"],[406,26,82,26,"PropTypes"],[406,45,82,36,"bool"],[406,49,81,23],[407,0,83,6,"resetScrollToCoords"],[407,27,83,27,"PropTypes"],[407,46,83,37,"shape"],[407,51,83,27],[407,52,83,43],[408,0,84,8,"x"],[408,11,84,11,"PropTypes"],[408,30,84,21,"number"],[408,36,84,11],[408,37,84,28,"isRequired"],[408,47,83,43],[409,0,85,8,"y"],[409,11,85,11,"PropTypes"],[409,30,85,21,"number"],[409,36,85,11],[409,37,85,28,"isRequired"],[410,0,83,43],[410,7,83,27],[410,8,81,23],[411,0,87,6,"enableResetScrollToCoords"],[411,33,87,33,"PropTypes"],[411,52,87,43,"bool"],[411,56,81,23],[412,0,88,6,"enableAutomaticScroll"],[412,29,88,29,"PropTypes"],[412,48,88,39,"bool"],[412,52,81,23],[413,0,89,6,"extraHeight"],[413,19,89,19,"PropTypes"],[413,38,89,29,"number"],[413,44,81,23],[414,0,90,6,"extraScrollHeight"],[414,25,90,25,"PropTypes"],[414,44,90,35,"number"],[414,50,81,23],[415,0,91,6,"keyboardOpeningTime"],[415,27,91,27,"PropTypes"],[415,46,91,37,"number"],[415,52,81,23],[416,0,92,6,"onScroll"],[416,16,92,16,"PropTypes"],[416,35,92,26,"func"],[416,39,81,23],[417,0,93,6,"contentContainerStyle"],[417,29,93,29,"PropTypes"],[417,48,93,39,"any"],[417,51,81,23],[418,0,94,6,"enableOnAndroid"],[418,23,94,23,"PropTypes"],[418,42,94,33,"bool"],[418,46,81,23],[419,0,95,6,"innerRef"],[419,16,95,16,"PropTypes"],[419,35,95,26,"func"],[420,0,81,23],[420,5,67,2],[420,14,98,11,"defaultProps"],[420,26,67,2],[420,29,98,26],[421,0,99,6,"enableAutomaticScroll"],[421,29,99,29],[421,33,98,26],[422,0,100,6,"extraHeight"],[422,19,100,19,"_KAM_EXTRA_HEIGHT"],[422,36,98,26],[423,0,101,6,"extraScrollHeight"],[423,25,101,25],[423,26,98,26],[424,0,102,6,"enableResetScrollToCoords"],[424,33,102,33],[424,37,98,26],[425,0,103,6,"keyboardOpeningTime"],[425,27,103,27,"_KAM_KEYBOARD_OPENING_TIME"],[425,53,98,26],[426,0,104,6,"viewIsInsideTabBar"],[426,26,104,26],[427,0,98,26],[427,5,67,2],[428,0,421,1],[430,18,423,15,"listenToKeyboardEvents"],[430,40]]},"type":"js/module"}]}