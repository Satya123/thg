{"dependencies":[{"name":"../maps/entities.json","isAsync":false},{"name":"../maps/legacy.json","isAsync":false},{"name":"../maps/xml.json","isAsync":false},{"name":"./decode_codepoint.js","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var entityMap = _$$_REQUIRE(_dependencyMap[0], \"../maps/entities.json\"),\n      legacyMap = _$$_REQUIRE(_dependencyMap[1], \"../maps/legacy.json\"),\n      xmlMap = _$$_REQUIRE(_dependencyMap[2], \"../maps/xml.json\"),\n      decodeCodePoint = _$$_REQUIRE(_dependencyMap[3], \"./decode_codepoint.js\");\n\n  var decodeXMLStrict = getStrictDecoder(xmlMap),\n      decodeHTMLStrict = getStrictDecoder(entityMap);\n\n  function getStrictDecoder(map) {\n    var keys = Object.keys(map).join(\"|\"),\n        replace = getReplacer(map);\n    keys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n    var re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n    return function (str) {\n      return String(str).replace(re, replace);\n    };\n  }\n\n  var decodeHTML = function () {\n    var legacy = Object.keys(legacyMap).sort(sorter);\n    var keys = Object.keys(entityMap).sort(sorter);\n\n    for (var i = 0, j = 0; i < keys.length; i++) {\n      if (legacy[j] === keys[i]) {\n        keys[i] += \";?\";\n        j++;\n      } else {\n        keys[i] += \";\";\n      }\n    }\n\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\"),\n        replace = getReplacer(entityMap);\n\n    function replacer(str) {\n      if (str.substr(-1) !== \";\") str += \";\";\n      return replace(str);\n    }\n\n    return function (str) {\n      return String(str).replace(re, replacer);\n    };\n  }();\n\n  function sorter(a, b) {\n    return a < b ? 1 : -1;\n  }\n\n  function getReplacer(map) {\n    return function replace(str) {\n      if (str.charAt(1) === \"#\") {\n        if (str.charAt(2) === \"X\" || str.charAt(2) === \"x\") {\n          return decodeCodePoint(parseInt(str.substr(3), 16));\n        }\n\n        return decodeCodePoint(parseInt(str.substr(2), 10));\n      }\n\n      return map[str.slice(1, -1)];\n    };\n  }\n\n  module.exports = {\n    XML: decodeXMLStrict,\n    HTML: decodeHTML,\n    HTMLStrict: decodeHTMLStrict\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"entityMap"],[2,18,1,16,"require"],[2,49,1,24],[2,72,1,16],[2,73,1,0],[3,0,1,0],[3,6,2,4,"legacyMap"],[3,18,2,16,"require"],[3,49,2,24],[3,70,2,16],[3,71,1,0],[4,0,1,0],[4,6,3,4,"xmlMap"],[4,15,3,13,"require"],[4,46,3,21],[4,64,3,13],[4,65,1,0],[5,0,1,0],[5,6,4,4,"decodeCodePoint"],[5,24,4,22,"require"],[5,55,4,30],[5,78,4,22],[5,79,1,0],[7,0,6,0],[7,6,6,4,"decodeXMLStrict"],[7,24,6,22,"getStrictDecoder"],[7,41,6,39,"xmlMap"],[7,47,6,22],[7,48,6,0],[8,0,6,0],[8,6,7,4,"decodeHTMLStrict"],[8,25,7,23,"getStrictDecoder"],[8,42,7,40,"entityMap"],[8,51,7,23],[8,52,6,0],[10,0,9,0],[10,11,9,9,"getStrictDecoder"],[10,27,9,0],[10,28,9,26,"map"],[10,31,9,0],[10,33,9,31],[11,0,10,4],[11,8,10,8,"keys"],[11,15,10,15,"Object"],[11,22,10,22,"keys"],[11,26,10,15],[11,27,10,27,"map"],[11,30,10,15],[11,32,10,32,"join"],[11,36,10,15],[11,37,10,37],[11,40,10,15],[11,41,10,4],[12,0,10,4],[12,8,11,8,"replace"],[12,18,11,18,"getReplacer"],[12,30,11,30,"map"],[12,33,11,18],[12,34,10,4],[13,0,13,4,"keys"],[13,12,13,12],[13,38,13,4],[14,0,15,4],[14,8,15,8,"re"],[14,13,15,13],[14,17,15,17,"RegExp"],[14,23,15,13],[14,24,15,24],[14,33,15,33,"keys"],[14,37,15,24],[14,40,15,40],[14,44,15,13],[14,46,15,46],[14,49,15,13],[14,50,15,4],[15,0,17,4],[15,11,17,11],[15,21,17,20,"str"],[15,24,17,11],[15,26,17,25],[16,0,18,8],[16,13,18,15,"String"],[16,20,18,22,"str"],[16,23,18,15],[16,25,18,27,"replace"],[16,32,18,15],[16,33,18,35,"re"],[16,35,18,15],[16,37,18,39,"replace"],[16,44,18,15],[16,45,18,8],[17,0,19,5],[17,5,17,4],[18,0,20,1],[20,0,22,0],[20,6,22,4,"decodeHTML"],[20,19,22,18],[20,31,22,29],[21,0,23,4],[21,8,23,8,"legacy"],[21,17,23,17,"Object"],[21,24,23,24,"keys"],[21,28,23,17],[21,29,23,29,"legacyMap"],[21,38,23,17],[21,40,23,40,"sort"],[21,44,23,17],[21,45,23,45,"sorter"],[21,51,23,17],[21,52,23,4],[22,0,25,4],[22,8,25,8,"keys"],[22,15,25,15,"Object"],[22,22,25,22,"keys"],[22,26,25,15],[22,27,25,27,"entityMap"],[22,36,25,15],[22,38,25,38,"sort"],[22,42,25,15],[22,43,25,43,"sorter"],[22,49,25,15],[22,50,25,4],[24,0,27,4],[24,9,27,9],[24,13,27,13,"i"],[24,17,27,17],[24,18,27,9],[24,20,27,20,"j"],[24,24,27,24],[24,25,27,4],[24,27,27,27,"i"],[24,31,27,31,"keys"],[24,36,27,36,"length"],[24,42,27,4],[24,44,27,44,"i"],[24,47,27,4],[24,49,27,49],[25,0,28,8],[25,10,28,12,"legacy"],[25,17,28,19,"j"],[25,18,28,12],[25,24,28,26,"keys"],[25,29,28,31,"i"],[25,30,28,26],[25,31,28,8],[25,33,28,35],[26,0,29,12,"keys"],[26,13,29,17,"i"],[26,14,29,12],[26,19,29,23],[26,23,29,12],[27,0,30,12,"j"],[28,0,31,9],[28,7,28,8],[28,13,31,15],[29,0,32,12,"keys"],[29,13,32,17,"i"],[29,14,32,12],[29,19,32,23],[29,22,32,12],[30,0,33,9],[31,0,34,5],[33,0,36,4],[33,8,36,8,"re"],[33,13,36,13],[33,17,36,17,"RegExp"],[33,23,36,13],[33,24,36,24],[33,33,36,33,"keys"],[33,38,36,38,"join"],[33,42,36,33],[33,43,36,43],[33,46,36,33],[33,47,36,24],[33,50,36,50],[33,81,36,13],[33,83,36,83],[33,86,36,13],[33,87,36,4],[34,0,36,4],[34,8,37,8,"replace"],[34,18,37,18,"getReplacer"],[34,30,37,30,"entityMap"],[34,39,37,18],[34,40,36,4],[36,0,39,4],[36,13,39,13,"replacer"],[36,21,39,4],[36,22,39,22,"str"],[36,25,39,4],[36,27,39,27],[37,0,40,8],[37,10,40,12,"str"],[37,14,40,16,"substr"],[37,20,40,12],[37,21,40,23],[37,22,40,24],[37,23,40,12],[37,29,40,31],[37,32,40,8],[37,34,40,36,"str"],[37,41,40,43],[37,44,40,36],[38,0,41,8],[38,13,41,15,"replace"],[38,21,41,23,"str"],[38,24,41,15],[38,25,41,8],[39,0,42,5],[41,0,45,4],[41,11,45,11],[41,21,45,20,"str"],[41,24,45,11],[41,26,45,25],[42,0,46,8],[42,13,46,15,"String"],[42,20,46,22,"str"],[42,23,46,15],[42,25,46,27,"replace"],[42,32,46,15],[42,33,46,35,"re"],[42,35,46,15],[42,37,46,39,"replacer"],[42,45,46,15],[42,46,46,8],[43,0,47,5],[43,5,45,4],[44,0,48,1],[44,3,22,17],[44,5,22,0],[46,0,50,0],[46,11,50,9,"sorter"],[46,17,50,0],[46,18,50,16,"a"],[46,19,50,0],[46,21,50,19,"b"],[46,22,50,0],[46,24,50,22],[47,0,51,4],[47,11,51,11,"a"],[47,15,51,15,"b"],[47,16,51,11],[47,19,51,19],[47,20,51,11],[47,23,51,23],[47,24,51,24],[47,25,51,4],[48,0,52,1],[50,0,54,0],[50,11,54,9,"getReplacer"],[50,22,54,0],[50,23,54,21,"map"],[50,26,54,0],[50,28,54,26],[51,0,55,4],[51,11,55,11],[51,20,55,20,"replace"],[51,27,55,11],[51,28,55,28,"str"],[51,31,55,11],[51,33,55,33],[52,0,56,8],[52,10,56,12,"str"],[52,14,56,16,"charAt"],[52,20,56,12],[52,21,56,23],[52,22,56,12],[52,28,56,30],[52,31,56,8],[52,33,56,35],[53,0,57,12],[53,12,57,16,"str"],[53,16,57,20,"charAt"],[53,22,57,16],[53,23,57,27],[53,24,57,16],[53,30,57,34],[53,33,57,16],[53,37,57,41,"str"],[53,41,57,45,"charAt"],[53,47,57,41],[53,48,57,52],[53,49,57,41],[53,55,57,59],[53,58,57,12],[53,60,57,64],[54,0,58,16],[54,17,58,23,"decodeCodePoint"],[54,33,58,39,"parseInt"],[54,42,58,48,"str"],[54,46,58,52,"substr"],[54,52,58,48],[54,53,58,59],[54,54,58,48],[54,55,58,39],[54,57,58,63],[54,59,58,39],[54,60,58,23],[54,61,58,16],[55,0,59,13],[57,0,60,12],[57,15,60,19,"decodeCodePoint"],[57,31,60,35,"parseInt"],[57,40,60,44,"str"],[57,44,60,48,"substr"],[57,50,60,44],[57,51,60,55],[57,52,60,44],[57,53,60,35],[57,55,60,59],[57,57,60,35],[57,58,60,19],[57,59,60,12],[58,0,61,9],[60,0,62,8],[60,13,62,15,"map"],[60,17,62,19,"str"],[60,21,62,23,"slice"],[60,26,62,19],[60,27,62,29],[60,28,62,19],[60,30,62,32],[60,31,62,33],[60,32,62,19],[60,33,62,15],[60,34,62,8],[61,0,63,5],[61,5,55,4],[62,0,64,1],[64,0,66,0,"module"],[64,9,66,7,"exports"],[64,16,66,0],[64,19,66,17],[65,0,67,4,"XML"],[65,9,67,9,"decodeXMLStrict"],[65,24,66,17],[66,0,68,4,"HTML"],[66,10,68,10,"decodeHTML"],[66,20,66,17],[67,0,69,4,"HTMLStrict"],[67,16,69,16,"decodeHTMLStrict"],[68,0,66,17],[68,3,66,0]]},"type":"js/module"}]}