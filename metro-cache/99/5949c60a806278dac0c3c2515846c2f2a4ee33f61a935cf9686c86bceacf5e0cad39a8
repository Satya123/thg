{"dependencies":[{"name":"./fsmIterator","isAsync":false},{"name":"../io","isAsync":false},{"name":"../channel","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  exports.__esModule = true;\n  exports.default = takeLatest;\n\n  var _fsmIterator = _$$_REQUIRE(_dependencyMap[0], './fsmIterator');\n\n  var _fsmIterator2 = _interopRequireDefault(_fsmIterator);\n\n  var _io = _$$_REQUIRE(_dependencyMap[1], '../io');\n\n  var _channel = _$$_REQUIRE(_dependencyMap[2], '../channel');\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function takeLatest(patternOrChannel, worker) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    var yTake = {\n      done: false,\n      value: (0, _io.take)(patternOrChannel)\n    };\n\n    var yFork = function yFork(ac) {\n      return {\n        done: false,\n        value: _io.fork.apply(undefined, [worker].concat(args, [ac]))\n      };\n    };\n\n    var yCancel = function yCancel(task) {\n      return {\n        done: false,\n        value: (0, _io.cancel)(task)\n      };\n    };\n\n    var task = void 0,\n        action = void 0;\n\n    var setTask = function setTask(t) {\n      return task = t;\n    };\n\n    var setAction = function setAction(ac) {\n      return action = ac;\n    };\n\n    return (0, _fsmIterator2.default)({\n      q1: function q1() {\n        return ['q2', yTake, setAction];\n      },\n      q2: function q2() {\n        return action === _channel.END ? [_fsmIterator.qEnd] : task ? ['q3', yCancel(task)] : ['q1', yFork(action), setTask];\n      },\n      q3: function q3() {\n        return ['q1', yFork(action), setTask];\n      }\n    }, 'q1', 'takeLatest(' + (0, _fsmIterator.safeName)(patternOrChannel) + ', ' + worker.name + ')');\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"exports"],[4,10,3,8,"__esModule"],[4,20,3,0],[4,23,3,21],[4,27,3,0],[5,0,4,0,"exports"],[5,10,4,8,"default"],[5,17,4,0],[5,20,4,18,"takeLatest"],[5,30,4,0],[7,0,6,0],[7,6,6,4,"_fsmIterator"],[7,21,6,19,"require"],[7,52,6,27],[7,67,6,19],[7,68,6,0],[9,0,8,0],[9,6,8,4,"_fsmIterator2"],[9,22,8,20,"_interopRequireDefault"],[9,45,8,43,"_fsmIterator"],[9,57,8,20],[9,58,8,0],[11,0,10,0],[11,6,10,4,"_io"],[11,12,10,10,"require"],[11,43,10,18],[11,50,10,10],[11,51,10,0],[13,0,12,0],[13,6,12,4,"_channel"],[13,17,12,15,"require"],[13,48,12,23],[13,60,12,15],[13,61,12,0],[15,0,14,0],[15,11,14,9,"_interopRequireDefault"],[15,33,14,0],[15,34,14,32,"obj"],[15,37,14,0],[15,39,14,37],[16,0,14,39],[16,11,14,46,"obj"],[16,18,14,53,"obj"],[16,22,14,57,"__esModule"],[16,32,14,46],[16,35,14,70,"obj"],[16,38,14,46],[16,41,14,76],[17,0,14,78,"default"],[17,15,14,87,"obj"],[18,0,14,76],[18,5,14,39],[19,0,14,95],[21,0,16,0],[21,11,16,9,"takeLatest"],[21,21,16,0],[21,22,16,20,"patternOrChannel"],[21,38,16,0],[21,40,16,38,"worker"],[21,46,16,0],[21,48,16,46],[22,0,17,2],[22,9,17,7],[22,13,17,11,"_len"],[22,20,17,18,"arguments"],[22,30,17,28,"length"],[22,36,17,7],[22,38,17,36,"args"],[22,45,17,43,"Array"],[22,51,17,49,"_len"],[22,58,17,56],[22,59,17,49],[22,62,17,60,"_len"],[22,69,17,67],[22,70,17,49],[22,73,17,71],[22,74,17,43],[22,75,17,7],[22,77,17,75,"_key"],[22,84,17,82],[22,85,17,2],[22,87,17,85,"_key"],[22,94,17,92,"_len"],[22,98,17,2],[22,100,17,98,"_key"],[22,106,17,2],[22,108,17,106],[23,0,18,4,"args"],[23,11,18,9,"_key"],[23,18,18,16],[23,19,18,4],[23,23,18,21,"arguments"],[23,33,18,31,"_key"],[23,37,18,21],[23,38,18,4],[24,0,19,3],[26,0,21,2],[26,8,21,6,"yTake"],[26,16,21,14],[27,0,21,16,"done"],[27,12,21,22],[27,17,21,14],[28,0,21,29,"value"],[28,13,21,36],[28,14,21,37],[28,17,21,40,"_io"],[28,21,21,44,"take"],[28,25,21,36],[28,27,21,50,"patternOrChannel"],[28,43,21,36],[29,0,21,14],[29,5,21,2],[31,0,22,2],[31,8,22,6,"yFork"],[31,16,22,14],[31,25,22,23,"yFork"],[31,30,22,14],[31,31,22,29,"ac"],[31,33,22,14],[31,35,22,33],[32,0,23,4],[32,13,23,11],[33,0,23,13,"done"],[33,14,23,19],[33,19,23,11],[34,0,23,26,"value"],[34,15,23,33,"_io"],[34,19,23,37,"fork"],[34,23,23,33],[34,24,23,42,"apply"],[34,29,23,33],[34,30,23,48,"undefined"],[34,39,23,33],[34,41,23,59],[34,42,23,60,"worker"],[34,48,23,59],[34,50,23,68,"concat"],[34,56,23,59],[34,57,23,75,"args"],[34,61,23,59],[34,63,23,81],[34,64,23,82,"ac"],[34,66,23,81],[34,67,23,59],[34,68,23,33],[35,0,23,11],[35,7,23,4],[36,0,24,3],[36,5,22,2],[38,0,25,2],[38,8,25,6,"yCancel"],[38,18,25,16],[38,27,25,25,"yCancel"],[38,34,25,16],[38,35,25,33,"task"],[38,39,25,16],[38,41,25,39],[39,0,26,4],[39,13,26,11],[40,0,26,13,"done"],[40,14,26,19],[40,19,26,11],[41,0,26,26,"value"],[41,15,26,33],[41,16,26,34],[41,19,26,37,"_io"],[41,23,26,41,"cancel"],[41,29,26,33],[41,31,26,49,"task"],[41,35,26,33],[42,0,26,11],[42,7,26,4],[43,0,27,3],[43,5,25,2],[45,0,29,2],[45,8,29,6,"task"],[45,15,29,13],[45,20,29,18],[45,21,29,2],[46,0,29,2],[46,8,30,6,"action"],[46,17,30,15],[46,22,30,20],[46,23,29,2],[48,0,31,2],[48,8,31,6,"setTask"],[48,18,31,16],[48,27,31,25,"setTask"],[48,34,31,16],[48,35,31,33,"t"],[48,36,31,16],[48,38,31,36],[49,0,32,4],[49,13,32,11,"task"],[49,20,32,18,"t"],[49,21,32,4],[50,0,33,3],[50,5,31,2],[52,0,34,2],[52,8,34,6,"setAction"],[52,20,34,18],[52,29,34,27,"setAction"],[52,38,34,18],[52,39,34,37,"ac"],[52,41,34,18],[52,43,34,41],[53,0,35,4],[53,13,35,11,"action"],[53,22,35,20,"ac"],[53,24,35,4],[54,0,36,3],[54,5,34,2],[56,0,38,2],[56,11,38,9],[56,12,38,10],[56,15,38,13,"_fsmIterator2"],[56,29,38,27,"default"],[56,36,38,9],[56,38,38,36],[57,0,39,4,"q1"],[57,10,39,8],[57,19,39,17,"q1"],[57,21,39,8],[57,24,39,22],[58,0,40,6],[58,15,40,13],[58,16,40,14],[58,20,40,13],[58,22,40,20,"yTake"],[58,27,40,13],[58,29,40,27,"setAction"],[58,38,40,13],[58,39,40,6],[59,0,41,5],[59,7,38,36],[60,0,42,4,"q2"],[60,10,42,8],[60,19,42,17,"q2"],[60,21,42,8],[60,24,42,22],[61,0,43,6],[61,15,43,13,"action"],[61,26,43,24,"_channel"],[61,35,43,33,"END"],[61,38,43,13],[61,41,43,39],[61,42,43,40,"_fsmIterator"],[61,55,43,53,"qEnd"],[61,59,43,39],[61,60,43,13],[61,63,43,61,"task"],[61,70,43,68],[61,71,43,69],[61,75,43,68],[61,77,43,75,"yCancel"],[61,85,43,83,"task"],[61,89,43,75],[61,90,43,68],[61,91,43,61],[61,94,43,92],[61,95,43,93],[61,99,43,92],[61,101,43,99,"yFork"],[61,107,43,105,"action"],[61,113,43,99],[61,114,43,92],[61,116,43,114,"setTask"],[61,123,43,92],[61,124,43,6],[62,0,44,5],[62,7,38,36],[63,0,45,4,"q3"],[63,10,45,8],[63,19,45,17,"q3"],[63,21,45,8],[63,24,45,22],[64,0,46,6],[64,15,46,13],[64,16,46,14],[64,20,46,13],[64,22,46,20,"yFork"],[64,28,46,26,"action"],[64,34,46,20],[64,35,46,13],[64,37,46,35,"setTask"],[64,44,46,13],[64,45,46,6],[65,0,47,5],[66,0,38,36],[66,5,38,9],[66,7,48,5],[66,11,38,9],[66,13,48,11],[66,29,48,27],[66,30,48,28],[66,33,48,31,"_fsmIterator"],[66,46,48,44,"safeName"],[66,54,48,27],[66,56,48,54,"patternOrChannel"],[66,72,48,27],[66,73,48,11],[66,76,48,74],[66,80,48,11],[66,83,48,81,"worker"],[66,90,48,88,"name"],[66,94,48,11],[66,97,48,95],[66,100,38,9],[66,101,38,2],[67,0,49,1]]},"type":"js/module"}]}