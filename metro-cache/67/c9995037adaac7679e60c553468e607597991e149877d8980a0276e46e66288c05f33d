{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../node_modules/react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-native-router-flux","isAsync":false},{"name":"./UserData","isAsync":false},{"name":"./ServiceClass","isAsync":false},{"name":"./OfflineNotice","isAsync":false},{"name":"react-native-device-info","isAsync":false},{"name":"../../assets/splash-screen-bac.png","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactNativeRouterFlux = _$$_REQUIRE(_dependencyMap[3], \"react-native-router-flux\");\n\n  var _UserData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./UserData\"));\n\n  var _ServiceClass = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ServiceClass\"));\n\n  var _OfflineNotice = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./OfflineNotice\"));\n\n  var _reactNativeDeviceInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react-native-device-info\"));\n\n  var _jsxFileName = \"/var/www/html/thg/src/components/VendorSplash.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  var _components = {\n    VendorSplash: {\n      displayName: \"VendorSplash\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/var/www/html/thg/src/components/VendorSplash.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var VendorSplash = function (_React$Component) {\n    function VendorSplash(props) {\n      var _this;\n\n      _classCallCheck(this, VendorSplash);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(VendorSplash).call(this, props));\n\n      _this._handleAppStateChange = function (nextAppState) {\n        if (_this.state.appState.match(/inactive|background/) && nextAppState === 'active') {\n          console.log('App has come to the foreground!');\n\n          if (_reactNativeRouterFlux.Actions.currentScene == \"VendorSplash\") {\n            _this.callApiMethod();\n          }\n        }\n      };\n\n      _this.callApiMethod = function () {\n        _reactNative.NetInfo.isConnected.fetch().done(function (isConnected) {\n          if (isConnected) {\n            _UserData.default.retriveData('token').then(function (res) {\n              console.log(res);\n\n              _this.callAppDetails(res);\n            });\n          } else {}\n        });\n      };\n\n      _this.callAppDetails = function (token) {\n        _this.setState({\n          isApiCall: true\n        });\n\n        var arrAppointment = [];\n        console.log(token);\n\n        _this.setState({\n          loaded: true\n        });\n\n        _ServiceClass.default.appDetails(token, 'appdetails').then(function (reData) {\n          if (reData.status === 404 || reData.status === 400 || reData.status === 204 || reData.data === null || reData.status === 0) {\n            var errorMsg = response.statusText;\n            alert(\"Something went wrong.\");\n            return;\n          } else {\n            console.log(reData);\n\n            var _that = _assertThisInitialized(_assertThisInitialized(_this));\n\n            if (reData.data.status === '1') {\n              console.log(reData.data.data.id);\n              console.log(reData.data.data.siteDetails[0].logoUrl);\n              console.log(reData.data.data.siteDetails[0].isTelemedicineEnable);\n\n              _this.setState({\n                dataUser: reData.data.data.users\n              });\n\n              _this.setState({\n                url: reData.data.data.siteDetails[0].logoUrl\n              });\n\n              var isTelemedicineEnable = reData.data.data.siteDetails[0].hasOwnProperty(\"isTelemedicineEnable\");\n\n              if (isTelemedicineEnable === true) {\n                try {\n                  _reactNative.AsyncStorage.setItem('isTelemedicineEnable', reData.data.data.siteDetails[0].isTelemedicineEnable.toString());\n                } catch (error) {}\n              }\n\n              _UserData.default.saveData('memberId', reData.data.data.users[0].ID.toString());\n\n              for (var item in reData.data.data.appointments[0].type) {\n                console.log(reData.data.data.appointments[0].type[item]);\n                arrAppointment.push({\n                  label: reData.data.data.appointments[0].type[item],\n                  value: reData.data.data.appointments[0].type[item]\n                });\n              }\n\n              try {\n                _reactNative.AsyncStorage.setItem('AppointmentType', JSON.stringify(arrAppointment));\n              } catch (error) {}\n\n              try {\n                _reactNative.AsyncStorage.setItem('profileArray', JSON.stringify(reData.data.data.users));\n              } catch (error) {}\n\n              _UserData.default.saveData('PrimaryCare', reData.data.data.appointments[1].primaryCareText);\n\n              _this.setState({\n                loaded: false\n              });\n\n              setTimeout(function () {\n                _that.HideSplashScreen();\n              }, 2000);\n            } else {\n              _this.setState({\n                loaded: false\n              });\n\n              _reactNative.Alert.alert(reData.data.message);\n\n              setTimeout(function () {\n                _that.HideSplashScreen();\n              }, 2000);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n\n          _this.setState({\n            loaded: false\n          });\n\n          setTimeout(function () {\n            that.HideSplashScreen();\n          }, 100);\n\n          _reactNative.Alert.alert(error);\n        });\n      };\n\n      _this.HideSplashScreen = function () {\n        _this.setState({\n          isVisible: false\n        });\n      };\n\n      _this.goToHomeScreen = function () {\n        var isVisible = _this.state.isVisible;\n\n        if (isVisible === false) {\n          _reactNativeRouterFlux.Actions.AccountInfo({\n            userData: _this.state.dataUser,\n            telemedicine: _this.state.telemadicineOpen,\n            isFromVendor: true\n          });\n        }\n      };\n\n      _this.state = {\n        isVisible: true,\n        loaded: false,\n        url: '',\n        isApiCall: null,\n        appState: _reactNative.AppState.currentState\n      };\n      return _this;\n    }\n\n    _createClass(VendorSplash, [{\n      key: \"componentWillReceiveProps\",\n      value: function componentWillReceiveProps(customProps) {\n        this.callApiMethod();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        _reactNative.AppState.addEventListener('change', this._handleAppStateChange);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        _reactNative.AppState.removeEventListener('change', this._handleAppStateChange);\n      }\n    }, {\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        var version = _reactNativeDeviceInfo.default.getVersion();\n\n        this.callApiMethod();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$state = this.state,\n            url = _this$state.url,\n            loaded = _this$state.loaded;\n        return _react.default.createElement(_reactNative.SafeAreaView, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          }\n        }, _react.default.createElement(_reactNative.ImageBackground, {\n          style: styles.imgBackground,\n          resizeMode: \"cover\",\n          source: _$$_REQUIRE(_dependencyMap[8], '../../assets/splash-screen-bac.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.container_logo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          }\n        }, _react.default.createElement(_reactNative.Image, {\n          style: {\n            width: 210,\n            height: 63\n          },\n          source: {\n            uri: url\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          }\n        }), loaded === true ? _react.default.createElement(_reactNative.View, {\n          style: styles.containerActivety,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: {\n            width: 100,\n            height: 100,\n            backgroundColor: 'white',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          }\n        }, _react.default.createElement(_reactNative.ActivityIndicator, {\n          size: \"large\",\n          color: \"#00dcc3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          }\n        }))) : null, this.state.isApiCall === false ? _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          }\n        }, \"Please try again!!\") : null), _react.default.createElement(_reactNative.View, {\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            bottom: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: {\n            color: '#000'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          }\n        }, \"Patient Interactive v\", _reactNativeDeviceInfo.default.getVersion()))), this.goToHomeScreen(), _react.default.createElement(_reactNative.StatusBar, {\n          barStyle: \"light-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          }\n        }), _react.default.createElement(_OfflineNotice.default, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          }\n        })));\n      }\n    }]);\n\n    _inherits(VendorSplash, _React$Component);\n\n    return VendorSplash;\n  }(_react.default.Component);\n\n  VendorSplash = _wrapComponent(\"VendorSplash\")(VendorSplash);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      margin: 0,\n      padding: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    containerActivety: {\n      backgroundColor: 'transparent',\n      height: '100%',\n      width: '100%',\n      zIndex: 10000000,\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    container_logo: {\n      flex: 1,\n      padding: 10,\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginTop: 20\n    },\n    shadow1: {\n      marginBottom: 0,\n      padding: 0,\n      alignItems: 'center'\n    },\n    imgBackground: {\n      width: '100%',\n      height: '100%',\n      flex: 1\n    },\n    SplashScreen_RootView: {\n      flex: 1,\n      margin: 0,\n      position: 'absolute',\n      width: '100%',\n      height: '100%'\n    },\n    SplashScreen_ChildView: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    }\n  });\n\n  var _default2 = VendorSplash;\n  exports.default = _default2;\n});","map":[[7,0,1,1],[11,0,2,0],[13,0,3,0],[15,0,4,0],[17,0,5,0],[19,0,6,0],[21,0,7,0],[62,6,10,6,"VendorSplash"],[62,18],[63,0,12,4],[63,26,12,16,"props"],[63,31,12,4],[63,33,12,23],[64,0,12,23],[66,0,12,23],[68,0,13,8],[68,88,13,14,"props"],[68,93,13,8],[70,0,12,23],[70,12,40,3,"_handleAppStateChange"],[70,33,12,23],[70,36,40,27],[70,46,40,28,"nextAppState"],[70,58,40,27],[70,60,40,45],[71,0,41,7],[71,12,41,11],[71,18,41,16,"state"],[71,23,41,11],[71,24,41,22,"appState"],[71,32,41,11],[71,33,41,31,"match"],[71,38,41,11],[71,39,41,37],[71,60,41,11],[71,65,41,63,"nextAppState"],[71,82,41,80],[71,90,41,7],[71,92,41,90],[72,0,42,9,"console"],[72,18,42,17,"log"],[72,21,42,9],[72,22,42,21],[72,55,42,9],[74,0,43,9],[74,14,43,13,"Actions"],[74,45,43,21,"currentScene"],[74,57,43,13],[74,61,43,37],[74,75,43,9],[74,77,43,53],[75,0,44,15],[75,18,44,20,"callApiMethod"],[75,31,44,15],[76,0,45,10],[77,0,46,8],[78,0,48,6],[78,7,12,23],[80,0,12,23],[80,12,52,2,"callApiMethod"],[80,25,12,23],[80,28,52,18],[80,40,52,23],[81,0,53,4,"NetInfo"],[81,29,53,12,"isConnected"],[81,40,53,4],[81,41,53,24,"fetch"],[81,46,53,4],[81,49,53,32,"done"],[81,53,53,4],[81,54,53,37],[81,64,53,38,"isConnected"],[81,75,53,37],[81,77,53,54],[82,0,54,8],[82,14,54,12,"isConnected"],[82,25,54,8],[82,27,55,8],[83,0,56,12,"UserData"],[83,30,56,21,"retriveData"],[83,41,56,12],[83,42,56,33],[83,49,56,12],[83,51,56,42,"then"],[83,55,56,12],[83,56,56,47],[83,66,56,48,"res"],[83,69,56,47],[83,71,56,56],[84,0,57,16,"console"],[84,22,57,24,"log"],[84,25,57,16],[84,26,57,28,"res"],[84,29,57,16],[86,0,59,16],[86,20,59,21,"callAppDetails"],[86,34,59,16],[86,35,59,36,"res"],[86,38,59,16],[87,0,60,13],[87,13,56,12],[88,0,61,9],[88,11,54,8],[88,17,62,8],[88,18,64,9],[89,0,65,5],[89,9,53,4],[90,0,66,3],[90,7,12,23],[92,0,12,23],[92,12,76,4,"callAppDetails"],[92,26,12,23],[92,29,76,21],[92,39,76,22,"token"],[92,44,76,21],[92,46,76,32],[93,0,78,8],[93,14,78,13,"setState"],[93,22,78,8],[93,23,78,22],[94,0,78,23,"isApiCall"],[94,21,78,33],[95,0,78,22],[95,9,78,8],[97,0,79,8],[97,12,79,14,"arrAppointment"],[97,29,79,31],[97,31,79,8],[98,0,80,8,"console"],[98,16,80,16,"log"],[98,19,80,8],[98,20,80,20,"token"],[98,25,80,8],[100,0,81,8],[100,14,81,13,"setState"],[100,22,81,8],[100,23,81,22],[101,0,81,23,"loaded"],[101,18,81,31],[102,0,81,22],[102,9,81,8],[104,0,83,8,"ServiceClass"],[104,30,83,21,"appDetails"],[104,40,83,8],[104,41,83,32,"token"],[104,46,83,8],[104,48,83,39],[104,60,83,8],[104,62,83,53,"then"],[104,66,83,8],[104,67,83,58],[104,77,83,59,"reData"],[104,83,83,58],[104,85,83,70],[105,0,87,7],[105,14,87,12,"reData"],[105,21,87,19,"status"],[105,27,87,12],[105,32,87,30],[105,35,87,12],[105,39,87,37,"reData"],[105,46,87,44,"status"],[105,52,87,37],[105,57,87,55],[105,60,87,12],[105,64,87,62,"reData"],[105,71,87,69,"status"],[105,77,87,62],[105,82,87,80],[105,85,87,12],[105,89,87,87,"reData"],[105,96,87,94,"data"],[105,100,87,87],[105,105,87,103],[105,109,87,12],[105,113,87,111,"reData"],[105,120,87,118,"status"],[105,126,87,111],[105,131,87,129],[105,132,87,7],[105,134,87,132],[106,0,88,22],[106,16,88,26,"errorMsg"],[106,27,88,37,"response"],[106,36,88,46,"statusText"],[106,46,88,22],[107,0,89,22,"alert"],[107,18,89,28],[107,41,89,22],[108,0,90,22],[109,0,91,12],[109,11,87,7],[109,17,91,17],[110,0,93,25,"console"],[110,20,93,33,"log"],[110,23,93,25],[110,24,93,37,"reData"],[110,30,93,25],[112,0,94,25],[112,16,94,31,"that"],[112,77,94,25],[114,0,96,25],[114,16,96,29,"reData"],[114,23,96,36,"data"],[114,27,96,29],[114,28,96,41,"status"],[114,34,96,29],[114,39,96,52],[114,42,96,25],[114,44,96,57],[115,0,98,30,"console"],[115,22,98,38,"log"],[115,25,98,30],[115,26,98,42,"reData"],[115,33,98,49,"data"],[115,37,98,42],[115,38,98,54,"data"],[115,42,98,42],[115,43,98,59,"id"],[115,45,98,30],[116,0,99,29,"console"],[116,22,99,37,"log"],[116,25,99,29],[116,26,99,41,"reData"],[116,33,99,48,"data"],[116,37,99,41],[116,38,99,53,"data"],[116,42,99,41],[116,43,99,58,"siteDetails"],[116,54,99,41],[116,55,99,70],[116,56,99,41],[116,58,99,73,"logoUrl"],[116,65,99,29],[117,0,100,29,"console"],[117,22,100,37,"log"],[117,25,100,29],[117,26,100,41,"reData"],[117,33,100,48,"data"],[117,37,100,41],[117,38,100,53,"data"],[117,42,100,41],[117,43,100,58,"siteDetails"],[117,54,100,41],[117,55,100,70],[117,56,100,41],[117,58,100,73,"isTelemedicineEnable"],[117,78,100,29],[119,0,101,29],[119,20,101,34,"setState"],[119,28,101,29],[119,29,101,43],[120,0,101,44,"dataUser"],[120,26,101,54,"reData"],[120,33,101,61,"data"],[120,37,101,54],[120,38,101,66,"data"],[120,42,101,54],[120,43,101,71,"users"],[121,0,101,43],[121,15,101,29],[123,0,102,29],[123,20,102,34,"setState"],[123,28,102,29],[123,29,102,43],[124,0,102,44,"url"],[124,21,102,49,"reData"],[124,28,102,56,"data"],[124,32,102,49],[124,33,102,61,"data"],[124,37,102,49],[124,38,102,66,"siteDetails"],[124,49,102,49],[124,50,102,78],[124,51,102,49],[124,53,102,81,"logoUrl"],[125,0,102,43],[125,15,102,29],[127,0,104,29],[127,18,104,33,"isTelemedicineEnable"],[127,41,104,56,"reData"],[127,48,104,63,"data"],[127,52,104,56],[127,53,104,68,"data"],[127,57,104,56],[127,58,104,73,"siteDetails"],[127,69,104,56],[127,70,104,85],[127,71,104,56],[127,73,104,88,"hasOwnProperty"],[127,87,104,56],[127,88,104,103],[127,110,104,56],[127,111,104,29],[129,0,105,29],[129,18,105,33,"isTelemedicineEnable"],[129,43,105,58],[129,47,105,29],[129,49,105,63],[130,0,107,33],[130,20,107,37],[131,0,108,37,"AsyncStorage"],[131,44,108,50,"setItem"],[131,51,108,37],[131,52,108,58],[131,74,108,37],[131,76,108,82,"reData"],[131,83,108,89,"data"],[131,87,108,82],[131,88,108,94,"data"],[131,92,108,82],[131,93,108,99,"siteDetails"],[131,104,108,82],[131,105,108,111],[131,106,108,82],[131,108,108,114,"isTelemedicineEnable"],[131,128,108,82],[131,129,108,135,"toString"],[131,137,108,82],[131,139,108,37],[132,0,109,34],[132,17,107,33],[132,18,109,35],[132,25,109,42,"error"],[132,30,109,35],[132,32,109,49],[132,33,111,34],[133,0,114,30],[135,0,116,33,"UserData"],[135,32,116,42,"saveData"],[135,40,116,33],[135,41,116,51],[135,51,116,33],[135,53,116,63,"reData"],[135,60,116,70,"data"],[135,64,116,63],[135,65,116,75,"data"],[135,69,116,63],[135,70,116,80,"users"],[135,75,116,63],[135,76,116,86],[135,77,116,63],[135,79,116,89,"ID"],[135,81,116,63],[135,82,116,92,"toString"],[135,90,116,63],[135,92,116,33],[137,0,119,29],[137,19,119,34],[137,23,119,38,"item"],[137,27,119,29],[137,31,119,46,"reData"],[137,38,119,53,"data"],[137,42,119,46],[137,43,119,58,"data"],[137,47,119,46],[137,48,119,63,"appointments"],[137,60,119,46],[137,61,119,76],[137,62,119,46],[137,64,119,79,"type"],[137,68,119,29],[137,70,119,85],[138,0,120,33,"console"],[138,24,120,41,"log"],[138,27,120,33],[138,28,120,45,"reData"],[138,35,120,52,"data"],[138,39,120,45],[138,40,120,57,"data"],[138,44,120,45],[138,45,120,62,"appointments"],[138,57,120,45],[138,58,120,75],[138,59,120,45],[138,61,120,78,"type"],[138,65,120,45],[138,66,120,83,"item"],[138,70,120,45],[138,71,120,33],[139,0,121,33,"arrAppointment"],[139,31,121,48,"push"],[139,35,121,33],[139,36,121,53],[140,0,122,37,"label"],[140,25,122,44,"reData"],[140,32,122,51,"data"],[140,36,122,44],[140,37,122,56,"data"],[140,41,122,44],[140,42,122,61,"appointments"],[140,54,122,44],[140,55,122,74],[140,56,122,44],[140,58,122,77,"type"],[140,62,122,44],[140,63,122,82,"item"],[140,67,122,44],[140,68,121,53],[141,0,123,37,"value"],[141,25,123,44,"reData"],[141,32,123,51,"data"],[141,36,123,44],[141,37,123,56,"data"],[141,41,123,44],[141,42,123,61,"appointments"],[141,54,123,44],[141,55,123,74],[141,56,123,44],[141,58,123,77,"type"],[141,62,123,44],[141,63,123,82,"item"],[141,67,123,44],[142,0,121,53],[142,17,121,33],[143,0,125,30],[145,0,126,29],[145,18,126,33],[146,0,127,33,"AsyncStorage"],[146,42,127,46,"setItem"],[146,49,127,33],[146,50,127,54],[146,67,127,33],[146,69,127,73,"JSON"],[146,74,127,78,"stringify"],[146,83,127,73],[146,84,127,88,"arrAppointment"],[146,98,127,73],[146,99,127,33],[147,0,128,30],[147,15,126,29],[147,16,128,31],[147,23,128,38,"error"],[147,28,128,31],[147,30,128,45],[147,31,130,30],[149,0,131,29],[149,18,131,33],[150,0,132,33,"AsyncStorage"],[150,42,132,46,"setItem"],[150,49,132,33],[150,50,132,54],[150,64,132,33],[150,66,132,70,"JSON"],[150,71,132,75,"stringify"],[150,80,132,70],[150,81,132,85,"reData"],[150,88,132,92,"data"],[150,92,132,85],[150,93,132,97,"data"],[150,97,132,85],[150,98,132,102,"users"],[150,103,132,70],[150,104,132,33],[151,0,133,33],[151,15,131,29],[151,16,134,29],[151,23,134,36,"error"],[151,28,134,29],[151,30,134,43],[151,31,135,33],[153,0,138,29,"UserData"],[153,32,138,38,"saveData"],[153,40,138,29],[153,41,138,47],[153,54,138,29],[153,56,138,62,"reData"],[153,63,138,69,"data"],[153,67,138,62],[153,68,138,74,"data"],[153,72,138,62],[153,73,138,79,"appointments"],[153,85,138,62],[153,86,138,92],[153,87,138,62],[153,89,138,95,"primaryCareText"],[153,104,138,29],[155,0,142,29],[155,20,142,34,"setState"],[155,28,142,29],[155,29,142,43],[156,0,142,44,"loaded"],[156,24,142,52],[157,0,142,43],[157,15,142,29],[159,0,143,29,"setTimeout"],[159,25,143,40],[159,37,143,46],[160,0,144,33,"that"],[160,22,144,38,"HideSplashScreen"],[160,38,144,33],[161,0,145,30],[161,15,143,29],[161,17,145,32],[161,21,143,29],[162,0,146,26],[162,13,96,25],[162,19,146,32],[163,0,147,29],[163,20,147,34,"setState"],[163,28,147,29],[163,29,147,43],[164,0,147,44,"loaded"],[164,24,147,52],[165,0,147,43],[165,15,147,29],[167,0,148,29,"Alert"],[167,33,148,35,"alert"],[167,38,148,29],[167,39,148,41,"reData"],[167,46,148,48,"data"],[167,50,148,41],[167,51,148,53,"message"],[167,58,148,29],[169,0,150,29,"setTimeout"],[169,25,150,40],[169,37,150,46],[170,0,151,33,"that"],[170,22,151,38,"HideSplashScreen"],[170,38,151,33],[171,0,152,30],[171,15,150,29],[171,17,152,32],[171,21,150,29],[172,0,153,26],[173,0,154,20],[174,0,158,9],[174,9,83,8],[174,11,158,11,"catch"],[174,16,83,8],[174,17,158,17],[174,27,158,18,"error"],[174,32,158,17],[174,34,158,28],[175,0,160,12,"console"],[175,18,160,20,"log"],[175,21,160,12],[175,22,160,24,"error"],[175,27,160,12],[177,0,161,12],[177,16,161,17,"setState"],[177,24,161,12],[177,25,161,26],[178,0,161,27,"loaded"],[178,20,161,35],[179,0,161,26],[179,11,161,12],[181,0,162,12,"setTimeout"],[181,21,162,23],[181,33,162,29],[182,0,163,16,"that"],[182,17,163,21,"HideSplashScreen"],[182,33,163,16],[183,0,164,13],[183,11,162,12],[183,13,164,15],[183,16,162,12],[185,0,165,12,"Alert"],[185,29,165,18,"alert"],[185,34,165,12],[185,35,165,24,"error"],[185,40,165,12],[186,0,166,9],[186,9,83,8],[187,0,167,5],[187,7,12,23],[189,0,12,23],[189,12,168,4,"HideSplashScreen"],[189,28,12,23],[189,31,168,23],[189,43,168,29],[190,0,169,8],[190,14,169,13,"setState"],[190,22,169,8],[190,23,169,22],[191,0,170,12,"isVisible"],[191,21,170,23],[192,0,169,22],[192,9,169,8],[193,0,173,5],[193,7,12,23],[195,0,12,23],[195,12,174,4,"goToHomeScreen"],[195,26,12,23],[195,29,174,21],[195,41,174,27],[196,0,174,27],[196,12,176,12,"isVisible"],[196,21,174,27],[196,24,178,12],[196,30,178,17,"state"],[196,35,174,27],[196,36,176,12,"isVisible"],[196,45,174,27],[198,0,179,8],[198,12,179,12,"isVisible"],[198,26,179,26],[198,31,179,8],[198,33,179,33],[199,0,181,12,"Actions"],[199,41,181,20,"AccountInfo"],[199,52,181,12],[199,53,181,32],[200,0,181,34,"userData"],[200,22,181,44],[200,28,181,49,"state"],[200,33,181,44],[200,34,181,55,"dataUser"],[200,42,181,32],[201,0,181,65,"telemedicine"],[201,26,181,78],[201,32,181,83,"state"],[201,37,181,78],[201,38,181,89,"telemadicineOpen"],[201,54,181,32],[202,0,181,106,"isFromVendor"],[202,26,181,119],[203,0,181,32],[203,11,181,12],[204,0,184,9],[205,0,185,5],[205,7,12,23],[207,0,14,8],[207,12,14,13,"state"],[207,17,14,8],[207,20,14,21],[208,0,15,12,"isVisible"],[208,19,15,23],[208,23,14,21],[209,0,16,12,"loaded"],[209,16,16,20],[209,21,14,21],[210,0,18,12,"url"],[210,13,18,17],[210,15,14,21],[211,0,19,12,"isApiCall"],[211,19,19,23],[211,23,14,21],[212,0,20,12,"appState"],[212,18,20,22,"AppState"],[212,40,20,31,"currentState"],[213,0,14,21],[213,7,14,8],[214,0,12,23],[215,0,22,5],[219,48,24,30,"customProps"],[219,59],[219,61,24,42],[220,0,26,12],[220,13,26,17,"callApiMethod"],[220,26,26,12],[221,0,28,5],[224,42,30,24],[225,0,32,6,"AppState"],[225,30,32,15,"addEventListener"],[225,46,32,6],[225,47,32,32],[225,55,32,6],[225,57,32,42],[225,62,32,47,"_handleAppStateChange"],[225,83,32,6],[226,0,33,3],[229,45,35,25],[230,0,36,5,"AppState"],[230,30,36,14,"removeEventListener"],[230,49,36,5],[230,50,36,34],[230,58,36,5],[230,60,36,44],[230,65,36,49,"_handleAppStateChange"],[230,86,36,5],[231,0,37,4],[234,43,69,25],[235,0,70,6],[235,12,70,10,"version"],[235,22,70,21,"DeviceInfo"],[235,53,70,32,"getVersion"],[235,63,70,21],[235,65,70,6],[237,0,72,8],[237,13,72,13,"callApiMethod"],[237,26,72,8],[238,0,74,6],[241,31,187,13],[242,0,187,13],[242,26,191,12],[242,31,191,17,"state"],[242,36,187,13],[243,0,187,13],[243,12,189,12,"url"],[243,15,187,13],[243,30,189,12,"url"],[243,33,187,13],[244,0,187,13],[244,12,190,12,"loaded"],[244,18,187,13],[244,33,190,12,"loaded"],[244,39,187,13],[245,0,193,8],[245,15,194,10],[245,44,194,11],[245,69,194,10],[246,0,194,24],[246,17,194,31],[247,0,194,32,"flex"],[247,18,194,37],[248,0,194,31],[248,11,194,10],[249,0,194,10],[250,0,194,10],[251,0,194,10],[252,0,194,10],[253,0,194,10],[253,11,195,16],[253,40,195,17],[253,57,195,16],[254,0,195,22],[254,17,195,29,"styles"],[254,24,195,36,"container"],[254,33,195,16],[255,0,195,16],[256,0,195,16],[257,0,195,16],[258,0,195,16],[259,0,195,16],[259,11,198,20],[259,40,198,21],[259,68,198,20],[260,0,199,24],[260,17,199,31,"styles"],[260,24,199,38,"imgBackground"],[260,37,198,20],[261,0,200,24],[261,22,200,35],[261,29,198,20],[262,0,201,24],[262,18,201,32,"require"],[262,49,201,40],[262,85,201,32],[262,86,198,20],[263,0,198,20],[264,0,198,20],[265,0,198,20],[266,0,198,20],[267,0,198,20],[267,11,202,24],[267,40,202,25],[267,57,202,24],[268,0,202,30],[268,17,202,37,"styles"],[268,24,202,44,"container_logo"],[268,38,202,24],[269,0,202,24],[270,0,202,24],[271,0,202,24],[272,0,202,24],[273,0,202,24],[273,11,203,28],[273,40,203,29],[273,58,203,28],[274,0,204,32],[274,17,204,39],[275,0,204,40,"width"],[275,19,204,47],[275,22,204,39],[276,0,204,52,"height"],[276,20,204,60],[277,0,204,39],[277,11,203,28],[278,0,205,32],[278,18,205,40],[279,0,206,28,"uri"],[279,17,206,33,"url"],[280,0,205,40],[280,11,203,28],[281,0,203,28],[282,0,203,28],[283,0,203,28],[284,0,203,28],[285,0,203,28],[285,10,202,24],[285,12,211,13,"loaded"],[285,23,211,24],[285,27,211,12],[285,30,211,32],[285,59,211,33],[285,76,211,32],[286,0,211,38],[286,17,211,45,"styles"],[286,24,211,52,"containerActivety"],[286,41,211,32],[287,0,211,32],[288,0,211,32],[289,0,211,32],[290,0,211,32],[291,0,211,32],[291,11,211,71],[291,40,211,72],[291,57,211,71],[292,0,211,77],[292,17,211,84],[293,0,211,85,"width"],[293,19,211,92],[293,22,211,84],[294,0,211,97,"height"],[294,20,211,105],[294,23,211,84],[295,0,211,110,"backgroundColor"],[295,29,211,127],[295,36,211,84],[296,0,211,136,"alignItems"],[296,24,211,148],[296,32,211,84],[297,0,211,158,"justifyContent"],[297,28,211,174],[297,36,211,84],[298,0,211,184,"borderRadius"],[298,26,211,198],[299,0,211,84],[299,11,211,71],[300,0,211,71],[301,0,211,71],[302,0,211,71],[303,0,211,71],[304,0,211,71],[304,11,211,203],[304,40,211,204],[304,70,211,203],[305,0,211,222],[305,16,211,227],[305,23,211,203],[306,0,211,235],[306,17,211,241],[306,26,211,203],[307,0,211,203],[308,0,211,203],[309,0,211,203],[310,0,211,203],[311,0,211,203],[311,10,211,71],[311,11,211,32],[311,12,211,12],[311,15,211,270],[311,19,202,24],[311,21,214,31],[311,26,214,36,"state"],[311,31,214,31],[311,32,214,42,"isApiCall"],[311,41,214,31],[311,46,214,56],[311,51,214,30],[311,54,214,65],[311,83,214,66],[311,100,214,65],[312,0,214,65],[313,0,214,65],[314,0,214,65],[315,0,214,65],[316,0,214,65],[316,32,214,30],[316,35,214,99],[316,39,202,24],[316,40,198,20],[316,42,217,24],[316,71,217,25],[316,88,217,24],[317,0,217,30],[317,17,217,37],[318,0,217,38,"justifyContent"],[318,28,217,53],[318,36,217,37],[319,0,217,62,"alignItems"],[319,24,217,73],[319,32,217,37],[320,0,217,82,"bottom"],[320,20,217,89],[321,0,217,37],[321,11,217,24],[322,0,217,24],[323,0,217,24],[324,0,217,24],[325,0,217,24],[326,0,217,24],[326,11,217,93],[326,40,217,94],[326,57,217,93],[327,0,217,99],[327,17,217,106],[328,0,217,107,"color"],[328,19,217,113],[329,0,217,106],[329,11,217,93],[330,0,217,93],[331,0,217,93],[332,0,217,93],[333,0,217,93],[334,0,217,93],[334,36,217,144,"DeviceInfo"],[334,67,217,155,"getVersion"],[334,77,217,144],[334,79,217,93],[334,80,217,24],[334,81,198,20],[334,82,195,16],[334,84,220,21],[334,89,220,26,"goToHomeScreen"],[334,103,220,21],[334,105,195,16],[334,107,221,20],[334,136,221,21],[334,158,221,20],[335,0,223,24],[335,20,223,33],[335,35,221,20],[336,0,221,20],[337,0,221,20],[338,0,221,20],[339,0,221,20],[340,0,221,20],[340,10,195,16],[340,12,226,20],[340,41,226,21],[340,63,226,20],[341,0,226,20],[342,0,226,20],[343,0,226,20],[344,0,226,20],[345,0,226,20],[345,10,195,16],[345,11,194,10],[345,12,193,8],[346,0,231,17],[352,4,10,27,"React"],[352,19,10,33,"Component"],[352,28],[356,0,233,12],[356,6,233,18,"styles"],[356,15,233,27,"StyleSheet"],[356,39,233,38,"create"],[356,45,233,27],[356,46,233,45],[357,0,235,16,"container"],[357,15,235,27],[358,0,236,20,"flex"],[358,12,236,26],[358,13,235,27],[359,0,237,20,"margin"],[359,14,237,28],[359,15,235,27],[360,0,238,20,"padding"],[360,15,238,29],[360,16,235,27],[361,0,239,20,"alignItems"],[361,18,239,32],[361,26,235,27],[362,0,240,20,"justifyContent"],[362,22,240,36],[363,0,235,27],[363,5,233,45],[364,0,243,16,"containerActivety"],[364,23,243,35],[365,0,245,20,"backgroundColor"],[365,23,245,37],[365,36,243,35],[366,0,246,20,"height"],[366,14,246,28],[366,20,243,35],[367,0,247,20,"width"],[367,13,247,27],[367,19,243,35],[368,0,248,20,"zIndex"],[368,14,248,28],[368,22,243,35],[369,0,249,20,"position"],[369,16,249,30],[369,26,243,35],[370,0,250,20,"justifyContent"],[370,22,250,36],[370,30,243,35],[371,0,251,20,"alignItems"],[371,18,251,32],[372,0,243,35],[372,5,233,45],[373,0,254,16,"container_logo"],[373,20,254,32],[374,0,255,20,"flex"],[374,12,255,26],[374,13,254,32],[375,0,256,20,"padding"],[375,15,256,29],[375,17,254,32],[376,0,257,20,"alignItems"],[376,18,257,32],[376,26,254,32],[377,0,258,20,"justifyContent"],[377,22,258,36],[377,30,254,32],[378,0,259,20,"marginTop"],[378,17,259,31],[379,0,254,32],[379,5,233,45],[380,0,262,16,"shadow1"],[380,13,262,25],[381,0,264,20,"marginBottom"],[381,20,264,34],[381,21,262,25],[382,0,265,20,"padding"],[382,15,265,29],[382,16,262,25],[383,0,266,20,"alignItems"],[383,18,266,32],[384,0,262,25],[384,5,233,45],[385,0,269,16,"imgBackground"],[385,19,269,31],[386,0,270,20,"width"],[386,13,270,27],[386,19,269,31],[387,0,271,20,"height"],[387,14,271,28],[387,20,269,31],[388,0,273,20,"flex"],[388,12,273,26],[389,0,269,31],[389,5,233,45],[390,0,277,16,"SplashScreen_RootView"],[390,27,278,24],[391,0,279,28,"flex"],[391,12,279,34],[391,13,278,24],[392,0,280,28,"margin"],[392,14,280,36],[392,15,278,24],[393,0,281,28,"position"],[393,16,281,38],[393,26,278,24],[394,0,282,28,"width"],[394,13,282,35],[394,19,278,24],[395,0,283,28,"height"],[395,14,283,36],[396,0,278,24],[396,5,233,45],[397,0,286,16,"SplashScreen_ChildView"],[397,28,287,24],[398,0,288,28,"justifyContent"],[398,22,288,44],[398,30,287,24],[399,0,289,28,"alignItems"],[399,18,289,40],[399,26,287,24],[400,0,291,28,"flex"],[400,12,291,34],[401,0,287,24],[402,0,233,45],[402,3,233,27],[402,4,233,12],[404,18,297,27,"VendorSplash"],[404,30]]},"type":"js/module"}]}