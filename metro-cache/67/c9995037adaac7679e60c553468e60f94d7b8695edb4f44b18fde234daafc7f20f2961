{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../node_modules/react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-native-router-flux","isAsync":false},{"name":"./UserData","isAsync":false},{"name":"./ServiceClass","isAsync":false},{"name":"./OfflineNotice","isAsync":false},{"name":"react-native-device-info","isAsync":false},{"name":"../../assets/splash-screen-bac.png","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactNativeRouterFlux = _$$_REQUIRE(_dependencyMap[3], \"react-native-router-flux\");\n\n  var _UserData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./UserData\"));\n\n  var _ServiceClass = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ServiceClass\"));\n\n  var _OfflineNotice = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./OfflineNotice\"));\n\n  var _reactNativeDeviceInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react-native-device-info\"));\n\n  var _jsxFileName = \"/var/www/html/thg/src/components/VendorSplash.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  var _components = {\n    VendorSplash: {\n      displayName: \"VendorSplash\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/var/www/html/thg/src/components/VendorSplash.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var VendorSplash = function (_React$Component) {\n    function VendorSplash(props) {\n      var _this;\n\n      _classCallCheck(this, VendorSplash);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(VendorSplash).call(this, props));\n\n      _this._handleAppStateChange = function (nextAppState) {\n        if (_this.state.appState.match(/inactive|background/) && nextAppState === 'active') {\n          if (_reactNativeRouterFlux.Actions.currentScene == \"VendorSplash\") {\n            _this.callApiMethod();\n          }\n        }\n      };\n\n      _this.callApiMethod = function () {\n        _reactNative.NetInfo.isConnected.fetch().done(function (isConnected) {\n          if (isConnected) {\n            _UserData.default.retriveData('token').then(function (res) {\n              _this.callAppDetails(res);\n            });\n          } else {}\n        });\n      };\n\n      _this.callAppDetails = function (token) {\n        _this.setState({\n          isApiCall: true\n        });\n\n        var arrAppointment = [];\n\n        _this.setState({\n          loaded: true\n        });\n\n        _ServiceClass.default.appDetails(token, 'appdetails').then(function (reData) {\n          if (reData.status === 404 || reData.status === 400 || reData.status === 204 || reData.data === null || reData.status === 0) {\n            var errorMsg = response.statusText;\n            alert(\"Something went wrong.\");\n            return;\n          } else {\n            var _that = _assertThisInitialized(_assertThisInitialized(_this));\n\n            if (reData.data.status === '1') {\n              _this.setState({\n                dataUser: reData.data.data.users\n              });\n\n              _this.setState({\n                url: reData.data.data.siteDetails[0].logoUrl\n              });\n\n              var isTelemedicineEnable = reData.data.data.siteDetails[0].hasOwnProperty(\"isTelemedicineEnable\");\n\n              if (isTelemedicineEnable === true) {\n                try {\n                  _reactNative.AsyncStorage.setItem('isTelemedicineEnable', reData.data.data.siteDetails[0].isTelemedicineEnable.toString());\n                } catch (error) {}\n              }\n\n              _UserData.default.saveData('memberId', reData.data.data.users[0].ID.toString());\n\n              for (var item in reData.data.data.appointments[0].type) {\n                arrAppointment.push({\n                  label: reData.data.data.appointments[0].type[item],\n                  value: reData.data.data.appointments[0].type[item]\n                });\n              }\n\n              try {\n                _reactNative.AsyncStorage.setItem('AppointmentType', JSON.stringify(arrAppointment));\n              } catch (error) {}\n\n              try {\n                _reactNative.AsyncStorage.setItem('profileArray', JSON.stringify(reData.data.data.users));\n              } catch (error) {}\n\n              _UserData.default.saveData('PrimaryCare', reData.data.data.appointments[1].primaryCareText);\n\n              _this.setState({\n                loaded: false\n              });\n\n              setTimeout(function () {\n                _that.HideSplashScreen();\n              }, 2000);\n            } else {\n              _this.setState({\n                loaded: false\n              });\n\n              _reactNative.Alert.alert(reData.data.message);\n\n              setTimeout(function () {\n                _that.HideSplashScreen();\n              }, 2000);\n            }\n          }\n        }).catch(function (error) {\n          _this.setState({\n            loaded: false\n          });\n\n          setTimeout(function () {\n            that.HideSplashScreen();\n          }, 100);\n\n          _reactNative.Alert.alert(error);\n        });\n      };\n\n      _this.HideSplashScreen = function () {\n        _this.setState({\n          isVisible: false\n        });\n      };\n\n      _this.goToHomeScreen = function () {\n        var isVisible = _this.state.isVisible;\n\n        if (isVisible === false) {\n          _reactNativeRouterFlux.Actions.AccountInfo({\n            userData: _this.state.dataUser,\n            telemedicine: _this.state.telemadicineOpen,\n            isFromVendor: true\n          });\n        }\n      };\n\n      _this.state = {\n        isVisible: true,\n        loaded: false,\n        url: '',\n        isApiCall: null,\n        appState: _reactNative.AppState.currentState\n      };\n      return _this;\n    }\n\n    _createClass(VendorSplash, [{\n      key: \"componentWillReceiveProps\",\n      value: function componentWillReceiveProps(customProps) {\n        this.callApiMethod();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        _reactNative.AppState.addEventListener('change', this._handleAppStateChange);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        _reactNative.AppState.removeEventListener('change', this._handleAppStateChange);\n      }\n    }, {\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        var version = _reactNativeDeviceInfo.default.getVersion();\n\n        this.callApiMethod();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$state = this.state,\n            url = _this$state.url,\n            loaded = _this$state.loaded;\n        return _react.default.createElement(_reactNative.SafeAreaView, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          }\n        }, _react.default.createElement(_reactNative.ImageBackground, {\n          style: styles.imgBackground,\n          resizeMode: \"cover\",\n          source: _$$_REQUIRE(_dependencyMap[8], '../../assets/splash-screen-bac.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.container_logo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          }\n        }, _react.default.createElement(_reactNative.Image, {\n          style: {\n            width: 210,\n            height: 63\n          },\n          source: {\n            uri: url\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          }\n        }), loaded === true ? _react.default.createElement(_reactNative.View, {\n          style: styles.containerActivety,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: {\n            width: 100,\n            height: 100,\n            backgroundColor: 'white',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          }\n        }, _react.default.createElement(_reactNative.ActivityIndicator, {\n          size: \"large\",\n          color: \"#00dcc3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          }\n        }))) : null, this.state.isApiCall === false ? _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          }\n        }, \"Please try again!!\") : null), _react.default.createElement(_reactNative.View, {\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            bottom: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: {\n            color: '#000'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          }\n        }, \"Patient Interactive v\", _reactNativeDeviceInfo.default.getVersion()))), this.goToHomeScreen(), _react.default.createElement(_reactNative.StatusBar, {\n          barStyle: \"light-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          }\n        }), _react.default.createElement(_OfflineNotice.default, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          }\n        })));\n      }\n    }]);\n\n    _inherits(VendorSplash, _React$Component);\n\n    return VendorSplash;\n  }(_react.default.Component);\n\n  VendorSplash = _wrapComponent(\"VendorSplash\")(VendorSplash);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      margin: 0,\n      padding: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    containerActivety: {\n      backgroundColor: 'transparent',\n      height: '100%',\n      width: '100%',\n      zIndex: 10000000,\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    container_logo: {\n      flex: 1,\n      padding: 10,\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginTop: 20\n    },\n    shadow1: {\n      marginBottom: 0,\n      padding: 0,\n      alignItems: 'center'\n    },\n    imgBackground: {\n      width: '100%',\n      height: '100%',\n      flex: 1\n    },\n    SplashScreen_RootView: {\n      flex: 1,\n      margin: 0,\n      position: 'absolute',\n      width: '100%',\n      height: '100%'\n    },\n    SplashScreen_ChildView: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    }\n  });\n\n  var _default2 = VendorSplash;\n  exports.default = _default2;\n});","map":[[7,0,1,1],[11,0,2,0],[13,0,3,0],[15,0,4,0],[17,0,5,0],[19,0,6,0],[21,0,7,0],[62,6,10,6,"VendorSplash"],[62,18],[63,0,12,4],[63,26,12,16,"props"],[63,31,12,4],[63,33,12,23],[64,0,12,23],[66,0,12,23],[68,0,13,8],[68,88,13,14,"props"],[68,93,13,8],[70,0,12,23],[70,12,40,3,"_handleAppStateChange"],[70,33,12,23],[70,36,40,27],[70,46,40,28,"nextAppState"],[70,58,40,27],[70,60,40,45],[71,0,41,7],[71,12,41,11],[71,18,41,16,"state"],[71,23,41,11],[71,24,41,22,"appState"],[71,32,41,11],[71,33,41,31,"match"],[71,38,41,11],[71,39,41,37],[71,60,41,11],[71,65,41,63,"nextAppState"],[71,82,41,80],[71,90,41,7],[71,92,41,90],[72,0,43,9],[72,14,43,13,"Actions"],[72,45,43,21,"currentScene"],[72,57,43,13],[72,61,43,37],[72,75,43,9],[72,77,43,53],[73,0,44,15],[73,18,44,20,"callApiMethod"],[73,31,44,15],[74,0,45,10],[75,0,46,8],[76,0,48,6],[76,7,12,23],[78,0,12,23],[78,12,52,2,"callApiMethod"],[78,25,12,23],[78,28,52,18],[78,40,52,23],[79,0,53,4,"NetInfo"],[79,29,53,12,"isConnected"],[79,40,53,4],[79,41,53,24,"fetch"],[79,46,53,4],[79,49,53,32,"done"],[79,53,53,4],[79,54,53,37],[79,64,53,38,"isConnected"],[79,75,53,37],[79,77,53,54],[80,0,54,8],[80,14,54,12,"isConnected"],[80,25,54,8],[80,27,55,8],[81,0,56,12,"UserData"],[81,30,56,21,"retriveData"],[81,41,56,12],[81,42,56,33],[81,49,56,12],[81,51,56,42,"then"],[81,55,56,12],[81,56,56,47],[81,66,56,48,"res"],[81,69,56,47],[81,71,56,56],[82,0,59,16],[82,20,59,21,"callAppDetails"],[82,34,59,16],[82,35,59,36,"res"],[82,38,59,16],[83,0,60,13],[83,13,56,12],[84,0,61,9],[84,11,54,8],[84,17,62,8],[84,18,64,9],[85,0,65,5],[85,9,53,4],[86,0,66,3],[86,7,12,23],[88,0,12,23],[88,12,76,4,"callAppDetails"],[88,26,12,23],[88,29,76,21],[88,39,76,22,"token"],[88,44,76,21],[88,46,76,32],[89,0,78,8],[89,14,78,13,"setState"],[89,22,78,8],[89,23,78,22],[90,0,78,23,"isApiCall"],[90,21,78,33],[91,0,78,22],[91,9,78,8],[93,0,79,8],[93,12,79,14,"arrAppointment"],[93,29,79,31],[93,31,79,8],[95,0,81,8],[95,14,81,13,"setState"],[95,22,81,8],[95,23,81,22],[96,0,81,23,"loaded"],[96,18,81,31],[97,0,81,22],[97,9,81,8],[99,0,83,8,"ServiceClass"],[99,30,83,21,"appDetails"],[99,40,83,8],[99,41,83,32,"token"],[99,46,83,8],[99,48,83,39],[99,60,83,8],[99,62,83,53,"then"],[99,66,83,8],[99,67,83,58],[99,77,83,59,"reData"],[99,83,83,58],[99,85,83,70],[100,0,87,7],[100,14,87,12,"reData"],[100,21,87,19,"status"],[100,27,87,12],[100,32,87,30],[100,35,87,12],[100,39,87,37,"reData"],[100,46,87,44,"status"],[100,52,87,37],[100,57,87,55],[100,60,87,12],[100,64,87,62,"reData"],[100,71,87,69,"status"],[100,77,87,62],[100,82,87,80],[100,85,87,12],[100,89,87,87,"reData"],[100,96,87,94,"data"],[100,100,87,87],[100,105,87,103],[100,109,87,12],[100,113,87,111,"reData"],[100,120,87,118,"status"],[100,126,87,111],[100,131,87,129],[100,132,87,7],[100,134,87,132],[101,0,88,22],[101,16,88,26,"errorMsg"],[101,27,88,37,"response"],[101,36,88,46,"statusText"],[101,46,88,22],[102,0,89,22,"alert"],[102,18,89,28],[102,41,89,22],[103,0,90,22],[104,0,91,12],[104,11,87,7],[104,17,91,17],[105,0,94,25],[105,16,94,31,"that"],[105,77,94,25],[107,0,96,25],[107,16,96,29,"reData"],[107,23,96,36,"data"],[107,27,96,29],[107,28,96,41,"status"],[107,34,96,29],[107,39,96,52],[107,42,96,25],[107,44,96,57],[108,0,101,29],[108,20,101,34,"setState"],[108,28,101,29],[108,29,101,43],[109,0,101,44,"dataUser"],[109,26,101,54,"reData"],[109,33,101,61,"data"],[109,37,101,54],[109,38,101,66,"data"],[109,42,101,54],[109,43,101,71,"users"],[110,0,101,43],[110,15,101,29],[112,0,102,29],[112,20,102,34,"setState"],[112,28,102,29],[112,29,102,43],[113,0,102,44,"url"],[113,21,102,49,"reData"],[113,28,102,56,"data"],[113,32,102,49],[113,33,102,61,"data"],[113,37,102,49],[113,38,102,66,"siteDetails"],[113,49,102,49],[113,50,102,78],[113,51,102,49],[113,53,102,81,"logoUrl"],[114,0,102,43],[114,15,102,29],[116,0,104,29],[116,18,104,33,"isTelemedicineEnable"],[116,41,104,56,"reData"],[116,48,104,63,"data"],[116,52,104,56],[116,53,104,68,"data"],[116,57,104,56],[116,58,104,73,"siteDetails"],[116,69,104,56],[116,70,104,85],[116,71,104,56],[116,73,104,88,"hasOwnProperty"],[116,87,104,56],[116,88,104,103],[116,110,104,56],[116,111,104,29],[118,0,105,29],[118,18,105,33,"isTelemedicineEnable"],[118,43,105,58],[118,47,105,29],[118,49,105,63],[119,0,107,33],[119,20,107,37],[120,0,108,37,"AsyncStorage"],[120,44,108,50,"setItem"],[120,51,108,37],[120,52,108,58],[120,74,108,37],[120,76,108,82,"reData"],[120,83,108,89,"data"],[120,87,108,82],[120,88,108,94,"data"],[120,92,108,82],[120,93,108,99,"siteDetails"],[120,104,108,82],[120,105,108,111],[120,106,108,82],[120,108,108,114,"isTelemedicineEnable"],[120,128,108,82],[120,129,108,135,"toString"],[120,137,108,82],[120,139,108,37],[121,0,109,34],[121,17,107,33],[121,18,109,35],[121,25,109,42,"error"],[121,30,109,35],[121,32,109,49],[121,33,111,34],[122,0,114,30],[124,0,116,33,"UserData"],[124,32,116,42,"saveData"],[124,40,116,33],[124,41,116,51],[124,51,116,33],[124,53,116,63,"reData"],[124,60,116,70,"data"],[124,64,116,63],[124,65,116,75,"data"],[124,69,116,63],[124,70,116,80,"users"],[124,75,116,63],[124,76,116,86],[124,77,116,63],[124,79,116,89,"ID"],[124,81,116,63],[124,82,116,92,"toString"],[124,90,116,63],[124,92,116,33],[126,0,119,29],[126,19,119,34],[126,23,119,38,"item"],[126,27,119,29],[126,31,119,46,"reData"],[126,38,119,53,"data"],[126,42,119,46],[126,43,119,58,"data"],[126,47,119,46],[126,48,119,63,"appointments"],[126,60,119,46],[126,61,119,76],[126,62,119,46],[126,64,119,79,"type"],[126,68,119,29],[126,70,119,85],[127,0,121,33,"arrAppointment"],[127,31,121,48,"push"],[127,35,121,33],[127,36,121,53],[128,0,122,37,"label"],[128,25,122,44,"reData"],[128,32,122,51,"data"],[128,36,122,44],[128,37,122,56,"data"],[128,41,122,44],[128,42,122,61,"appointments"],[128,54,122,44],[128,55,122,74],[128,56,122,44],[128,58,122,77,"type"],[128,62,122,44],[128,63,122,82,"item"],[128,67,122,44],[128,68,121,53],[129,0,123,37,"value"],[129,25,123,44,"reData"],[129,32,123,51,"data"],[129,36,123,44],[129,37,123,56,"data"],[129,41,123,44],[129,42,123,61,"appointments"],[129,54,123,44],[129,55,123,74],[129,56,123,44],[129,58,123,77,"type"],[129,62,123,44],[129,63,123,82,"item"],[129,67,123,44],[130,0,121,53],[130,17,121,33],[131,0,125,30],[133,0,126,29],[133,18,126,33],[134,0,127,33,"AsyncStorage"],[134,42,127,46,"setItem"],[134,49,127,33],[134,50,127,54],[134,67,127,33],[134,69,127,73,"JSON"],[134,74,127,78,"stringify"],[134,83,127,73],[134,84,127,88,"arrAppointment"],[134,98,127,73],[134,99,127,33],[135,0,128,30],[135,15,126,29],[135,16,128,31],[135,23,128,38,"error"],[135,28,128,31],[135,30,128,45],[135,31,130,30],[137,0,131,29],[137,18,131,33],[138,0,132,33,"AsyncStorage"],[138,42,132,46,"setItem"],[138,49,132,33],[138,50,132,54],[138,64,132,33],[138,66,132,70,"JSON"],[138,71,132,75,"stringify"],[138,80,132,70],[138,81,132,85,"reData"],[138,88,132,92,"data"],[138,92,132,85],[138,93,132,97,"data"],[138,97,132,85],[138,98,132,102,"users"],[138,103,132,70],[138,104,132,33],[139,0,133,33],[139,15,131,29],[139,16,134,29],[139,23,134,36,"error"],[139,28,134,29],[139,30,134,43],[139,31,135,33],[141,0,138,29,"UserData"],[141,32,138,38,"saveData"],[141,40,138,29],[141,41,138,47],[141,54,138,29],[141,56,138,62,"reData"],[141,63,138,69,"data"],[141,67,138,62],[141,68,138,74,"data"],[141,72,138,62],[141,73,138,79,"appointments"],[141,85,138,62],[141,86,138,92],[141,87,138,62],[141,89,138,95,"primaryCareText"],[141,104,138,29],[143,0,142,29],[143,20,142,34,"setState"],[143,28,142,29],[143,29,142,43],[144,0,142,44,"loaded"],[144,24,142,52],[145,0,142,43],[145,15,142,29],[147,0,143,29,"setTimeout"],[147,25,143,40],[147,37,143,46],[148,0,144,33,"that"],[148,22,144,38,"HideSplashScreen"],[148,38,144,33],[149,0,145,30],[149,15,143,29],[149,17,145,32],[149,21,143,29],[150,0,146,26],[150,13,96,25],[150,19,146,32],[151,0,147,29],[151,20,147,34,"setState"],[151,28,147,29],[151,29,147,43],[152,0,147,44,"loaded"],[152,24,147,52],[153,0,147,43],[153,15,147,29],[155,0,148,29,"Alert"],[155,33,148,35,"alert"],[155,38,148,29],[155,39,148,41,"reData"],[155,46,148,48,"data"],[155,50,148,41],[155,51,148,53,"message"],[155,58,148,29],[157,0,150,29,"setTimeout"],[157,25,150,40],[157,37,150,46],[158,0,151,33,"that"],[158,22,151,38,"HideSplashScreen"],[158,38,151,33],[159,0,152,30],[159,15,150,29],[159,17,152,32],[159,21,150,29],[160,0,153,26],[161,0,154,20],[162,0,158,9],[162,9,83,8],[162,11,158,11,"catch"],[162,16,83,8],[162,17,158,17],[162,27,158,18,"error"],[162,32,158,17],[162,34,158,28],[163,0,161,12],[163,16,161,17,"setState"],[163,24,161,12],[163,25,161,26],[164,0,161,27,"loaded"],[164,20,161,35],[165,0,161,26],[165,11,161,12],[167,0,162,12,"setTimeout"],[167,21,162,23],[167,33,162,29],[168,0,163,16,"that"],[168,17,163,21,"HideSplashScreen"],[168,33,163,16],[169,0,164,13],[169,11,162,12],[169,13,164,15],[169,16,162,12],[171,0,165,12,"Alert"],[171,29,165,18,"alert"],[171,34,165,12],[171,35,165,24,"error"],[171,40,165,12],[172,0,166,9],[172,9,83,8],[173,0,167,5],[173,7,12,23],[175,0,12,23],[175,12,168,4,"HideSplashScreen"],[175,28,12,23],[175,31,168,23],[175,43,168,29],[176,0,169,8],[176,14,169,13,"setState"],[176,22,169,8],[176,23,169,22],[177,0,170,12,"isVisible"],[177,21,170,23],[178,0,169,22],[178,9,169,8],[179,0,173,5],[179,7,12,23],[181,0,12,23],[181,12,174,4,"goToHomeScreen"],[181,26,12,23],[181,29,174,21],[181,41,174,27],[182,0,174,27],[182,12,176,12,"isVisible"],[182,21,174,27],[182,24,178,12],[182,30,178,17,"state"],[182,35,174,27],[182,36,176,12,"isVisible"],[182,45,174,27],[184,0,179,8],[184,12,179,12,"isVisible"],[184,26,179,26],[184,31,179,8],[184,33,179,33],[185,0,181,12,"Actions"],[185,41,181,20,"AccountInfo"],[185,52,181,12],[185,53,181,32],[186,0,181,34,"userData"],[186,22,181,44],[186,28,181,49,"state"],[186,33,181,44],[186,34,181,55,"dataUser"],[186,42,181,32],[187,0,181,65,"telemedicine"],[187,26,181,78],[187,32,181,83,"state"],[187,37,181,78],[187,38,181,89,"telemadicineOpen"],[187,54,181,32],[188,0,181,106,"isFromVendor"],[188,26,181,119],[189,0,181,32],[189,11,181,12],[190,0,184,9],[191,0,185,5],[191,7,12,23],[193,0,14,8],[193,12,14,13,"state"],[193,17,14,8],[193,20,14,21],[194,0,15,12,"isVisible"],[194,19,15,23],[194,23,14,21],[195,0,16,12,"loaded"],[195,16,16,20],[195,21,14,21],[196,0,18,12,"url"],[196,13,18,17],[196,15,14,21],[197,0,19,12,"isApiCall"],[197,19,19,23],[197,23,14,21],[198,0,20,12,"appState"],[198,18,20,22,"AppState"],[198,40,20,31,"currentState"],[199,0,14,21],[199,7,14,8],[200,0,12,23],[201,0,22,5],[205,48,24,30,"customProps"],[205,59],[205,61,24,42],[206,0,26,12],[206,13,26,17,"callApiMethod"],[206,26,26,12],[207,0,28,5],[210,42,30,24],[211,0,32,6,"AppState"],[211,30,32,15,"addEventListener"],[211,46,32,6],[211,47,32,32],[211,55,32,6],[211,57,32,42],[211,62,32,47,"_handleAppStateChange"],[211,83,32,6],[212,0,33,3],[215,45,35,25],[216,0,36,5,"AppState"],[216,30,36,14,"removeEventListener"],[216,49,36,5],[216,50,36,34],[216,58,36,5],[216,60,36,44],[216,65,36,49,"_handleAppStateChange"],[216,86,36,5],[217,0,37,4],[220,43,69,25],[221,0,70,6],[221,12,70,10,"version"],[221,22,70,21,"DeviceInfo"],[221,53,70,32,"getVersion"],[221,63,70,21],[221,65,70,6],[223,0,72,8],[223,13,72,13,"callApiMethod"],[223,26,72,8],[224,0,74,6],[227,31,187,13],[228,0,187,13],[228,26,191,12],[228,31,191,17,"state"],[228,36,187,13],[229,0,187,13],[229,12,189,12,"url"],[229,15,187,13],[229,30,189,12,"url"],[229,33,187,13],[230,0,187,13],[230,12,190,12,"loaded"],[230,18,187,13],[230,33,190,12,"loaded"],[230,39,187,13],[231,0,193,8],[231,15,194,10],[231,44,194,11],[231,69,194,10],[232,0,194,24],[232,17,194,31],[233,0,194,32,"flex"],[233,18,194,37],[234,0,194,31],[234,11,194,10],[235,0,194,10],[236,0,194,10],[237,0,194,10],[238,0,194,10],[239,0,194,10],[239,11,195,16],[239,40,195,17],[239,57,195,16],[240,0,195,22],[240,17,195,29,"styles"],[240,24,195,36,"container"],[240,33,195,16],[241,0,195,16],[242,0,195,16],[243,0,195,16],[244,0,195,16],[245,0,195,16],[245,11,198,20],[245,40,198,21],[245,68,198,20],[246,0,199,24],[246,17,199,31,"styles"],[246,24,199,38,"imgBackground"],[246,37,198,20],[247,0,200,24],[247,22,200,35],[247,29,198,20],[248,0,201,24],[248,18,201,32,"require"],[248,49,201,40],[248,85,201,32],[248,86,198,20],[249,0,198,20],[250,0,198,20],[251,0,198,20],[252,0,198,20],[253,0,198,20],[253,11,202,24],[253,40,202,25],[253,57,202,24],[254,0,202,30],[254,17,202,37,"styles"],[254,24,202,44,"container_logo"],[254,38,202,24],[255,0,202,24],[256,0,202,24],[257,0,202,24],[258,0,202,24],[259,0,202,24],[259,11,203,28],[259,40,203,29],[259,58,203,28],[260,0,204,32],[260,17,204,39],[261,0,204,40,"width"],[261,19,204,47],[261,22,204,39],[262,0,204,52,"height"],[262,20,204,60],[263,0,204,39],[263,11,203,28],[264,0,205,32],[264,18,205,40],[265,0,206,28,"uri"],[265,17,206,33,"url"],[266,0,205,40],[266,11,203,28],[267,0,203,28],[268,0,203,28],[269,0,203,28],[270,0,203,28],[271,0,203,28],[271,10,202,24],[271,12,211,13,"loaded"],[271,23,211,24],[271,27,211,12],[271,30,211,32],[271,59,211,33],[271,76,211,32],[272,0,211,38],[272,17,211,45,"styles"],[272,24,211,52,"containerActivety"],[272,41,211,32],[273,0,211,32],[274,0,211,32],[275,0,211,32],[276,0,211,32],[277,0,211,32],[277,11,211,71],[277,40,211,72],[277,57,211,71],[278,0,211,77],[278,17,211,84],[279,0,211,85,"width"],[279,19,211,92],[279,22,211,84],[280,0,211,97,"height"],[280,20,211,105],[280,23,211,84],[281,0,211,110,"backgroundColor"],[281,29,211,127],[281,36,211,84],[282,0,211,136,"alignItems"],[282,24,211,148],[282,32,211,84],[283,0,211,158,"justifyContent"],[283,28,211,174],[283,36,211,84],[284,0,211,184,"borderRadius"],[284,26,211,198],[285,0,211,84],[285,11,211,71],[286,0,211,71],[287,0,211,71],[288,0,211,71],[289,0,211,71],[290,0,211,71],[290,11,211,203],[290,40,211,204],[290,70,211,203],[291,0,211,222],[291,16,211,227],[291,23,211,203],[292,0,211,235],[292,17,211,241],[292,26,211,203],[293,0,211,203],[294,0,211,203],[295,0,211,203],[296,0,211,203],[297,0,211,203],[297,10,211,71],[297,11,211,32],[297,12,211,12],[297,15,211,270],[297,19,202,24],[297,21,214,31],[297,26,214,36,"state"],[297,31,214,31],[297,32,214,42,"isApiCall"],[297,41,214,31],[297,46,214,56],[297,51,214,30],[297,54,214,65],[297,83,214,66],[297,100,214,65],[298,0,214,65],[299,0,214,65],[300,0,214,65],[301,0,214,65],[302,0,214,65],[302,32,214,30],[302,35,214,99],[302,39,202,24],[302,40,198,20],[302,42,217,24],[302,71,217,25],[302,88,217,24],[303,0,217,30],[303,17,217,37],[304,0,217,38,"justifyContent"],[304,28,217,53],[304,36,217,37],[305,0,217,62,"alignItems"],[305,24,217,73],[305,32,217,37],[306,0,217,82,"bottom"],[306,20,217,89],[307,0,217,37],[307,11,217,24],[308,0,217,24],[309,0,217,24],[310,0,217,24],[311,0,217,24],[312,0,217,24],[312,11,217,93],[312,40,217,94],[312,57,217,93],[313,0,217,99],[313,17,217,106],[314,0,217,107,"color"],[314,19,217,113],[315,0,217,106],[315,11,217,93],[316,0,217,93],[317,0,217,93],[318,0,217,93],[319,0,217,93],[320,0,217,93],[320,36,217,144,"DeviceInfo"],[320,67,217,155,"getVersion"],[320,77,217,144],[320,79,217,93],[320,80,217,24],[320,81,198,20],[320,82,195,16],[320,84,220,21],[320,89,220,26,"goToHomeScreen"],[320,103,220,21],[320,105,195,16],[320,107,221,20],[320,136,221,21],[320,158,221,20],[321,0,223,24],[321,20,223,33],[321,35,221,20],[322,0,221,20],[323,0,221,20],[324,0,221,20],[325,0,221,20],[326,0,221,20],[326,10,195,16],[326,12,226,20],[326,41,226,21],[326,63,226,20],[327,0,226,20],[328,0,226,20],[329,0,226,20],[330,0,226,20],[331,0,226,20],[331,10,195,16],[331,11,194,10],[331,12,193,8],[332,0,231,17],[338,4,10,27,"React"],[338,19,10,33,"Component"],[338,28],[342,0,233,12],[342,6,233,18,"styles"],[342,15,233,27,"StyleSheet"],[342,39,233,38,"create"],[342,45,233,27],[342,46,233,45],[343,0,235,16,"container"],[343,15,235,27],[344,0,236,20,"flex"],[344,12,236,26],[344,13,235,27],[345,0,237,20,"margin"],[345,14,237,28],[345,15,235,27],[346,0,238,20,"padding"],[346,15,238,29],[346,16,235,27],[347,0,239,20,"alignItems"],[347,18,239,32],[347,26,235,27],[348,0,240,20,"justifyContent"],[348,22,240,36],[349,0,235,27],[349,5,233,45],[350,0,243,16,"containerActivety"],[350,23,243,35],[351,0,245,20,"backgroundColor"],[351,23,245,37],[351,36,243,35],[352,0,246,20,"height"],[352,14,246,28],[352,20,243,35],[353,0,247,20,"width"],[353,13,247,27],[353,19,243,35],[354,0,248,20,"zIndex"],[354,14,248,28],[354,22,243,35],[355,0,249,20,"position"],[355,16,249,30],[355,26,243,35],[356,0,250,20,"justifyContent"],[356,22,250,36],[356,30,243,35],[357,0,251,20,"alignItems"],[357,18,251,32],[358,0,243,35],[358,5,233,45],[359,0,254,16,"container_logo"],[359,20,254,32],[360,0,255,20,"flex"],[360,12,255,26],[360,13,254,32],[361,0,256,20,"padding"],[361,15,256,29],[361,17,254,32],[362,0,257,20,"alignItems"],[362,18,257,32],[362,26,254,32],[363,0,258,20,"justifyContent"],[363,22,258,36],[363,30,254,32],[364,0,259,20,"marginTop"],[364,17,259,31],[365,0,254,32],[365,5,233,45],[366,0,262,16,"shadow1"],[366,13,262,25],[367,0,264,20,"marginBottom"],[367,20,264,34],[367,21,262,25],[368,0,265,20,"padding"],[368,15,265,29],[368,16,262,25],[369,0,266,20,"alignItems"],[369,18,266,32],[370,0,262,25],[370,5,233,45],[371,0,269,16,"imgBackground"],[371,19,269,31],[372,0,270,20,"width"],[372,13,270,27],[372,19,269,31],[373,0,271,20,"height"],[373,14,271,28],[373,20,269,31],[374,0,273,20,"flex"],[374,12,273,26],[375,0,269,31],[375,5,233,45],[376,0,277,16,"SplashScreen_RootView"],[376,27,278,24],[377,0,279,28,"flex"],[377,12,279,34],[377,13,278,24],[378,0,280,28,"margin"],[378,14,280,36],[378,15,278,24],[379,0,281,28,"position"],[379,16,281,38],[379,26,278,24],[380,0,282,28,"width"],[380,13,282,35],[380,19,278,24],[381,0,283,28,"height"],[381,14,283,36],[382,0,278,24],[382,5,233,45],[383,0,286,16,"SplashScreen_ChildView"],[383,28,287,24],[384,0,288,28,"justifyContent"],[384,22,288,44],[384,30,287,24],[385,0,289,28,"alignItems"],[385,18,289,40],[385,26,287,24],[386,0,291,28,"flex"],[386,12,291,34],[387,0,287,24],[388,0,233,45],[388,3,233,27],[388,4,233,12],[390,18,297,27,"VendorSplash"],[390,30]]},"type":"js/module"}]}