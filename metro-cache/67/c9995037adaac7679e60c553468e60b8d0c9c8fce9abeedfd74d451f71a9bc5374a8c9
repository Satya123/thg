{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../node_modules/react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-native-router-flux","isAsync":false},{"name":"./UserData","isAsync":false},{"name":"./ServiceClass","isAsync":false},{"name":"./OfflineNotice","isAsync":false},{"name":"react-native-device-info","isAsync":false},{"name":"../../assets/splash-screen-bac.png","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactNativeRouterFlux = _$$_REQUIRE(_dependencyMap[3], \"react-native-router-flux\");\n\n  var _UserData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./UserData\"));\n\n  var _ServiceClass = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ServiceClass\"));\n\n  var _OfflineNotice = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./OfflineNotice\"));\n\n  var _reactNativeDeviceInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react-native-device-info\"));\n\n  var _jsxFileName = \"/var/www/html/thg/src/components/VendorSplash.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  var _components = {\n    VendorSplash: {\n      displayName: \"VendorSplash\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/var/www/html/thg/src/components/VendorSplash.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var VendorSplash = function (_React$Component) {\n    function VendorSplash(props) {\n      var _this;\n\n      _classCallCheck(this, VendorSplash);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(VendorSplash).call(this, props));\n\n      _this._handleAppStateChange = function (nextAppState) {\n        if (_this.state.appState.match(/inactive|background/) && nextAppState === 'active') {\n          console.log('App has come to the foreground!');\n\n          if (_reactNativeRouterFlux.Actions.currentScene == \"VendorSplash\") {\n            _this.callApiMethod();\n          }\n        }\n      };\n\n      _this.callApiMethod = function () {\n        _reactNative.NetInfo.isConnected.fetch().done(function (isConnected) {\n          if (isConnected) {\n            _UserData.default.retriveData('token').then(function (res) {\n              console.log(res);\n\n              _this.callAppDetails(res);\n            });\n          } else {}\n        });\n      };\n\n      _this.callAppDetails = function (token) {\n        _this.setState({\n          isApiCall: true\n        });\n\n        var arrAppointment = [];\n        console.log(token);\n\n        _this.setState({\n          loaded: true\n        });\n\n        _ServiceClass.default.appDetails(token, 'appdetails').then(function (reData) {\n          if (reData.status === 404 || reData.status === 400 || reData.status === 204 || reData.data === null || reData.status === 0) {\n            var errorMsg = response.statusText;\n            alert(\"Something went wrong.\");\n            return;\n          } else {\n            console.log(reData);\n\n            var _that = _assertThisInitialized(_assertThisInitialized(_this));\n\n            if (reData.data.status === '1') {\n              console.log(reData.data.data.id);\n              console.log(reData.data.data.siteDetails[0].logoUrl);\n              console.log(reData.data.data.siteDetails[0].isTelemedicineEnable);\n\n              _this.setState({\n                dataUser: reData.data.data.users\n              });\n\n              _this.setState({\n                url: reData.data.data.siteDetails[0].logoUrl\n              });\n\n              var isTelemedicineEnable = reData.data.data.siteDetails[0].hasOwnProperty(\"isTelemedicineEnable\");\n\n              if (isTelemedicineEnable === true) {\n                try {\n                  _reactNative.AsyncStorage.setItem('isTelemedicineEnable', reData.data.data.siteDetails[0].isTelemedicineEnable.toString());\n                } catch (error) {}\n              }\n\n              _UserData.default.saveData('memberId', reData.data.data.users[0].ID.toString());\n\n              for (var item in reData.data.data.appointments[0].type) {\n                console.log(reData.data.data.appointments[0].type[item]);\n                arrAppointment.push({\n                  label: reData.data.data.appointments[0].type[item],\n                  value: reData.data.data.appointments[0].type[item]\n                });\n              }\n\n              try {\n                _reactNative.AsyncStorage.setItem('AppointmentType', JSON.stringify(arrAppointment));\n              } catch (error) {}\n\n              try {\n                _reactNative.AsyncStorage.setItem('profileArray', JSON.stringify(reData.data.data.users));\n              } catch (error) {}\n\n              _UserData.default.saveData('PrimaryCare', reData.data.data.appointments[1].primaryCareText);\n\n              _this.setState({\n                loaded: false\n              });\n\n              setTimeout(function () {\n                _that.HideSplashScreen();\n              }, 2000);\n            } else {\n              _this.setState({\n                loaded: false\n              });\n\n              _reactNative.Alert.alert(reData.data.message);\n\n              setTimeout(function () {\n                _that.HideSplashScreen();\n              }, 2000);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n\n          _this.setState({\n            loaded: false\n          });\n\n          setTimeout(function () {\n            that.HideSplashScreen();\n          }, 100);\n\n          _reactNative.Alert.alert(error);\n        });\n      };\n\n      _this.HideSplashScreen = function () {\n        _this.setState({\n          isVisible: false\n        });\n      };\n\n      _this.goToHomeScreen = function () {\n        var isVisible = _this.state.isVisible;\n\n        if (isVisible === false) {\n          _reactNativeRouterFlux.Actions.AccountInfo({\n            userData: _this.state.dataUser,\n            telemedicine: _this.state.telemadicineOpen,\n            isFromVendor: true\n          });\n        }\n      };\n\n      _this.state = {\n        isVisible: true,\n        loaded: false,\n        url: '',\n        isApiCall: null,\n        appState: _reactNative.AppState.currentState\n      };\n      return _this;\n    }\n\n    _createClass(VendorSplash, [{\n      key: \"componentWillReceiveProps\",\n      value: function componentWillReceiveProps(customProps) {\n        this.callApiMethod();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        _reactNative.AppState.addEventListener('change', this._handleAppStateChange);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        _reactNative.AppState.removeEventListener('change', this._handleAppStateChange);\n      }\n    }, {\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        var version = _reactNativeDeviceInfo.default.getVersion();\n\n        this.callApiMethod();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$state = this.state,\n            url = _this$state.url,\n            loaded = _this$state.loaded;\n        return _react.default.createElement(_reactNative.SafeAreaView, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          }\n        }, _react.default.createElement(_reactNative.ImageBackground, {\n          style: styles.imgBackground,\n          resizeMode: \"cover\",\n          source: _$$_REQUIRE(_dependencyMap[8], '../../assets/splash-screen-bac.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.container_logo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          }\n        }, _react.default.createElement(_reactNative.Image, {\n          style: {\n            width: 210,\n            height: 63\n          },\n          source: {\n            uri: url\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          }\n        }), this.state.isApiCall === false ? _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          }\n        }, \"Please try again!!\") : null), _react.default.createElement(_reactNative.View, {\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            bottom: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: {\n            color: '#000'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          }\n        }, \"Patient Interactive v\", _reactNativeDeviceInfo.default.getVersion()))), this.goToHomeScreen(), _react.default.createElement(_reactNative.StatusBar, {\n          barStyle: \"light-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          }\n        }), _react.default.createElement(_OfflineNotice.default, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          }\n        })));\n      }\n    }]);\n\n    _inherits(VendorSplash, _React$Component);\n\n    return VendorSplash;\n  }(_react.default.Component);\n\n  VendorSplash = _wrapComponent(\"VendorSplash\")(VendorSplash);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      margin: 0,\n      padding: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    containerActivety: {\n      backgroundColor: 'transparent',\n      height: '100%',\n      width: '100%',\n      zIndex: 10000000,\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    container_logo: {\n      flex: 1,\n      padding: 10,\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginTop: 20\n    },\n    shadow1: {\n      marginBottom: 0,\n      padding: 0,\n      alignItems: 'center'\n    },\n    imgBackground: {\n      width: '100%',\n      height: '100%',\n      flex: 1\n    },\n    SplashScreen_RootView: {\n      flex: 1,\n      margin: 0,\n      position: 'absolute',\n      width: '100%',\n      height: '100%'\n    },\n    SplashScreen_ChildView: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    }\n  });\n\n  var _default2 = VendorSplash;\n  exports.default = _default2;\n});","map":[[7,0,1,1],[11,0,2,0],[13,0,3,0],[15,0,4,0],[17,0,5,0],[19,0,6,0],[21,0,7,0],[62,6,10,6,"VendorSplash"],[62,18],[63,0,12,4],[63,26,12,16,"props"],[63,31,12,4],[63,33,12,23],[64,0,12,23],[66,0,12,23],[68,0,13,8],[68,88,13,14,"props"],[68,93,13,8],[70,0,12,23],[70,12,39,3,"_handleAppStateChange"],[70,33,12,23],[70,36,39,27],[70,46,39,28,"nextAppState"],[70,58,39,27],[70,60,39,45],[71,0,40,7],[71,12,40,11],[71,18,40,16,"state"],[71,23,40,11],[71,24,40,22,"appState"],[71,32,40,11],[71,33,40,31,"match"],[71,38,40,11],[71,39,40,37],[71,60,40,11],[71,65,40,63,"nextAppState"],[71,82,40,80],[71,90,40,7],[71,92,40,90],[72,0,41,9,"console"],[72,18,41,17,"log"],[72,21,41,9],[72,22,41,21],[72,55,41,9],[74,0,42,9],[74,14,42,13,"Actions"],[74,45,42,21,"currentScene"],[74,57,42,13],[74,61,42,37],[74,75,42,9],[74,77,42,53],[75,0,43,15],[75,18,43,20,"callApiMethod"],[75,31,43,15],[76,0,44,10],[77,0,45,8],[78,0,47,6],[78,7,12,23],[80,0,12,23],[80,12,51,2,"callApiMethod"],[80,25,12,23],[80,28,51,18],[80,40,51,23],[81,0,52,4,"NetInfo"],[81,29,52,12,"isConnected"],[81,40,52,4],[81,41,52,24,"fetch"],[81,46,52,4],[81,49,52,32,"done"],[81,53,52,4],[81,54,52,37],[81,64,52,38,"isConnected"],[81,75,52,37],[81,77,52,54],[82,0,53,8],[82,14,53,12,"isConnected"],[82,25,53,8],[82,27,54,8],[83,0,55,12,"UserData"],[83,30,55,21,"retriveData"],[83,41,55,12],[83,42,55,33],[83,49,55,12],[83,51,55,42,"then"],[83,55,55,12],[83,56,55,47],[83,66,55,48,"res"],[83,69,55,47],[83,71,55,56],[84,0,56,16,"console"],[84,22,56,24,"log"],[84,25,56,16],[84,26,56,28,"res"],[84,29,56,16],[86,0,58,16],[86,20,58,21,"callAppDetails"],[86,34,58,16],[86,35,58,36,"res"],[86,38,58,16],[87,0,59,13],[87,13,55,12],[88,0,60,9],[88,11,53,8],[88,17,61,8],[88,18,63,9],[89,0,64,5],[89,9,52,4],[90,0,65,3],[90,7,12,23],[92,0,12,23],[92,12,75,4,"callAppDetails"],[92,26,12,23],[92,29,75,21],[92,39,75,22,"token"],[92,44,75,21],[92,46,75,32],[93,0,77,8],[93,14,77,13,"setState"],[93,22,77,8],[93,23,77,22],[94,0,77,23,"isApiCall"],[94,21,77,33],[95,0,77,22],[95,9,77,8],[97,0,78,8],[97,12,78,14,"arrAppointment"],[97,29,78,31],[97,31,78,8],[98,0,79,8,"console"],[98,16,79,16,"log"],[98,19,79,8],[98,20,79,20,"token"],[98,25,79,8],[100,0,80,8],[100,14,80,13,"setState"],[100,22,80,8],[100,23,80,22],[101,0,80,23,"loaded"],[101,18,80,31],[102,0,80,22],[102,9,80,8],[104,0,82,8,"ServiceClass"],[104,30,82,21,"appDetails"],[104,40,82,8],[104,41,82,32,"token"],[104,46,82,8],[104,48,82,39],[104,60,82,8],[104,62,82,53,"then"],[104,66,82,8],[104,67,82,58],[104,77,82,59,"reData"],[104,83,82,58],[104,85,82,70],[105,0,86,7],[105,14,86,12,"reData"],[105,21,86,19,"status"],[105,27,86,12],[105,32,86,30],[105,35,86,12],[105,39,86,37,"reData"],[105,46,86,44,"status"],[105,52,86,37],[105,57,86,55],[105,60,86,12],[105,64,86,62,"reData"],[105,71,86,69,"status"],[105,77,86,62],[105,82,86,80],[105,85,86,12],[105,89,86,87,"reData"],[105,96,86,94,"data"],[105,100,86,87],[105,105,86,103],[105,109,86,12],[105,113,86,111,"reData"],[105,120,86,118,"status"],[105,126,86,111],[105,131,86,129],[105,132,86,7],[105,134,86,132],[106,0,87,22],[106,16,87,26,"errorMsg"],[106,27,87,37,"response"],[106,36,87,46,"statusText"],[106,46,87,22],[107,0,88,22,"alert"],[107,18,88,28],[107,41,88,22],[108,0,89,22],[109,0,90,12],[109,11,86,7],[109,17,90,17],[110,0,92,25,"console"],[110,20,92,33,"log"],[110,23,92,25],[110,24,92,37,"reData"],[110,30,92,25],[112,0,93,25],[112,16,93,31,"that"],[112,77,93,25],[114,0,95,25],[114,16,95,29,"reData"],[114,23,95,36,"data"],[114,27,95,29],[114,28,95,41,"status"],[114,34,95,29],[114,39,95,52],[114,42,95,25],[114,44,95,57],[115,0,97,30,"console"],[115,22,97,38,"log"],[115,25,97,30],[115,26,97,42,"reData"],[115,33,97,49,"data"],[115,37,97,42],[115,38,97,54,"data"],[115,42,97,42],[115,43,97,59,"id"],[115,45,97,30],[116,0,98,29,"console"],[116,22,98,37,"log"],[116,25,98,29],[116,26,98,41,"reData"],[116,33,98,48,"data"],[116,37,98,41],[116,38,98,53,"data"],[116,42,98,41],[116,43,98,58,"siteDetails"],[116,54,98,41],[116,55,98,70],[116,56,98,41],[116,58,98,73,"logoUrl"],[116,65,98,29],[117,0,99,29,"console"],[117,22,99,37,"log"],[117,25,99,29],[117,26,99,41,"reData"],[117,33,99,48,"data"],[117,37,99,41],[117,38,99,53,"data"],[117,42,99,41],[117,43,99,58,"siteDetails"],[117,54,99,41],[117,55,99,70],[117,56,99,41],[117,58,99,73,"isTelemedicineEnable"],[117,78,99,29],[119,0,100,29],[119,20,100,34,"setState"],[119,28,100,29],[119,29,100,43],[120,0,100,44,"dataUser"],[120,26,100,54,"reData"],[120,33,100,61,"data"],[120,37,100,54],[120,38,100,66,"data"],[120,42,100,54],[120,43,100,71,"users"],[121,0,100,43],[121,15,100,29],[123,0,101,29],[123,20,101,34,"setState"],[123,28,101,29],[123,29,101,43],[124,0,101,44,"url"],[124,21,101,49,"reData"],[124,28,101,56,"data"],[124,32,101,49],[124,33,101,61,"data"],[124,37,101,49],[124,38,101,66,"siteDetails"],[124,49,101,49],[124,50,101,78],[124,51,101,49],[124,53,101,81,"logoUrl"],[125,0,101,43],[125,15,101,29],[127,0,103,29],[127,18,103,33,"isTelemedicineEnable"],[127,41,103,56,"reData"],[127,48,103,63,"data"],[127,52,103,56],[127,53,103,68,"data"],[127,57,103,56],[127,58,103,73,"siteDetails"],[127,69,103,56],[127,70,103,85],[127,71,103,56],[127,73,103,88,"hasOwnProperty"],[127,87,103,56],[127,88,103,103],[127,110,103,56],[127,111,103,29],[129,0,104,29],[129,18,104,33,"isTelemedicineEnable"],[129,43,104,58],[129,47,104,29],[129,49,104,63],[130,0,106,33],[130,20,106,37],[131,0,107,37,"AsyncStorage"],[131,44,107,50,"setItem"],[131,51,107,37],[131,52,107,58],[131,74,107,37],[131,76,107,82,"reData"],[131,83,107,89,"data"],[131,87,107,82],[131,88,107,94,"data"],[131,92,107,82],[131,93,107,99,"siteDetails"],[131,104,107,82],[131,105,107,111],[131,106,107,82],[131,108,107,114,"isTelemedicineEnable"],[131,128,107,82],[131,129,107,135,"toString"],[131,137,107,82],[131,139,107,37],[132,0,108,34],[132,17,106,33],[132,18,108,35],[132,25,108,42,"error"],[132,30,108,35],[132,32,108,49],[132,33,110,34],[133,0,113,30],[135,0,115,33,"UserData"],[135,32,115,42,"saveData"],[135,40,115,33],[135,41,115,51],[135,51,115,33],[135,53,115,63,"reData"],[135,60,115,70,"data"],[135,64,115,63],[135,65,115,75,"data"],[135,69,115,63],[135,70,115,80,"users"],[135,75,115,63],[135,76,115,86],[135,77,115,63],[135,79,115,89,"ID"],[135,81,115,63],[135,82,115,92,"toString"],[135,90,115,63],[135,92,115,33],[137,0,118,29],[137,19,118,34],[137,23,118,38,"item"],[137,27,118,29],[137,31,118,46,"reData"],[137,38,118,53,"data"],[137,42,118,46],[137,43,118,58,"data"],[137,47,118,46],[137,48,118,63,"appointments"],[137,60,118,46],[137,61,118,76],[137,62,118,46],[137,64,118,79,"type"],[137,68,118,29],[137,70,118,85],[138,0,119,33,"console"],[138,24,119,41,"log"],[138,27,119,33],[138,28,119,45,"reData"],[138,35,119,52,"data"],[138,39,119,45],[138,40,119,57,"data"],[138,44,119,45],[138,45,119,62,"appointments"],[138,57,119,45],[138,58,119,75],[138,59,119,45],[138,61,119,78,"type"],[138,65,119,45],[138,66,119,83,"item"],[138,70,119,45],[138,71,119,33],[139,0,120,33,"arrAppointment"],[139,31,120,48,"push"],[139,35,120,33],[139,36,120,53],[140,0,121,37,"label"],[140,25,121,44,"reData"],[140,32,121,51,"data"],[140,36,121,44],[140,37,121,56,"data"],[140,41,121,44],[140,42,121,61,"appointments"],[140,54,121,44],[140,55,121,74],[140,56,121,44],[140,58,121,77,"type"],[140,62,121,44],[140,63,121,82,"item"],[140,67,121,44],[140,68,120,53],[141,0,122,37,"value"],[141,25,122,44,"reData"],[141,32,122,51,"data"],[141,36,122,44],[141,37,122,56,"data"],[141,41,122,44],[141,42,122,61,"appointments"],[141,54,122,44],[141,55,122,74],[141,56,122,44],[141,58,122,77,"type"],[141,62,122,44],[141,63,122,82,"item"],[141,67,122,44],[142,0,120,53],[142,17,120,33],[143,0,124,30],[145,0,125,29],[145,18,125,33],[146,0,126,33,"AsyncStorage"],[146,42,126,46,"setItem"],[146,49,126,33],[146,50,126,54],[146,67,126,33],[146,69,126,73,"JSON"],[146,74,126,78,"stringify"],[146,83,126,73],[146,84,126,88,"arrAppointment"],[146,98,126,73],[146,99,126,33],[147,0,127,30],[147,15,125,29],[147,16,127,31],[147,23,127,38,"error"],[147,28,127,31],[147,30,127,45],[147,31,129,30],[149,0,130,29],[149,18,130,33],[150,0,131,33,"AsyncStorage"],[150,42,131,46,"setItem"],[150,49,131,33],[150,50,131,54],[150,64,131,33],[150,66,131,70,"JSON"],[150,71,131,75,"stringify"],[150,80,131,70],[150,81,131,85,"reData"],[150,88,131,92,"data"],[150,92,131,85],[150,93,131,97,"data"],[150,97,131,85],[150,98,131,102,"users"],[150,103,131,70],[150,104,131,33],[151,0,132,33],[151,15,130,29],[151,16,133,29],[151,23,133,36,"error"],[151,28,133,29],[151,30,133,43],[151,31,134,33],[153,0,137,29,"UserData"],[153,32,137,38,"saveData"],[153,40,137,29],[153,41,137,47],[153,54,137,29],[153,56,137,62,"reData"],[153,63,137,69,"data"],[153,67,137,62],[153,68,137,74,"data"],[153,72,137,62],[153,73,137,79,"appointments"],[153,85,137,62],[153,86,137,92],[153,87,137,62],[153,89,137,95,"primaryCareText"],[153,104,137,29],[155,0,141,29],[155,20,141,34,"setState"],[155,28,141,29],[155,29,141,43],[156,0,141,44,"loaded"],[156,24,141,52],[157,0,141,43],[157,15,141,29],[159,0,142,29,"setTimeout"],[159,25,142,40],[159,37,142,46],[160,0,143,33,"that"],[160,22,143,38,"HideSplashScreen"],[160,38,143,33],[161,0,144,30],[161,15,142,29],[161,17,144,32],[161,21,142,29],[162,0,145,26],[162,13,95,25],[162,19,145,32],[163,0,146,29],[163,20,146,34,"setState"],[163,28,146,29],[163,29,146,43],[164,0,146,44,"loaded"],[164,24,146,52],[165,0,146,43],[165,15,146,29],[167,0,147,29,"Alert"],[167,33,147,35,"alert"],[167,38,147,29],[167,39,147,41,"reData"],[167,46,147,48,"data"],[167,50,147,41],[167,51,147,53,"message"],[167,58,147,29],[169,0,149,29,"setTimeout"],[169,25,149,40],[169,37,149,46],[170,0,150,33,"that"],[170,22,150,38,"HideSplashScreen"],[170,38,150,33],[171,0,151,30],[171,15,149,29],[171,17,151,32],[171,21,149,29],[172,0,152,26],[173,0,153,20],[174,0,157,9],[174,9,82,8],[174,11,157,11,"catch"],[174,16,82,8],[174,17,157,17],[174,27,157,18,"error"],[174,32,157,17],[174,34,157,28],[175,0,159,12,"console"],[175,18,159,20,"log"],[175,21,159,12],[175,22,159,24,"error"],[175,27,159,12],[177,0,160,12],[177,16,160,17,"setState"],[177,24,160,12],[177,25,160,26],[178,0,160,27,"loaded"],[178,20,160,35],[179,0,160,26],[179,11,160,12],[181,0,161,12,"setTimeout"],[181,21,161,23],[181,33,161,29],[182,0,162,16,"that"],[182,17,162,21,"HideSplashScreen"],[182,33,162,16],[183,0,163,13],[183,11,161,12],[183,13,163,15],[183,16,161,12],[185,0,164,12,"Alert"],[185,29,164,18,"alert"],[185,34,164,12],[185,35,164,24,"error"],[185,40,164,12],[186,0,165,9],[186,9,82,8],[187,0,166,5],[187,7,12,23],[189,0,12,23],[189,12,167,4,"HideSplashScreen"],[189,28,12,23],[189,31,167,23],[189,43,167,29],[190,0,168,8],[190,14,168,13,"setState"],[190,22,168,8],[190,23,168,22],[191,0,169,12,"isVisible"],[191,21,169,23],[192,0,168,22],[192,9,168,8],[193,0,172,5],[193,7,12,23],[195,0,12,23],[195,12,173,4,"goToHomeScreen"],[195,26,12,23],[195,29,173,21],[195,41,173,27],[196,0,173,27],[196,12,175,12,"isVisible"],[196,21,173,27],[196,24,177,12],[196,30,177,17,"state"],[196,35,173,27],[196,36,175,12,"isVisible"],[196,45,173,27],[198,0,178,8],[198,12,178,12,"isVisible"],[198,26,178,26],[198,31,178,8],[198,33,178,33],[199,0,180,12,"Actions"],[199,41,180,20,"AccountInfo"],[199,52,180,12],[199,53,180,32],[200,0,180,34,"userData"],[200,22,180,44],[200,28,180,49,"state"],[200,33,180,44],[200,34,180,55,"dataUser"],[200,42,180,32],[201,0,180,65,"telemedicine"],[201,26,180,78],[201,32,180,83,"state"],[201,37,180,78],[201,38,180,89,"telemadicineOpen"],[201,54,180,32],[202,0,180,106,"isFromVendor"],[202,26,180,119],[203,0,180,32],[203,11,180,12],[204,0,183,9],[205,0,184,5],[205,7,12,23],[207,0,14,8],[207,12,14,13,"state"],[207,17,14,8],[207,20,14,21],[208,0,15,12,"isVisible"],[208,19,15,23],[208,23,14,21],[209,0,16,12,"loaded"],[209,16,16,20],[209,21,14,21],[210,0,17,12,"url"],[210,13,17,17],[210,15,14,21],[211,0,18,12,"isApiCall"],[211,19,18,23],[211,23,14,21],[212,0,19,12,"appState"],[212,18,19,22,"AppState"],[212,40,19,31,"currentState"],[213,0,14,21],[213,7,14,8],[214,0,12,23],[215,0,21,5],[219,48,23,30,"customProps"],[219,59],[219,61,23,42],[220,0,25,12],[220,13,25,17,"callApiMethod"],[220,26,25,12],[221,0,27,5],[224,42,29,24],[225,0,31,6,"AppState"],[225,30,31,15,"addEventListener"],[225,46,31,6],[225,47,31,32],[225,55,31,6],[225,57,31,42],[225,62,31,47,"_handleAppStateChange"],[225,83,31,6],[226,0,32,3],[229,45,34,25],[230,0,35,5,"AppState"],[230,30,35,14,"removeEventListener"],[230,49,35,5],[230,50,35,34],[230,58,35,5],[230,60,35,44],[230,65,35,49,"_handleAppStateChange"],[230,86,35,5],[231,0,36,4],[234,43,68,25],[235,0,69,6],[235,12,69,10,"version"],[235,22,69,21,"DeviceInfo"],[235,53,69,32,"getVersion"],[235,63,69,21],[235,65,69,6],[237,0,71,8],[237,13,71,13,"callApiMethod"],[237,26,71,8],[238,0,73,6],[241,31,186,13],[242,0,186,13],[242,26,190,12],[242,31,190,17,"state"],[242,36,186,13],[243,0,186,13],[243,12,188,12,"url"],[243,15,186,13],[243,30,188,12,"url"],[243,33,186,13],[244,0,186,13],[244,12,189,12,"loaded"],[244,18,186,13],[244,33,189,12,"loaded"],[244,39,186,13],[245,0,192,8],[245,15,193,10],[245,44,193,11],[245,69,193,10],[246,0,193,24],[246,17,193,31],[247,0,193,32,"flex"],[247,18,193,37],[248,0,193,31],[248,11,193,10],[249,0,193,10],[250,0,193,10],[251,0,193,10],[252,0,193,10],[253,0,193,10],[253,11,194,16],[253,40,194,17],[253,57,194,16],[254,0,194,22],[254,17,194,29,"styles"],[254,24,194,36,"container"],[254,33,194,16],[255,0,194,16],[256,0,194,16],[257,0,194,16],[258,0,194,16],[259,0,194,16],[259,11,197,20],[259,40,197,21],[259,68,197,20],[260,0,198,24],[260,17,198,31,"styles"],[260,24,198,38,"imgBackground"],[260,37,197,20],[261,0,199,24],[261,22,199,35],[261,29,197,20],[262,0,200,24],[262,18,200,32,"require"],[262,49,200,40],[262,85,200,32],[262,86,197,20],[263,0,197,20],[264,0,197,20],[265,0,197,20],[266,0,197,20],[267,0,197,20],[267,11,201,24],[267,40,201,25],[267,57,201,24],[268,0,201,30],[268,17,201,37,"styles"],[268,24,201,44,"container_logo"],[268,38,201,24],[269,0,201,24],[270,0,201,24],[271,0,201,24],[272,0,201,24],[273,0,201,24],[273,11,202,28],[273,40,202,29],[273,58,202,28],[274,0,203,32],[274,17,203,39],[275,0,203,40,"width"],[275,19,203,47],[275,22,203,39],[276,0,203,52,"height"],[276,20,203,60],[277,0,203,39],[277,11,202,28],[278,0,204,32],[278,18,204,40],[279,0,205,28,"uri"],[279,17,205,33,"url"],[280,0,204,40],[280,11,202,28],[281,0,202,28],[282,0,202,28],[283,0,202,28],[284,0,202,28],[285,0,202,28],[285,10,201,24],[285,12,214,31],[285,17,214,36,"state"],[285,22,214,31],[285,23,214,42,"isApiCall"],[285,32,214,31],[285,37,214,56],[285,42,214,30],[285,45,214,65],[285,74,214,66],[285,91,214,65],[286,0,214,65],[287,0,214,65],[288,0,214,65],[289,0,214,65],[290,0,214,65],[290,32,214,30],[290,35,214,99],[290,39,201,24],[290,40,197,20],[290,42,217,24],[290,71,217,25],[290,88,217,24],[291,0,217,30],[291,17,217,37],[292,0,217,38,"justifyContent"],[292,28,217,53],[292,36,217,37],[293,0,217,62,"alignItems"],[293,24,217,73],[293,32,217,37],[294,0,217,82,"bottom"],[294,20,217,89],[295,0,217,37],[295,11,217,24],[296,0,217,24],[297,0,217,24],[298,0,217,24],[299,0,217,24],[300,0,217,24],[300,11,217,93],[300,40,217,94],[300,57,217,93],[301,0,217,99],[301,17,217,106],[302,0,217,107,"color"],[302,19,217,113],[303,0,217,106],[303,11,217,93],[304,0,217,93],[305,0,217,93],[306,0,217,93],[307,0,217,93],[308,0,217,93],[308,36,217,144,"DeviceInfo"],[308,67,217,155,"getVersion"],[308,77,217,144],[308,79,217,93],[308,80,217,24],[308,81,197,20],[308,82,194,16],[308,84,220,21],[308,89,220,26,"goToHomeScreen"],[308,103,220,21],[308,105,194,16],[308,107,221,20],[308,136,221,21],[308,158,221,20],[309,0,223,24],[309,20,223,33],[309,35,221,20],[310,0,221,20],[311,0,221,20],[312,0,221,20],[313,0,221,20],[314,0,221,20],[314,10,194,16],[314,12,226,20],[314,41,226,21],[314,63,226,20],[315,0,226,20],[316,0,226,20],[317,0,226,20],[318,0,226,20],[319,0,226,20],[319,10,194,16],[319,11,193,10],[319,12,192,8],[320,0,231,17],[326,4,10,27,"React"],[326,19,10,33,"Component"],[326,28],[330,0,233,12],[330,6,233,18,"styles"],[330,15,233,27,"StyleSheet"],[330,39,233,38,"create"],[330,45,233,27],[330,46,233,45],[331,0,235,16,"container"],[331,15,235,27],[332,0,236,20,"flex"],[332,12,236,26],[332,13,235,27],[333,0,237,20,"margin"],[333,14,237,28],[333,15,235,27],[334,0,238,20,"padding"],[334,15,238,29],[334,16,235,27],[335,0,239,20,"alignItems"],[335,18,239,32],[335,26,235,27],[336,0,240,20,"justifyContent"],[336,22,240,36],[337,0,235,27],[337,5,233,45],[338,0,243,16,"containerActivety"],[338,23,243,35],[339,0,245,20,"backgroundColor"],[339,23,245,37],[339,36,243,35],[340,0,246,20,"height"],[340,14,246,28],[340,20,243,35],[341,0,247,20,"width"],[341,13,247,27],[341,19,243,35],[342,0,248,20,"zIndex"],[342,14,248,28],[342,22,243,35],[343,0,249,20,"position"],[343,16,249,30],[343,26,243,35],[344,0,250,20,"justifyContent"],[344,22,250,36],[344,30,243,35],[345,0,251,20,"alignItems"],[345,18,251,32],[346,0,243,35],[346,5,233,45],[347,0,254,16,"container_logo"],[347,20,254,32],[348,0,255,20,"flex"],[348,12,255,26],[348,13,254,32],[349,0,256,20,"padding"],[349,15,256,29],[349,17,254,32],[350,0,257,20,"alignItems"],[350,18,257,32],[350,26,254,32],[351,0,258,20,"justifyContent"],[351,22,258,36],[351,30,254,32],[352,0,259,20,"marginTop"],[352,17,259,31],[353,0,254,32],[353,5,233,45],[354,0,262,16,"shadow1"],[354,13,262,25],[355,0,264,20,"marginBottom"],[355,20,264,34],[355,21,262,25],[356,0,265,20,"padding"],[356,15,265,29],[356,16,262,25],[357,0,266,20,"alignItems"],[357,18,266,32],[358,0,262,25],[358,5,233,45],[359,0,269,16,"imgBackground"],[359,19,269,31],[360,0,270,20,"width"],[360,13,270,27],[360,19,269,31],[361,0,271,20,"height"],[361,14,271,28],[361,20,269,31],[362,0,273,20,"flex"],[362,12,273,26],[363,0,269,31],[363,5,233,45],[364,0,277,16,"SplashScreen_RootView"],[364,27,278,24],[365,0,279,28,"flex"],[365,12,279,34],[365,13,278,24],[366,0,280,28,"margin"],[366,14,280,36],[366,15,278,24],[367,0,281,28,"position"],[367,16,281,38],[367,26,278,24],[368,0,282,28,"width"],[368,13,282,35],[368,19,278,24],[369,0,283,28,"height"],[369,14,283,36],[370,0,278,24],[370,5,233,45],[371,0,286,16,"SplashScreen_ChildView"],[371,28,287,24],[372,0,288,28,"justifyContent"],[372,22,288,44],[372,30,287,24],[373,0,289,28,"alignItems"],[373,18,289,40],[373,26,287,24],[374,0,291,28,"flex"],[374,12,291,34],[375,0,287,24],[376,0,233,45],[376,3,233,27],[376,4,233,12],[378,18,297,27,"VendorSplash"],[378,30]]},"type":"js/module"}]}