{"dependencies":[{"name":"./fsmIterator","isAsync":false},{"name":"../io","isAsync":false},{"name":"../channel","isAsync":false},{"name":"../buffers","isAsync":false},{"name":"../utils","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  exports.__esModule = true;\n  exports.default = throttle;\n\n  var _fsmIterator = _$$_REQUIRE(_dependencyMap[0], './fsmIterator');\n\n  var _fsmIterator2 = _interopRequireDefault(_fsmIterator);\n\n  var _io = _$$_REQUIRE(_dependencyMap[1], '../io');\n\n  var _channel = _$$_REQUIRE(_dependencyMap[2], '../channel');\n\n  var _buffers = _$$_REQUIRE(_dependencyMap[3], '../buffers');\n\n  var _utils = _$$_REQUIRE(_dependencyMap[4], '../utils');\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function throttle(delayLength, pattern, worker) {\n    for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      args[_key - 3] = arguments[_key];\n    }\n\n    var action = void 0,\n        channel = void 0;\n    var yActionChannel = {\n      done: false,\n      value: (0, _io.actionChannel)(pattern, _buffers.buffers.sliding(1))\n    };\n\n    var yTake = function yTake() {\n      return {\n        done: false,\n        value: (0, _io.take)(channel)\n      };\n    };\n\n    var yFork = function yFork(ac) {\n      return {\n        done: false,\n        value: _io.fork.apply(undefined, [worker].concat(args, [ac]))\n      };\n    };\n\n    var yDelay = {\n      done: false,\n      value: (0, _io.call)(_utils.delay, delayLength)\n    };\n\n    var setAction = function setAction(ac) {\n      return action = ac;\n    };\n\n    var setChannel = function setChannel(ch) {\n      return channel = ch;\n    };\n\n    return (0, _fsmIterator2.default)({\n      q1: function q1() {\n        return ['q2', yActionChannel, setChannel];\n      },\n      q2: function q2() {\n        return ['q3', yTake(), setAction];\n      },\n      q3: function q3() {\n        return action === _channel.END ? [_fsmIterator.qEnd] : ['q4', yFork(action)];\n      },\n      q4: function q4() {\n        return ['q2', yDelay];\n      }\n    }, 'q1', 'throttle(' + (0, _fsmIterator.safeName)(pattern) + ', ' + worker.name + ')');\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"exports"],[4,10,3,8,"__esModule"],[4,20,3,0],[4,23,3,21],[4,27,3,0],[5,0,4,0,"exports"],[5,10,4,8,"default"],[5,17,4,0],[5,20,4,18,"throttle"],[5,28,4,0],[7,0,6,0],[7,6,6,4,"_fsmIterator"],[7,21,6,19,"require"],[7,52,6,27],[7,67,6,19],[7,68,6,0],[9,0,8,0],[9,6,8,4,"_fsmIterator2"],[9,22,8,20,"_interopRequireDefault"],[9,45,8,43,"_fsmIterator"],[9,57,8,20],[9,58,8,0],[11,0,10,0],[11,6,10,4,"_io"],[11,12,10,10,"require"],[11,43,10,18],[11,50,10,10],[11,51,10,0],[13,0,12,0],[13,6,12,4,"_channel"],[13,17,12,15,"require"],[13,48,12,23],[13,60,12,15],[13,61,12,0],[15,0,14,0],[15,6,14,4,"_buffers"],[15,17,14,15,"require"],[15,48,14,23],[15,60,14,15],[15,61,14,0],[17,0,16,0],[17,6,16,4,"_utils"],[17,15,16,13,"require"],[17,46,16,21],[17,56,16,13],[17,57,16,0],[19,0,18,0],[19,11,18,9,"_interopRequireDefault"],[19,33,18,0],[19,34,18,32,"obj"],[19,37,18,0],[19,39,18,37],[20,0,18,39],[20,11,18,46,"obj"],[20,18,18,53,"obj"],[20,22,18,57,"__esModule"],[20,32,18,46],[20,35,18,70,"obj"],[20,38,18,46],[20,41,18,76],[21,0,18,78,"default"],[21,15,18,87,"obj"],[22,0,18,76],[22,5,18,39],[23,0,18,95],[25,0,20,0],[25,11,20,9,"throttle"],[25,19,20,0],[25,20,20,18,"delayLength"],[25,31,20,0],[25,33,20,31,"pattern"],[25,40,20,0],[25,42,20,40,"worker"],[25,48,20,0],[25,50,20,48],[26,0,21,2],[26,9,21,7],[26,13,21,11,"_len"],[26,20,21,18,"arguments"],[26,30,21,28,"length"],[26,36,21,7],[26,38,21,36,"args"],[26,45,21,43,"Array"],[26,51,21,49,"_len"],[26,58,21,56],[26,59,21,49],[26,62,21,60,"_len"],[26,69,21,67],[26,70,21,49],[26,73,21,71],[26,74,21,43],[26,75,21,7],[26,77,21,75,"_key"],[26,84,21,82],[26,85,21,2],[26,87,21,85,"_key"],[26,94,21,92,"_len"],[26,98,21,2],[26,100,21,98,"_key"],[26,106,21,2],[26,108,21,106],[27,0,22,4,"args"],[27,11,22,9,"_key"],[27,18,22,16],[27,19,22,4],[27,23,22,21,"arguments"],[27,33,22,31,"_key"],[27,37,22,21],[27,38,22,4],[28,0,23,3],[30,0,25,2],[30,8,25,6,"action"],[30,17,25,15],[30,22,25,20],[30,23,25,2],[31,0,25,2],[31,8,26,6,"channel"],[31,18,26,16],[31,23,26,21],[31,24,25,2],[32,0,28,2],[32,8,28,6,"yActionChannel"],[32,25,28,23],[33,0,28,25,"done"],[33,12,28,31],[33,17,28,23],[34,0,28,38,"value"],[34,13,28,45],[34,14,28,46],[34,17,28,49,"_io"],[34,21,28,53,"actionChannel"],[34,34,28,45],[34,36,28,68,"pattern"],[34,43,28,45],[34,45,28,77,"_buffers"],[34,54,28,86,"buffers"],[34,61,28,77],[34,62,28,94,"sliding"],[34,69,28,77],[34,70,28,102],[34,71,28,77],[34,72,28,45],[35,0,28,23],[35,5,28,2],[37,0,29,2],[37,8,29,6,"yTake"],[37,16,29,14],[37,25,29,23,"yTake"],[37,30,29,14],[37,33,29,31],[38,0,30,4],[38,13,30,11],[39,0,30,13,"done"],[39,14,30,19],[39,19,30,11],[40,0,30,26,"value"],[40,15,30,33],[40,16,30,34],[40,19,30,37,"_io"],[40,23,30,41,"take"],[40,27,30,33],[40,29,30,47,"channel"],[40,36,30,33],[41,0,30,11],[41,7,30,4],[42,0,31,3],[42,5,29,2],[44,0,32,2],[44,8,32,6,"yFork"],[44,16,32,14],[44,25,32,23,"yFork"],[44,30,32,14],[44,31,32,29,"ac"],[44,33,32,14],[44,35,32,33],[45,0,33,4],[45,13,33,11],[46,0,33,13,"done"],[46,14,33,19],[46,19,33,11],[47,0,33,26,"value"],[47,15,33,33,"_io"],[47,19,33,37,"fork"],[47,23,33,33],[47,24,33,42,"apply"],[47,29,33,33],[47,30,33,48,"undefined"],[47,39,33,33],[47,41,33,59],[47,42,33,60,"worker"],[47,48,33,59],[47,50,33,68,"concat"],[47,56,33,59],[47,57,33,75,"args"],[47,61,33,59],[47,63,33,81],[47,64,33,82,"ac"],[47,66,33,81],[47,67,33,59],[47,68,33,33],[48,0,33,11],[48,7,33,4],[49,0,34,3],[49,5,32,2],[51,0,35,2],[51,8,35,6,"yDelay"],[51,17,35,15],[52,0,35,17,"done"],[52,12,35,23],[52,17,35,15],[53,0,35,30,"value"],[53,13,35,37],[53,14,35,38],[53,17,35,41,"_io"],[53,21,35,45,"call"],[53,25,35,37],[53,27,35,51,"_utils"],[53,34,35,58,"delay"],[53,39,35,37],[53,41,35,65,"delayLength"],[53,52,35,37],[54,0,35,15],[54,5,35,2],[56,0,37,2],[56,8,37,6,"setAction"],[56,20,37,18],[56,29,37,27,"setAction"],[56,38,37,18],[56,39,37,37,"ac"],[56,41,37,18],[56,43,37,41],[57,0,38,4],[57,13,38,11,"action"],[57,22,38,20,"ac"],[57,24,38,4],[58,0,39,3],[58,5,37,2],[60,0,40,2],[60,8,40,6,"setChannel"],[60,21,40,19],[60,30,40,28,"setChannel"],[60,40,40,19],[60,41,40,39,"ch"],[60,43,40,19],[60,45,40,43],[61,0,41,4],[61,13,41,11,"channel"],[61,23,41,21,"ch"],[61,25,41,4],[62,0,42,3],[62,5,40,2],[64,0,44,2],[64,11,44,9],[64,12,44,10],[64,15,44,13,"_fsmIterator2"],[64,29,44,27,"default"],[64,36,44,9],[64,38,44,36],[65,0,45,4,"q1"],[65,10,45,8],[65,19,45,17,"q1"],[65,21,45,8],[65,24,45,22],[66,0,46,6],[66,15,46,13],[66,16,46,14],[66,20,46,13],[66,22,46,20,"yActionChannel"],[66,36,46,13],[66,38,46,36,"setChannel"],[66,48,46,13],[66,49,46,6],[67,0,47,5],[67,7,44,36],[68,0,48,4,"q2"],[68,10,48,8],[68,19,48,17,"q2"],[68,21,48,8],[68,24,48,22],[69,0,49,6],[69,15,49,13],[69,16,49,14],[69,20,49,13],[69,22,49,20,"yTake"],[69,29,49,13],[69,31,49,29,"setAction"],[69,40,49,13],[69,41,49,6],[70,0,50,5],[70,7,44,36],[71,0,51,4,"q3"],[71,10,51,8],[71,19,51,17,"q3"],[71,21,51,8],[71,24,51,22],[72,0,52,6],[72,15,52,13,"action"],[72,26,52,24,"_channel"],[72,35,52,33,"END"],[72,38,52,13],[72,41,52,39],[72,42,52,40,"_fsmIterator"],[72,55,52,53,"qEnd"],[72,59,52,39],[72,60,52,13],[72,63,52,61],[72,64,52,62],[72,68,52,61],[72,70,52,68,"yFork"],[72,76,52,74,"action"],[72,82,52,68],[72,83,52,61],[72,84,52,6],[73,0,53,5],[73,7,44,36],[74,0,54,4,"q4"],[74,10,54,8],[74,19,54,17,"q4"],[74,21,54,8],[74,24,54,22],[75,0,55,6],[75,15,55,13],[75,16,55,14],[75,20,55,13],[75,22,55,20,"yDelay"],[75,28,55,13],[75,29,55,6],[76,0,56,5],[77,0,44,36],[77,5,44,9],[77,7,57,5],[77,11,44,9],[77,13,57,11],[77,27,57,25],[77,28,57,26],[77,31,57,29,"_fsmIterator"],[77,44,57,42,"safeName"],[77,52,57,25],[77,54,57,52,"pattern"],[77,61,57,25],[77,62,57,11],[77,65,57,63],[77,69,57,11],[77,72,57,70,"worker"],[77,79,57,77,"name"],[77,83,57,11],[77,86,57,84],[77,89,44,9],[77,90,44,2],[78,0,58,1]]},"type":"js/module"}]}