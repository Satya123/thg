{"dependencies":[{"name":"react","isAsync":false},{"name":"./../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"prop-types","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"prop-types\"));\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/var/www/html/thg/node_modules/react-native-pdf/DoubleTapView.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    DoubleTapView: {\n      displayName: \"DoubleTapView\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/var/www/html/thg/node_modules/react-native-pdf/DoubleTapView.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DoubleTapView = _wrapComponent(\"DoubleTapView\")((_temp = _class = function (_Component) {\n    function DoubleTapView() {\n      var _this;\n\n      _classCallCheck(this, DoubleTapView);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(DoubleTapView).call(this));\n\n      _this.distance = function (x0, y0, x1, y1) {\n        return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)).toFixed(1);\n      };\n\n      _this.isDoubleTap = function (currentTouchTimeStamp, _ref) {\n        var x0 = _ref.x0,\n            y0 = _ref.y0;\n        var _this$prevTouchInfo = _this.prevTouchInfo,\n            prevTouchX = _this$prevTouchInfo.prevTouchX,\n            prevTouchY = _this$prevTouchInfo.prevTouchY,\n            prevTouchTimeStamp = _this$prevTouchInfo.prevTouchTimeStamp;\n        var dt = currentTouchTimeStamp - prevTouchTimeStamp;\n        var _this$props = _this.props,\n            delay = _this$props.delay,\n            radius = _this$props.radius;\n        return prevTouchTimeStamp > 0 && dt < delay && _this.distance(prevTouchX, prevTouchY, x0, y0) < radius;\n      };\n\n      _this.handlePanResponderRelease = function (evt, gestureState) {\n        var currentTouchTimeStamp = Date.now();\n\n        if (_this.timer) {\n          if (_this.isDoubleTap(currentTouchTimeStamp, gestureState)) {\n            clearTimeout(_this.timer);\n            _this.timer = null;\n\n            _this.props.onDoubleTap();\n          } else {\n            var _this$prevTouchInfo2 = _this.prevTouchInfo,\n                prevTouchX = _this$prevTouchInfo2.prevTouchX,\n                prevTouchY = _this$prevTouchInfo2.prevTouchY,\n                prevTouchTimeStamp = _this$prevTouchInfo2.prevTouchTimeStamp;\n            var radius = _this.props.radius;\n\n            if (_this.distance(prevTouchX, prevTouchY, gestureState.x0, gestureState.y0) < radius) {\n              _this.timer = null;\n\n              _this.props.onSingleTap();\n            }\n          }\n        } else {\n          if (_this.distance(0, gestureState.dx, 0, gestureState.dy) < 10) {\n            _this.timer = setTimeout(function () {\n              _this.props.onSingleTap();\n\n              _this.timer = null;\n            }, _this.props.delay);\n          }\n        }\n\n        _this.prevTouchInfo = {\n          prevTouchX: gestureState.x0,\n          prevTouchY: gestureState.y0,\n          prevTouchTimeStamp: currentTouchTimeStamp\n        };\n      };\n\n      _this.gestureHandlers = {};\n      _this.prevTouchInfo = {\n        prevTouchX: 0,\n        prevTouchY: 0,\n        prevTouchTimeStamp: 0\n      };\n      _this.timer = null;\n      return _this;\n    }\n\n    _createClass(DoubleTapView, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        this.gestureHandlers = _reactNative.PanResponder.create({\n          onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n            return gestureState.numberActiveTouches === 1;\n          },\n          onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture(evt, gestureState) {\n            return gestureState.numberActiveTouches === 1;\n          },\n          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n            return false;\n          },\n          onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture(evt, gestureState) {\n            return false;\n          },\n          onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n            return false;\n          },\n          onPanResponderRelease: this.handlePanResponderRelease\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return _react.default.createElement(_reactNative.View, _extends({}, this.props, this.gestureHandlers.panHandlers, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          }\n        }), this.props.children);\n      }\n    }]);\n\n    _inherits(DoubleTapView, _Component);\n\n    return DoubleTapView;\n  }(_react.Component), _class.propTypes = _objectSpread({}, _reactNative.ViewPropTypes, {\n    delay: _propTypes.default.number,\n    radius: _propTypes.default.number,\n    onSingleTap: _propTypes.default.func,\n    onDoubleTap: _propTypes.default.func\n  }), _class.defaultProps = {\n    delay: 300,\n    radius: 50,\n    onSingleTap: function onSingleTap() {},\n    onDoubleTap: function onDoubleTap() {}\n  }, _temp));\n\n  var _default2 = DoubleTapView;\n  exports.default = _default2;\n});","map":[[2,0,9,0],[9,0,10,0],[13,0,11,0],[15,0,16,0],[67,0,37,4],[67,29,37,18],[68,0,37,18],[70,0,37,18],[72,0,38,8],[74,0,37,18],[74,12,64,4,"distance"],[74,20,37,18],[74,23,64,15],[74,33,64,16,"x0"],[74,35,64,15],[74,37,64,20,"y0"],[74,39,64,15],[74,41,64,24,"x1"],[74,43,64,15],[74,45,64,28,"y1"],[74,47,64,15],[74,49,64,35],[75,0,65,8],[75,15,65,15,"Math"],[75,20,65,20,"sqrt"],[75,24,65,15],[75,25,65,25,"Math"],[75,30,65,30,"pow"],[75,33,65,25],[75,34,65,35,"x1"],[75,39,65,40,"x0"],[75,41,65,25],[75,43,65,45],[75,44,65,25],[75,48,65,50,"Math"],[75,53,65,55,"pow"],[75,56,65,50],[75,57,65,60,"y1"],[75,62,65,65,"y0"],[75,64,65,50],[75,66,65,70],[75,67,65,50],[75,68,65,15],[75,70,65,74,"toFixed"],[75,77,65,15],[75,78,65,82],[75,79,65,15],[75,80,65,8],[76,0,66,5],[76,7,37,18],[78,0,37,18],[78,12,68,4,"isDoubleTap"],[78,23,37,18],[78,26,68,18],[78,36,68,19,"currentTouchTimeStamp"],[78,57,68,18],[78,65,68,55],[79,0,68,55],[79,12,68,43,"x0"],[79,14,68,55],[79,22,68,43,"x0"],[79,24,68,55],[80,0,68,55],[80,12,68,47,"y0"],[80,14,68,55],[80,22,68,47,"y0"],[80,24,68,55],[81,0,68,55],[81,34,69,61],[81,40,69,66,"prevTouchInfo"],[81,53,68,55],[82,0,68,55],[82,12,69,15,"prevTouchX"],[82,22,68,55],[82,45,69,15,"prevTouchX"],[82,55,68,55],[83,0,68,55],[83,12,69,27,"prevTouchY"],[83,22,68,55],[83,45,69,27,"prevTouchY"],[83,55,68,55],[84,0,68,55],[84,12,69,39,"prevTouchTimeStamp"],[84,30,68,55],[84,53,69,39,"prevTouchTimeStamp"],[84,71,68,55],[85,0,70,8],[85,12,70,14,"dt"],[85,17,70,19,"currentTouchTimeStamp"],[85,41,70,43,"prevTouchTimeStamp"],[85,59,70,8],[86,0,68,55],[86,26,71,32],[86,32,71,37,"props"],[86,37,68,55],[87,0,68,55],[87,12,71,15,"delay"],[87,17,68,55],[87,32,71,15,"delay"],[87,37,68,55],[88,0,68,55],[88,12,71,22,"radius"],[88,18,68,55],[88,33,71,22,"radius"],[88,39,68,55],[89,0,73,8],[89,15,73,16,"prevTouchTimeStamp"],[89,36,73,37],[89,37,73,16],[89,41,73,42,"dt"],[89,46,73,47,"delay"],[89,51,73,16],[89,55,73,56],[89,61,73,61,"distance"],[89,69,73,56],[89,70,73,70,"prevTouchX"],[89,80,73,56],[89,82,73,82,"prevTouchY"],[89,92,73,56],[89,94,73,94,"x0"],[89,96,73,56],[89,98,73,98,"y0"],[89,100,73,56],[89,104,73,104,"radius"],[89,110,73,8],[90,0,74,5],[90,7,37,18],[92,0,37,18],[92,12,76,4,"handlePanResponderRelease"],[92,37,37,18],[92,40,76,32],[92,50,76,33,"evt"],[92,53,76,32],[92,55,76,38,"gestureState"],[92,67,76,32],[92,69,76,55],[93,0,78,8],[93,12,78,14,"currentTouchTimeStamp"],[93,36,78,38,"Date"],[93,41,78,43,"now"],[93,44,78,38],[93,46,78,8],[95,0,80,8],[95,12,80,12],[95,18,80,17,"timer"],[95,23,80,8],[95,25,80,24],[96,0,82,12],[96,14,82,16],[96,20,82,21,"isDoubleTap"],[96,31,82,16],[96,32,82,33,"currentTouchTimeStamp"],[96,53,82,16],[96,55,82,56,"gestureState"],[96,67,82,16],[96,68,82,12],[96,70,82,71],[97,0,84,16,"clearTimeout"],[97,25,84,29],[97,31,84,34,"timer"],[97,36,84,16],[98,0,85,16],[98,18,85,21,"timer"],[98,23,85,16],[98,26,85,29],[98,30,85,16],[100,0,86,16],[100,18,86,21,"props"],[100,23,86,16],[100,24,86,27,"onDoubleTap"],[100,35,86,16],[101,0,88,13],[101,11,82,12],[101,17,88,19],[102,0,88,19],[102,39,90,69],[102,45,90,74,"prevTouchInfo"],[102,58,88,19],[103,0,88,19],[103,16,90,23,"prevTouchX"],[103,26,88,19],[103,50,90,23,"prevTouchX"],[103,60,88,19],[104,0,88,19],[104,16,90,35,"prevTouchY"],[104,26,88,19],[104,50,90,35,"prevTouchY"],[104,60,88,19],[105,0,88,19],[105,16,90,47,"prevTouchTimeStamp"],[105,34,88,19],[105,58,90,47,"prevTouchTimeStamp"],[105,76,88,19],[106,0,88,19],[106,16,91,23,"radius"],[106,22,88,19],[106,25,91,33],[106,31,91,38,"props"],[106,36,88,19],[106,37,91,23,"radius"],[106,43,88,19],[108,0,94,16],[108,16,94,20],[108,22,94,25,"distance"],[108,30,94,20],[108,31,94,34,"prevTouchX"],[108,41,94,20],[108,43,94,46,"prevTouchY"],[108,53,94,20],[108,55,94,58,"gestureState"],[108,68,94,71,"x0"],[108,70,94,20],[108,72,94,75,"gestureState"],[108,85,94,88,"y0"],[108,87,94,20],[108,91,94,94,"radius"],[108,97,94,16],[108,99,94,102],[109,0,95,20],[109,20,95,25,"timer"],[109,25,95,20],[109,28,95,33],[109,32,95,20],[111,0,96,20],[111,20,96,25,"props"],[111,25,96,20],[111,26,96,31,"onSingleTap"],[111,37,96,20],[112,0,97,17],[113,0,99,13],[114,0,100,9],[114,9,80,8],[114,15,100,15],[115,0,102,12],[115,14,102,16],[115,20,102,21,"distance"],[115,28,102,16],[115,29,102,30],[115,30,102,16],[115,32,102,33,"gestureState"],[115,45,102,46,"dx"],[115,47,102,16],[115,49,102,50],[115,50,102,16],[115,52,102,53,"gestureState"],[115,65,102,66,"dy"],[115,67,102,16],[115,71,102,72],[115,73,102,12],[115,75,102,76],[116,0,104,16],[116,18,104,21,"timer"],[116,23,104,16],[116,26,104,29,"setTimeout"],[116,37,104,40],[116,49,104,46],[117,0,105,20],[117,20,105,25,"props"],[117,25,105,20],[117,26,105,31,"onSingleTap"],[117,37,105,20],[119,0,106,20],[119,20,106,25,"timer"],[119,25,106,20],[119,28,106,33],[119,32,106,20],[120,0,107,17],[120,13,104,29],[120,15,107,19],[120,21,107,24,"props"],[120,26,107,19],[120,27,107,30,"delay"],[120,32,104,29],[120,33,104,16],[121,0,108,13],[122,0,109,9],[124,0,112,8],[124,14,112,13,"prevTouchInfo"],[124,27,112,8],[124,30,112,29],[125,0,113,12,"prevTouchX"],[125,22,113,24,"gestureState"],[125,35,113,37,"x0"],[125,37,112,29],[126,0,114,12,"prevTouchY"],[126,22,114,24,"gestureState"],[126,35,114,37,"y0"],[126,37,112,29],[127,0,115,12,"prevTouchTimeStamp"],[127,30,115,32,"currentTouchTimeStamp"],[128,0,112,29],[128,9,112,8],[129,0,118,5],[129,7,37,18],[131,0,40,8],[131,12,40,13,"gestureHandlers"],[131,27,40,8],[131,30,40,31],[131,32,40,8],[132,0,42,8],[132,12,42,13,"prevTouchInfo"],[132,25,42,8],[132,28,42,29],[133,0,43,12,"prevTouchX"],[133,20,43,24],[133,21,42,29],[134,0,44,12,"prevTouchY"],[134,20,44,24],[134,21,42,29],[135,0,45,12,"prevTouchTimeStamp"],[135,28,45,32],[136,0,42,29],[136,7,42,8],[137,0,48,8],[137,12,48,13,"timer"],[137,17,48,8],[137,20,48,21],[137,24,48,8],[138,0,37,18],[139,0,50,5],[143,43,52,25],[144,0,53,8],[144,13,53,13,"gestureHandlers"],[144,28,53,8],[144,31,53,31,"PanResponder"],[144,57,53,44,"create"],[144,63,53,31],[144,64,53,51],[145,0,54,12,"onStartShouldSetPanResponder"],[145,40,54,42],[145,78,54,43,"evt"],[145,81,54,42],[145,83,54,48,"gestureState"],[145,95,54,42],[146,0,54,42],[146,19,54,66,"gestureState"],[146,32,54,79,"numberActiveTouches"],[146,51,54,66],[146,56,54,103],[146,57,54,42],[147,0,54,42],[147,11,53,51],[148,0,55,12,"onStartShouldSetResponderCapture"],[148,44,55,46],[148,86,55,47,"evt"],[148,89,55,46],[148,91,55,52,"gestureState"],[148,103,55,46],[149,0,55,46],[149,19,55,70,"gestureState"],[149,32,55,83,"numberActiveTouches"],[149,51,55,70],[149,56,55,107],[149,57,55,46],[150,0,55,46],[150,11,53,51],[151,0,56,12,"onMoveShouldSetPanResponder"],[151,39,56,41],[151,76,56,42,"evt"],[151,79,56,41],[151,81,56,47,"gestureState"],[151,93,56,41],[152,0,56,41],[152,19,56,65],[152,24,56,41],[153,0,56,41],[153,11,53,51],[154,0,57,12,"onMoveShouldSetResponderCapture"],[154,43,57,45],[154,84,57,46,"evt"],[154,87,57,45],[154,89,57,51,"gestureState"],[154,101,57,45],[155,0,57,45],[155,19,57,69],[155,24,57,45],[156,0,57,45],[156,11,53,51],[157,0,58,12,"onPanResponderTerminationRequest"],[157,44,58,46],[157,86,58,47,"evt"],[157,89,58,46],[157,91,58,52,"gestureState"],[157,103,58,46],[158,0,58,46],[158,19,58,69],[158,24,58,46],[159,0,58,46],[159,11,53,51],[160,0,59,12,"onPanResponderRelease"],[160,33,59,35],[160,38,59,40,"handlePanResponderRelease"],[161,0,53,51],[161,9,53,31],[161,10,53,8],[162,0,62,5],[165,31,120,13],[166,0,121,8],[166,15,122,12],[166,44,122,13],[166,61,122,12],[166,76,122,22],[166,81,122,27,"props"],[166,86,122,12],[166,88,122,38],[166,93,122,43,"gestureHandlers"],[166,108,122,38],[166,109,122,59,"panHandlers"],[166,120,122,12],[167,0,122,12],[168,0,122,12],[169,0,122,12],[170,0,122,12],[171,0,122,12],[171,12,123,17],[171,17,123,22,"props"],[171,22,123,17],[171,23,123,28,"children"],[171,31,122,12],[171,32,121,8],[172,0,126,5],[178,4,18,43,"Component"],[178,20],[178,30,20,11,"propTypes"],[178,39],[178,60,21,11,"ViewPropTypes"],[178,86],[179,0,22,8,"delay"],[179,11,22,15,"PropTypes"],[179,30,22,25,"number"],[179,36],[180,0,23,8,"radius"],[180,12,23,16,"PropTypes"],[180,31,23,26,"number"],[180,37],[181,0,24,8,"onSingleTap"],[181,17,24,21,"PropTypes"],[181,36,24,31,"func"],[181,40],[182,0,25,8,"onDoubleTap"],[182,17,25,21,"PropTypes"],[182,36,25,31,"func"],[183,13,28,11,"defaultProps"],[183,25],[183,28,28,26],[184,0,29,8,"delay"],[184,11,29,15],[184,14,28,26],[185,0,30,8,"radius"],[185,12,30,16],[185,14,28,26],[186,0,31,8,"onSingleTap"],[186,17,31,21],[186,40,31,27],[186,41,32,9],[186,42,28,26],[187,0,33,8,"onDoubleTap"],[187,17,33,21],[187,40,33,27],[187,41,34,9],[188,0,28,26],[188,3]]},"type":"js/module"}]}