{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../node_modules/react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"./HomeScreen","isAsync":false},{"name":"./Profile","isAsync":false},{"name":"./Menu","isAsync":false},{"name":"./Notification","isAsync":false},{"name":"react-navigation","isAsync":false},{"name":"react-native-router-flux","isAsync":false},{"name":"../../assets/account-hover.png","isAsync":false},{"name":"../../assets/account.png","isAsync":false},{"name":"../../assets/appointment-hover.png","isAsync":false},{"name":"../../assets/appointment.png","isAsync":false},{"name":"../../assets/customerservice-hover.png","isAsync":false},{"name":"../../assets/customerservice.png","isAsync":false},{"name":"../../assets/IDcard-hover.png","isAsync":false},{"name":"../../assets/IDcardnew.png","isAsync":false},{"name":"../../assets/telemedicine-hover.png","isAsync":false},{"name":"../../assets/telemedicine.png","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _HomeScreen = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./HomeScreen\"));\n\n  var _Profile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./Profile\"));\n\n  var _Menu = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./Menu\"));\n\n  var _Notification = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./Notification\"));\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[7], \"react-navigation\");\n\n  var _reactNativeRouterFlux = _$$_REQUIRE(_dependencyMap[8], \"react-native-router-flux\");\n\n  var _jsxFileName = \"/var/www/html/thg/src/components/CustomFooter.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    CustomFooter: {\n      displayName: \"CustomFooter\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/var/www/html/thg/src/components/CustomFooter.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var CustomFooter = function (_Component) {\n    function CustomFooter(props) {\n      var _this;\n\n      _classCallCheck(this, CustomFooter);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomFooter).call(this, props));\n\n      _this.clickToAccountInfo = function () {\n        _reactNativeRouterFlux.Actions.AccountInfo({\n          userData: _this.state.arrayValue,\n          isFromVendor: false\n        });\n      };\n\n      _this.clickToAppointment = function () {\n        _reactNativeRouterFlux.Actions.Appointments({\n          isViewAppointments: true,\n          isEnableTele: _this.state.telemedicine\n        });\n      };\n\n      _this.clickToCustomerService = function () {\n        _reactNativeRouterFlux.Actions.CustomerServices({\n          phoneNumber: _this.state.arrayValue[0].customerServicePhone\n        });\n      };\n\n      _this.clickToIDCard = function () {\n        _reactNativeRouterFlux.Actions.IDCard();\n      };\n\n      _this.clickToIDTelemedicine = function () {\n        _reactNativeRouterFlux.Actions.Telemedicine({\n          isEnableTele: _this.state.telemedicine\n        });\n      };\n\n      _this.props = props;\n\n      _reactNative.AsyncStorage.getItem('profileArray').then(function (contacts) {\n        var value = contacts ? JSON.parse(contacts) : [];\n        console.log(value);\n\n        _this.setState({\n          arrayValue: value\n        });\n      });\n\n      _this.state = {\n        count: 0,\n        isAppointment: _this.props.isAppointment,\n        isAccount: _this.props.isAccount,\n        isIDCard: _this.props.isIDCard,\n        isTelemedicine: _this.props.isTelemedicine,\n        arrayValue: [],\n        isCustomerService: _this.props.isCustomerService\n      };\n      return _this;\n    }\n\n    _createClass(CustomFooter, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        var _this2 = this;\n\n        _reactNative.AsyncStorage.getItem('profileArray').then(function (contacts) {\n          var value = contacts ? JSON.parse(contacts) : [];\n          console.log(value);\n\n          _this2.setState({\n            arrayValue: value\n          });\n        });\n\n        _reactNative.AsyncStorage.getItem('isTelemedicineEnable').then(function (value) {\n          _this2.setState({\n            telemedicine: value\n          });\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$state = this.state,\n            isAppointment = _this$state.isAppointment,\n            isAccount = _this$state.isAccount,\n            isCustomerService = _this$state.isCustomerService,\n            isIDCard = _this$state.isIDCard,\n            isTelemedicine = _this$state.isTelemedicine;\n        console.log(isAccount);\n        return _react.default.createElement(_reactNative.View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: styles.footerView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.clickToAccountInfo,\n          style: {\n            width: '20%',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          }\n        }, isAccount === true ? _react.default.createElement(_reactNative.Image, {\n          source: _$$_REQUIRE(_dependencyMap[9], '../../assets/account-hover.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          }\n        }) : _react.default.createElement(_reactNative.Image, {\n          source: _$$_REQUIRE(_dependencyMap[10], '../../assets/account.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          }\n        }), isAccount === true ? _react.default.createElement(_reactNative.Text, {\n          style: styles.textStyleSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          }\n        }, \"Account\") : _react.default.createElement(_reactNative.Text, {\n          style: styles.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          }\n        }, \"Account\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.clickToAppointment,\n          style: {\n            width: '20%',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          }\n        }, isAppointment === true ? _react.default.createElement(_reactNative.Image, {\n          source: _$$_REQUIRE(_dependencyMap[11], '../../assets/appointment-hover.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          }\n        }) : _react.default.createElement(_reactNative.Image, {\n          source: _$$_REQUIRE(_dependencyMap[12], '../../assets/appointment.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          }\n        }), isAppointment === true ? _react.default.createElement(_reactNative.Text, {\n          style: styles.textStyleSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          }\n        }, \"Appointments\") : _react.default.createElement(_reactNative.Text, {\n          style: styles.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          }\n        }, \"Appointments\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.clickToCustomerService,\n          style: {\n            width: '20%',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          }\n        }, isCustomerService === true ? _react.default.createElement(_reactNative.Image, {\n          source: _$$_REQUIRE(_dependencyMap[13], '../../assets/customerservice-hover.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          }\n        }) : _react.default.createElement(_reactNative.Image, {\n          source: _$$_REQUIRE(_dependencyMap[14], '../../assets/customerservice.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          }\n        }), isCustomerService === true ? _react.default.createElement(_reactNative.Text, {\n          style: styles.textStyleSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          }\n        }, \"Service\") : _react.default.createElement(_reactNative.Text, {\n          style: styles.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          }\n        }, \"Service\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.clickToIDCard,\n          style: {\n            width: '20%',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          }\n        }, isIDCard === true ? _react.default.createElement(_reactNative.Image, {\n          source: _$$_REQUIRE(_dependencyMap[15], '../../assets/IDcard-hover.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          }\n        }) : _react.default.createElement(_reactNative.Image, {\n          source: _$$_REQUIRE(_dependencyMap[16], '../../assets/IDcardnew.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          }\n        }), isIDCard === true ? _react.default.createElement(_reactNative.Text, {\n          style: styles.textStyleSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          }\n        }, \"ID Card\") : _react.default.createElement(_reactNative.Text, {\n          style: styles.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          }\n        }, \"ID Card\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.clickToIDTelemedicine,\n          style: {\n            width: '20%',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          }\n        }, isTelemedicine === true ? _react.default.createElement(_reactNative.Image, {\n          source: _$$_REQUIRE(_dependencyMap[17], '../../assets/telemedicine-hover.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          }\n        }) : _react.default.createElement(_reactNative.Image, {\n          source: _$$_REQUIRE(_dependencyMap[18], '../../assets/telemedicine.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          }\n        }), isTelemedicine === true ? _react.default.createElement(_reactNative.Text, {\n          style: styles.textStyleSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          }\n        }, \"Telemedicine\") : _react.default.createElement(_reactNative.Text, {\n          style: styles.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          }\n        }, \"Telemedicine\"))));\n      }\n    }]);\n\n    _inherits(CustomFooter, _Component);\n\n    return CustomFooter;\n  }(_react.Component);\n\n  CustomFooter = _wrapComponent(\"CustomFooter\")(CustomFooter);\n  var styles = {\n    footerView: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginTop: 0,\n      padding: 5,\n      height: 50,\n      bottom: 0,\n      backgroundColor: '#ffffff'\n    },\n    shadow1: {\n      marginBottom: 2,\n      padding: 0,\n      alignItems: 'center'\n    },\n    textStyle: {\n      fontSize: 10,\n      color: '#333'\n    },\n    textStyleSelected: {\n      fontSize: 10,\n      color: '#00dcc3'\n    }\n  };\n  var _default2 = CustomFooter;\n  exports.default = _default2;\n});","map":[[7,0,7,0],[11,0,8,0],[13,0,9,0],[15,0,10,0],[17,0,11,0],[19,0,12,0],[21,0,13,0],[23,0,14,0],[66,6,16,6,"CustomFooter"],[66,18],[67,0,20,4],[67,26,20,16,"props"],[67,31,20,4],[67,33,20,23],[68,0,20,23],[70,0,20,23],[72,0,21,8],[72,88,21,14,"props"],[72,93,21,8],[74,0,20,23],[74,12,62,4,"clickToAccountInfo"],[74,30,20,23],[74,33,62,25],[74,45,62,31],[75,0,63,8,"Actions"],[75,39,63,16,"AccountInfo"],[75,50,63,8],[75,51,63,28],[76,0,63,29,"userData"],[76,20,63,39],[76,26,63,44,"state"],[76,31,63,39],[76,32,63,50,"arrayValue"],[76,42,63,28],[77,0,63,61,"isFromVendor"],[77,24,63,74],[78,0,63,28],[78,9,63,8],[79,0,66,5],[79,7,20,23],[81,0,20,23],[81,12,72,4,"clickToAppointment"],[81,30,20,23],[81,33,72,25],[81,45,72,31],[82,0,73,8,"Actions"],[82,39,73,16,"Appointments"],[82,51,73,8],[82,52,73,29],[83,0,73,30,"isViewAppointments"],[83,30,73,49],[83,34,73,29],[84,0,73,54,"isEnableTele"],[84,24,73,67],[84,30,73,72,"state"],[84,35,73,67],[84,36,73,78,"telemedicine"],[85,0,73,29],[85,9,73,8],[86,0,74,5],[86,7,20,23],[88,0,20,23],[88,12,78,4,"clickToCustomerService"],[88,34,20,23],[88,37,78,29],[88,49,78,35],[89,0,80,10,"Actions"],[89,39,80,18,"CustomerServices"],[89,55,80,10],[89,56,80,35],[90,0,80,36,"phoneNumber"],[90,23,80,49],[90,29,80,54,"state"],[90,34,80,49],[90,35,80,60,"arrayValue"],[90,45,80,49],[90,46,80,71],[90,47,80,49],[90,49,80,74,"customerServicePhone"],[91,0,80,35],[91,9,80,10],[92,0,81,5],[92,7,20,23],[94,0,20,23],[94,12,85,4,"clickToIDCard"],[94,25,20,23],[94,28,85,20],[94,40,85,26],[95,0,86,8,"Actions"],[95,39,86,16,"IDCard"],[95,45,86,8],[96,0,88,5],[96,7,20,23],[98,0,20,23],[98,12,93,4,"clickToIDTelemedicine"],[98,33,20,23],[98,36,93,28],[98,48,93,34],[99,0,94,8,"Actions"],[99,39,94,16,"Telemedicine"],[99,51,94,8],[99,52,94,29],[100,0,94,30,"isEnableTele"],[100,24,94,43],[100,30,94,48,"state"],[100,35,94,43],[100,36,94,54,"telemedicine"],[101,0,94,29],[101,9,94,8],[102,0,96,5],[102,7,20,23],[104,0,22,8],[104,12,22,13,"props"],[104,17,22,8],[104,20,22,21,"props"],[104,25,22,8],[106,0,23,8,"AsyncStorage"],[106,32,23,21,"getItem"],[106,39,23,8],[106,40,23,29],[106,54,23,8],[106,56,24,17,"then"],[106,60,23,8],[106,61,24,22],[106,71,24,23,"contacts"],[106,79,24,22],[106,81,24,36],[107,0,25,20],[107,12,25,26,"value"],[107,20,25,34,"contacts"],[107,31,25,45,"JSON"],[107,36,25,50,"parse"],[107,41,25,45],[107,42,25,56,"contacts"],[107,50,25,45],[107,51,25,34],[107,54,25,68],[107,56,25,20],[108,0,26,20,"console"],[108,16,26,28,"log"],[108,19,26,20],[108,20,26,32,"value"],[108,25,26,20],[110,0,27,20],[110,14,27,25,"setState"],[110,22,27,20],[110,23,27,34],[111,0,27,35,"arrayValue"],[111,22,27,47,"value"],[112,0,27,34],[112,9,27,20],[113,0,28,17],[113,7,23,8],[115,0,29,8],[115,12,29,13,"state"],[115,17,29,8],[115,20,29,21],[116,0,29,22,"count"],[116,15,29,29],[116,16,29,21],[117,0,30,12,"isAppointment"],[117,23,30,27],[117,29,30,32,"props"],[117,34,30,27],[117,35,30,38,"isAppointment"],[117,48,29,21],[118,0,31,12,"isAccount"],[118,19,31,24],[118,25,31,29,"props"],[118,30,31,24],[118,31,31,35,"isAccount"],[118,40,29,21],[119,0,32,12,"isIDCard"],[119,18,32,22],[119,24,32,27,"props"],[119,29,32,22],[119,30,32,33,"isIDCard"],[119,38,29,21],[120,0,33,12,"isTelemedicine"],[120,24,33,27],[120,30,33,32,"props"],[120,35,33,27],[120,36,33,38,"isTelemedicine"],[120,50,29,21],[121,0,34,12,"arrayValue"],[121,20,34,23],[121,22,29,21],[122,0,35,12,"isCustomerService"],[122,27,35,32],[122,33,35,37,"props"],[122,38,35,32],[122,39,35,43,"isCustomerService"],[123,0,29,21],[123,7,29,8],[124,0,20,23],[125,0,37,5],[129,43,43,25],[130,0,43,25],[132,0,46,6,"AsyncStorage"],[132,34,46,19,"getItem"],[132,41,46,6],[132,42,46,27],[132,56,46,6],[132,58,47,15,"then"],[132,62,46,6],[132,63,47,20],[132,73,47,21,"contacts"],[132,81,47,20],[132,83,47,34],[133,0,48,18],[133,14,48,24,"value"],[133,22,48,32,"contacts"],[133,33,48,43,"JSON"],[133,38,48,48,"parse"],[133,43,48,43],[133,44,48,54,"contacts"],[133,52,48,43],[133,53,48,32],[133,56,48,66],[133,58,48,18],[134,0,49,18,"console"],[134,18,49,26,"log"],[134,21,49,18],[134,22,49,30,"value"],[134,27,49,18],[136,0,50,18],[136,17,50,23,"setState"],[136,25,50,18],[136,26,50,32],[137,0,50,33,"arrayValue"],[137,24,50,45,"value"],[138,0,50,32],[138,11,50,18],[139,0,51,15],[139,9,46,6],[141,0,52,6,"AsyncStorage"],[141,34,52,19,"getItem"],[141,41,52,6],[141,42,52,27],[141,64,52,6],[141,66,53,15,"then"],[141,70,52,6],[141,71,53,20],[141,81,53,21,"value"],[141,86,53,20],[141,88,53,31],[142,0,56,18],[142,17,56,23,"setState"],[142,25,56,18],[142,26,56,32],[143,0,56,33,"telemedicine"],[143,26,56,47,"value"],[144,0,56,32],[144,11,56,18],[145,0,57,15],[145,9,52,6],[146,0,58,5],[149,31,100,13],[150,0,100,13],[150,26,103,12],[150,31,103,17,"state"],[150,36,100,13],[151,0,100,13],[151,12,102,12,"isAppointment"],[151,25,100,13],[151,40,102,12,"isAppointment"],[151,53,100,13],[152,0,100,13],[152,12,102,27,"isAccount"],[152,21,100,13],[152,36,102,27,"isAccount"],[152,45,100,13],[153,0,100,13],[153,12,102,39,"isCustomerService"],[153,29,100,13],[153,44,102,39,"isCustomerService"],[153,61,100,13],[154,0,100,13],[154,12,102,59,"isIDCard"],[154,20,100,13],[154,35,102,59,"isIDCard"],[154,43,100,13],[155,0,100,13],[155,12,102,70,"isTelemedicine"],[155,26,100,13],[155,41,102,70,"isTelemedicine"],[155,55,100,13],[156,0,105,8,"console"],[156,16,105,16,"log"],[156,19,105,8],[156,20,105,20,"isAccount"],[156,29,105,8],[157,0,106,8],[157,15,107,16],[157,44,107,17],[157,61,107,16],[158,0,107,16],[159,0,107,16],[160,0,107,16],[161,0,107,16],[162,0,107,16],[162,11,109,20],[162,40,109,21],[162,57,109,20],[163,0,109,26],[163,17,109,33,"styles"],[163,24,109,40,"footerView"],[163,34,109,20],[164,0,109,20],[165,0,109,20],[166,0,109,20],[167,0,109,20],[168,0,109,20],[168,11,111,24],[168,40,111,25],[168,69,111,24],[169,0,112,28],[169,19,112,37],[169,24,112,42,"clickToAccountInfo"],[169,42,111,24],[170,0,113,28],[170,17,113,35],[171,0,113,36,"width"],[171,19,113,42],[171,24,113,35],[172,0,113,48,"justifyContent"],[172,28,113,63],[172,36,113,35],[173,0,113,72,"alignItems"],[173,24,113,83],[174,0,113,35],[174,11,111,24],[175,0,111,24],[176,0,111,24],[177,0,111,24],[178,0,111,24],[179,0,111,24],[179,11,117,33,"isAccount"],[179,25,117,48],[179,29,117,32],[179,32,117,56],[179,61,117,57],[179,79,117,56],[180,0,117,63],[180,18,117,71,"require"],[180,49,117,79],[180,81,117,71],[180,82,117,56],[181,0,117,56],[182,0,117,56],[183,0,117,56],[184,0,117,56],[185,0,117,56],[185,10,117,32],[185,13,117,119],[185,42,117,120],[185,60,117,119],[186,0,117,126],[186,18,117,134,"require"],[186,50,117,142],[186,76,117,134],[186,77,117,119],[187,0,117,119],[188,0,117,119],[189,0,117,119],[190,0,117,119],[191,0,117,119],[191,10,111,24],[191,12,121,32,"isAccount"],[191,26,121,47],[191,30,121,31],[191,33,121,57],[191,62,121,58],[191,79,121,57],[192,0,121,63],[192,17,121,70,"styles"],[192,24,121,77,"textStyleSelected"],[192,41,121,57],[193,0,121,57],[194,0,121,57],[195,0,121,57],[196,0,121,57],[197,0,121,57],[197,21,121,31],[197,24,121,115],[197,53,121,116],[197,70,121,115],[198,0,121,121],[198,17,121,128,"styles"],[198,24,121,135,"textStyle"],[198,33,121,115],[199,0,121,115],[200,0,121,115],[201,0,121,115],[202,0,121,115],[203,0,121,115],[203,21,111,24],[203,22,109,20],[203,24,129,24],[203,53,129,25],[203,82,129,24],[204,0,130,28],[204,19,130,37],[204,24,130,42,"clickToAppointment"],[204,42,129,24],[205,0,131,30],[205,17,131,37],[206,0,131,38,"width"],[206,19,131,44],[206,24,131,37],[207,0,131,50,"justifyContent"],[207,28,131,65],[207,36,131,37],[208,0,131,74,"alignItems"],[208,24,131,85],[209,0,131,37],[209,11,129,24],[210,0,129,24],[211,0,129,24],[212,0,129,24],[213,0,129,24],[214,0,129,24],[214,11,136,31,"isAppointment"],[214,29,136,49],[214,33,136,30],[214,36,136,57],[214,65,136,58],[214,83,136,57],[215,0,136,64],[215,18,136,72,"require"],[215,50,136,80],[215,86,136,72],[215,87,136,57],[216,0,136,57],[217,0,136,57],[218,0,136,57],[219,0,136,57],[220,0,136,57],[220,10,136,30],[220,13,136,124],[220,42,136,125],[220,60,136,124],[221,0,136,131],[221,18,136,139,"require"],[221,50,136,147],[221,80,136,139],[221,81,136,124],[222,0,136,124],[223,0,136,124],[224,0,136,124],[225,0,136,124],[226,0,136,124],[226,10,129,24],[226,12,139,32,"isAppointment"],[226,30,139,51],[226,34,139,31],[226,37,139,61],[226,66,139,62],[226,83,139,61],[227,0,139,67],[227,17,139,74,"styles"],[227,24,139,81,"textStyleSelected"],[227,41,139,61],[228,0,139,61],[229,0,139,61],[230,0,139,61],[231,0,139,61],[232,0,139,61],[232,26,139,31],[232,29,139,124],[232,58,139,125],[232,75,139,124],[233,0,139,130],[233,17,139,137,"styles"],[233,24,139,144,"textStyle"],[233,33,139,124],[234,0,139,124],[235,0,139,124],[236,0,139,124],[237,0,139,124],[238,0,139,124],[238,26,129,24],[238,27,109,20],[238,29,145,24],[238,58,145,25],[238,87,145,24],[239,0,146,28],[239,19,146,37],[239,24,146,42,"clickToCustomerService"],[239,46,145,24],[240,0,147,30],[240,17,147,37],[241,0,147,38,"width"],[241,19,147,44],[241,24,147,37],[242,0,147,50,"justifyContent"],[242,28,147,65],[242,36,147,37],[243,0,147,74,"alignItems"],[243,24,147,85],[244,0,147,37],[244,11,145,24],[245,0,145,24],[246,0,145,24],[247,0,145,24],[248,0,145,24],[249,0,145,24],[249,11,151,32,"isCustomerService"],[249,33,151,55],[249,37,151,31],[249,40,151,63],[249,69,151,64],[249,87,151,63],[250,0,151,70],[250,18,151,78,"require"],[250,50,151,86],[250,90,151,78],[250,91,151,63],[251,0,151,63],[252,0,151,63],[253,0,151,63],[254,0,151,63],[255,0,151,63],[255,10,151,31],[255,13,151,134],[255,42,151,135],[255,60,151,134],[256,0,151,141],[256,18,151,149,"require"],[256,50,151,157],[256,84,151,149],[256,85,151,134],[257,0,151,134],[258,0,151,134],[259,0,151,134],[260,0,151,134],[261,0,151,134],[261,10,145,24],[261,12,155,30,"isCustomerService"],[261,34,155,53],[261,38,155,29],[261,41,155,63],[261,70,155,64],[261,87,155,63],[262,0,155,69],[262,17,155,76,"styles"],[262,24,155,83,"textStyleSelected"],[262,41,155,63],[263,0,155,63],[264,0,155,63],[265,0,155,63],[266,0,155,63],[267,0,155,63],[267,21,155,29],[267,24,155,121],[267,53,155,122],[267,70,155,121],[268,0,155,127],[268,17,155,134,"styles"],[268,24,155,141,"textStyle"],[268,33,155,121],[269,0,155,121],[270,0,155,121],[271,0,155,121],[272,0,155,121],[273,0,155,121],[273,21,145,24],[273,22,109,20],[273,24,161,24],[273,53,161,25],[273,82,161,24],[274,0,162,28],[274,19,162,37],[274,24,162,42,"clickToIDCard"],[274,37,161,24],[275,0,163,30],[275,17,163,37],[276,0,163,38,"width"],[276,19,163,44],[276,24,163,37],[277,0,163,50,"justifyContent"],[277,28,163,65],[277,36,163,37],[278,0,163,74,"alignItems"],[278,24,163,85],[279,0,163,37],[279,11,161,24],[280,0,161,24],[281,0,161,24],[282,0,161,24],[283,0,161,24],[284,0,161,24],[284,11,167,31,"isIDCard"],[284,24,167,44],[284,28,167,30],[284,31,167,52],[284,60,167,53],[284,78,167,52],[285,0,167,59],[285,18,167,67,"require"],[285,50,167,75],[285,81,167,67],[285,82,167,52],[286,0,167,52],[287,0,167,52],[288,0,167,52],[289,0,167,52],[290,0,167,52],[290,10,167,30],[290,13,167,114],[290,42,167,115],[290,60,167,114],[291,0,167,121],[291,18,167,129,"require"],[291,50,167,137],[291,78,167,129],[291,79,167,114],[292,0,167,114],[293,0,167,114],[294,0,167,114],[295,0,167,114],[296,0,167,114],[296,10,161,24],[296,12,170,29,"isIDCard"],[296,25,170,43],[296,29,170,28],[296,32,170,53],[296,61,170,54],[296,78,170,53],[297,0,170,59],[297,17,170,66,"styles"],[297,24,170,73,"textStyleSelected"],[297,41,170,53],[298,0,170,53],[299,0,170,53],[300,0,170,53],[301,0,170,53],[302,0,170,53],[302,21,170,28],[302,24,170,111],[302,53,170,112],[302,70,170,111],[303,0,170,117],[303,17,170,124,"styles"],[303,24,170,131,"textStyle"],[303,33,170,111],[304,0,170,111],[305,0,170,111],[306,0,170,111],[307,0,170,111],[308,0,170,111],[308,21,161,24],[308,22,109,20],[308,24,173,24],[308,53,173,25],[308,82,173,24],[309,0,174,28],[309,19,174,37],[309,24,174,42,"clickToIDTelemedicine"],[309,45,173,24],[310,0,175,30],[310,17,175,37],[311,0,175,38,"width"],[311,19,175,44],[311,24,175,37],[312,0,175,50,"justifyContent"],[312,28,175,65],[312,36,175,37],[313,0,175,74,"alignItems"],[313,24,175,85],[314,0,175,37],[314,11,173,24],[315,0,173,24],[316,0,173,24],[317,0,173,24],[318,0,173,24],[319,0,173,24],[319,11,179,31,"isTelemedicine"],[319,30,179,50],[319,34,179,30],[319,37,179,58],[319,66,179,59],[319,84,179,58],[320,0,179,65],[320,18,179,73,"require"],[320,50,179,81],[320,87,179,73],[320,88,179,58],[321,0,179,58],[322,0,179,58],[323,0,179,58],[324,0,179,58],[325,0,179,58],[325,10,179,30],[325,13,179,126],[325,42,179,127],[325,60,179,126],[326,0,179,133],[326,18,179,141,"require"],[326,50,179,149],[326,81,179,141],[326,82,179,126],[327,0,179,126],[328,0,179,126],[329,0,179,126],[330,0,179,126],[331,0,179,126],[331,10,173,24],[331,12,182,33,"isTelemedicine"],[331,31,182,53],[331,35,182,32],[331,38,182,63],[331,67,182,64],[331,84,182,63],[332,0,182,69],[332,17,182,76,"styles"],[332,24,182,83,"textStyleSelected"],[332,41,182,63],[333,0,182,63],[334,0,182,63],[335,0,182,63],[336,0,182,63],[337,0,182,63],[337,26,182,32],[337,29,182,126],[337,58,182,127],[337,75,182,126],[338,0,182,132],[338,17,182,139,"styles"],[338,24,182,146,"textStyle"],[338,33,182,126],[339,0,182,126],[340,0,182,126],[341,0,182,126],[342,0,182,126],[343,0,182,126],[343,26,173,24],[343,27,109,20],[343,28,107,16],[343,29,106,8],[344,0,193,5],[350,4,16,27,"Component"],[350,20],[353,0,199,0],[353,6,199,6,"styles"],[353,15,199,15],[354,0,200,3,"footerView"],[354,16,200,15],[355,0,201,8,"flexDirection"],[355,21,201,23],[355,26,200,15],[356,0,202,8,"justifyContent"],[356,22,202,24],[356,37,200,15],[357,0,203,8,"marginTop"],[357,17,203,19],[357,18,200,15],[358,0,204,8,"padding"],[358,15,204,17],[358,16,200,15],[359,0,205,8,"height"],[359,14,205,15],[359,16,200,15],[360,0,206,8,"bottom"],[360,14,206,15],[360,15,200,15],[361,0,207,8,"backgroundColor"],[361,23,207,25],[362,0,200,15],[362,5,199,15],[363,0,209,4,"shadow1"],[363,13,209,13],[364,0,211,8,"marginBottom"],[364,20,211,22],[364,21,209,13],[365,0,212,8,"padding"],[365,15,212,17],[365,16,209,13],[366,0,213,8,"alignItems"],[366,18,213,20],[367,0,209,13],[367,5,199,15],[368,0,216,4,"textStyle"],[368,15,216,15],[369,0,217,8,"fontSize"],[369,16,217,18],[369,18,216,15],[370,0,218,8,"color"],[370,13,218,15],[371,0,216,15],[371,5,199,15],[372,0,222,4,"textStyleSelected"],[372,23,222,23],[373,0,223,8,"fontSize"],[373,16,223,18],[373,18,222,23],[374,0,224,8,"color"],[374,13,224,15],[375,0,222,23],[376,0,199,15],[376,3,199,0],[377,18,230,15,"CustomFooter"],[377,30]]},"type":"js/module"}]}