{"dependencies":[{"name":"./_baseToString","isAsync":false},{"name":"./_castSlice","isAsync":false},{"name":"./_hasUnicode","isAsync":false},{"name":"./_isIterateeCall","isAsync":false},{"name":"./isRegExp","isAsync":false},{"name":"./_stringToArray","isAsync":false},{"name":"./toString","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  var baseToString = _$$_REQUIRE(_dependencyMap[0], './_baseToString'),\n      castSlice = _$$_REQUIRE(_dependencyMap[1], './_castSlice'),\n      hasUnicode = _$$_REQUIRE(_dependencyMap[2], './_hasUnicode'),\n      isIterateeCall = _$$_REQUIRE(_dependencyMap[3], './_isIterateeCall'),\n      isRegExp = _$$_REQUIRE(_dependencyMap[4], './isRegExp'),\n      stringToArray = _$$_REQUIRE(_dependencyMap[5], './_stringToArray'),\n      toString = _$$_REQUIRE(_dependencyMap[6], './toString');\n\n  var MAX_ARRAY_LENGTH = 4294967295;\n\n  function split(string, separator, limit) {\n    if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n      separator = limit = undefined;\n    }\n\n    limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\n    if (!limit) {\n      return [];\n    }\n\n    string = toString(string);\n\n    if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {\n      separator = baseToString(separator);\n\n      if (!separator && hasUnicode(string)) {\n        return castSlice(stringToArray(string), 0, limit);\n      }\n    }\n\n    return string.split(separator, limit);\n  }\n\n  module.exports = split;\n});","map":[[2,0,1,0],[2,6,1,4,"baseToString"],[2,21,1,19,"require"],[2,52,1,27],[2,69,1,19],[2,70,1,0],[3,0,1,0],[3,6,2,4,"castSlice"],[3,18,2,16,"require"],[3,49,2,24],[3,63,2,16],[3,64,1,0],[4,0,1,0],[4,6,3,4,"hasUnicode"],[4,19,3,17,"require"],[4,50,3,25],[4,65,3,17],[4,66,1,0],[5,0,1,0],[5,6,4,4,"isIterateeCall"],[5,23,4,21,"require"],[5,54,4,29],[5,73,4,21],[5,74,1,0],[6,0,1,0],[6,6,5,4,"isRegExp"],[6,17,5,15,"require"],[6,48,5,23],[6,60,5,15],[6,61,1,0],[7,0,1,0],[7,6,6,4,"stringToArray"],[7,22,6,20,"require"],[7,53,6,28],[7,71,6,20],[7,72,1,0],[8,0,1,0],[8,6,7,4,"toString"],[8,17,7,15,"require"],[8,48,7,23],[8,60,7,15],[8,61,1,0],[10,0,10,0],[10,6,10,4,"MAX_ARRAY_LENGTH"],[10,25,10,23],[10,35,10,0],[12,0,31,0],[12,11,31,9,"split"],[12,16,31,0],[12,17,31,15,"string"],[12,23,31,0],[12,25,31,23,"separator"],[12,34,31,0],[12,36,31,34,"limit"],[12,41,31,0],[12,43,31,41],[13,0,32,2],[13,8,32,6,"limit"],[13,17,32,15],[13,24,32,22,"limit"],[13,29,32,15],[13,33,32,31],[13,41,32,6],[13,45,32,43,"isIterateeCall"],[13,60,32,58,"string"],[13,66,32,43],[13,68,32,66,"separator"],[13,77,32,43],[13,79,32,77,"limit"],[13,84,32,43],[13,85,32,2],[13,87,32,85],[14,0,33,4,"separator"],[14,18,33,16,"limit"],[14,26,33,24,"undefined"],[14,35,33,4],[15,0,34,3],[17,0,35,2,"limit"],[17,12,35,10,"limit"],[17,22,35,20,"undefined"],[17,31,35,10],[17,34,35,32,"MAX_ARRAY_LENGTH"],[17,50,35,10],[17,53,35,51,"limit"],[17,63,35,61],[17,64,35,2],[19,0,36,2],[19,8,36,6],[19,9,36,7,"limit"],[19,14,36,2],[19,16,36,14],[20,0,37,4],[20,13,37,11],[20,15,37,4],[21,0,38,3],[23,0,39,2,"string"],[23,13,39,11,"toString"],[23,22,39,20,"string"],[23,28,39,11],[23,29,39,2],[25,0,40,2],[25,8,40,6,"string"],[25,19,41,8],[25,26,41,15,"separator"],[25,35,41,8],[25,39,41,28],[25,47,41,8],[25,51,42,9,"separator"],[25,64,42,22],[25,68,42,9],[25,72,42,30],[25,73,42,31,"isRegExp"],[25,82,42,40,"separator"],[25,91,42,31],[25,92,40,6],[25,93,40,2],[25,95,43,9],[26,0,44,4,"separator"],[26,18,44,16,"baseToString"],[26,31,44,29,"separator"],[26,40,44,16],[26,41,44,4],[28,0,45,4],[28,10,45,8],[28,11,45,9,"separator"],[28,20,45,8],[28,24,45,22,"hasUnicode"],[28,35,45,33,"string"],[28,41,45,22],[28,42,45,4],[28,44,45,42],[29,0,46,6],[29,15,46,13,"castSlice"],[29,25,46,23,"stringToArray"],[29,39,46,37,"string"],[29,45,46,23],[29,46,46,13],[29,48,46,46],[29,49,46,13],[29,51,46,49,"limit"],[29,56,46,13],[29,57,46,6],[30,0,47,5],[31,0,48,3],[33,0,49,2],[33,11,49,9,"string"],[33,18,49,16,"split"],[33,23,49,9],[33,24,49,22,"separator"],[33,33,49,9],[33,35,49,33,"limit"],[33,40,49,9],[33,41,49,2],[34,0,50,1],[36,0,52,0,"module"],[36,9,52,7,"exports"],[36,16,52,0],[36,19,52,17,"split"],[36,24,52,0]]},"type":"js/module"}]}