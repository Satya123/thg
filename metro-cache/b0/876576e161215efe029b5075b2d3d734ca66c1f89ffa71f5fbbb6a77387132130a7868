{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"prop-types","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"prop-types\"));\n\n  var _jsxFileName = \"/var/www/html/thg/node_modules/react-native-movable-view/MovableView/MovableView.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    MovableView: {\n      displayName: \"MovableView\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/var/www/html/thg/node_modules/react-native-movable-view/MovableView/MovableView.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var MovableView = _wrapComponent(\"MovableView\")(function (_Component) {\n    function MovableView(props) {\n      var _this;\n\n      _classCallCheck(this, MovableView);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(MovableView).call(this, props));\n\n      _this.changeDisableStatus = function () {\n        _this.state.disabled = !_this.state.disabled;\n      };\n\n      _this.state = {\n        pan: new _reactNative.Animated.ValueXY(),\n        disabled: props.disabled,\n        xOffset: 0,\n        yOffset: 0\n      };\n      _this.panResponder = _reactNative.PanResponder.create({\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n          return !_this.state.disabled;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n          return !_this.state.disabled;\n        },\n        onPanResponderGrant: function onPanResponderGrant() {\n          _this.state.pan.setOffset({\n            x: _this.state.xOffset,\n            y: _this.state.yOffset\n          });\n\n          _this.props.onDragStart();\n        },\n        onPanResponderMove: _reactNative.Animated.event([null, {\n          dx: _this.state.pan.x,\n          dy: _this.state.pan.y\n        }]),\n        onPanResponderRelease: function onPanResponderRelease(e, gestureState) {\n          var xOffset = _this.state.xOffset + gestureState.dx;\n          var yOffset = _this.state.yOffset + gestureState.dy;\n\n          _this.setState({\n            xOffset: xOffset,\n            yOffset: yOffset\n          });\n\n          _this.props.onDragEnd();\n        }\n      });\n      return _this;\n    }\n\n    _createClass(MovableView, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        var _this2 = this;\n\n        if (typeof this.props.onMove === 'function') this.state.pan.addListener(function (values) {\n          return _this2.props.onMove(values);\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.state.pan.removeAllListeners();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return _react.default.createElement(_reactNative.Animated.View, _extends({}, this.panResponder.panHandlers, {\n          style: [this.props.style, this.state.pan.getLayout()],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          }\n        }), this.props.children);\n      }\n    }]);\n\n    _inherits(MovableView, _Component);\n\n    return MovableView;\n  }(_react.Component));\n\n  var _default2 = MovableView;\n  exports.default = _default2;\n  MovableView.propTypes = {\n    onDragStart: _propTypes.default.func,\n    onDragEnd: _propTypes.default.func,\n    onMove: _propTypes.default.func,\n    disabled: _propTypes.default.bool\n  };\n  MovableView.defaultProps = {\n    onDragStart: function onDragStart() {},\n    onDragEnd: function onDragEnd() {},\n    disabled: false\n  };\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,3,0],[59,0,6,2],[59,25,6,14,"props"],[59,30,6,2],[59,32,6,21],[60,0,6,21],[62,0,6,21],[64,0,7,4],[64,87,7,10,"props"],[64,92,7,4],[66,0,6,21],[66,12,45,2,"changeDisableStatus"],[66,31,6,21],[66,34,45,24],[66,46,45,30],[67,0,46,4],[67,14,46,9,"state"],[67,19,46,4],[67,20,46,15,"disabled"],[67,28,46,4],[67,31,46,26],[67,32,46,27],[67,38,46,32,"state"],[67,43,46,27],[67,44,46,38,"disabled"],[67,52,46,4],[68,0,47,3],[68,7,6,21],[70,0,8,4],[70,12,8,9,"state"],[70,17,8,4],[70,20,8,17],[71,0,9,6,"pan"],[71,13,9,11],[71,17,9,15,"Animated"],[71,39,9,24,"ValueXY"],[71,46,9,11],[71,48,8,17],[72,0,10,6,"disabled"],[72,18,10,16,"props"],[72,24,10,22,"disabled"],[72,32,8,17],[73,0,11,6,"xOffset"],[73,17,11,15],[73,18,8,17],[74,0,12,6,"yOffset"],[74,17,12,15],[75,0,8,17],[75,7,8,4],[76,0,15,4],[76,12,15,9,"panResponder"],[76,24,15,4],[76,27,15,24,"PanResponder"],[76,53,15,37,"create"],[76,59,15,24],[76,60,15,44],[77,0,16,6,"onMoveShouldSetPanResponder"],[77,37,16,35],[78,0,16,35],[78,17,16,41],[78,18,16,42],[78,24,16,47,"state"],[78,29,16,42],[78,30,16,53,"disabled"],[78,38,16,35],[79,0,16,35],[79,9,15,44],[80,0,17,6,"onMoveShouldSetPanResponderCapture"],[80,44,17,42],[81,0,17,42],[81,17,17,48],[81,18,17,49],[81,24,17,54,"state"],[81,29,17,49],[81,30,17,60,"disabled"],[81,38,17,42],[82,0,17,42],[82,9,15,44],[83,0,18,6,"onPanResponderGrant"],[83,29,18,27],[83,60,18,33],[84,0,19,8],[84,16,19,13,"state"],[84,21,19,8],[84,22,19,19,"pan"],[84,25,19,8],[84,26,19,23,"setOffset"],[84,35,19,8],[84,36,19,33],[85,0,19,35,"x"],[85,15,19,38],[85,21,19,43,"state"],[85,26,19,38],[85,27,19,49,"xOffset"],[85,34,19,33],[86,0,19,58,"y"],[86,15,19,61],[86,21,19,66,"state"],[86,26,19,61],[86,27,19,72,"yOffset"],[87,0,19,33],[87,11,19,8],[89,0,20,8],[89,16,20,13,"props"],[89,21,20,8],[89,22,20,19,"onDragStart"],[89,33,20,8],[90,0,21,7],[90,9,15,44],[91,0,22,6,"onPanResponderMove"],[91,28,23,8,"Animated"],[91,50,23,17,"event"],[91,55,23,8],[91,56,23,23],[91,57,23,24],[91,61,23,23],[91,63,23,30],[92,0,24,10,"dx"],[92,14,24,14],[92,20,24,19,"state"],[92,25,24,14],[92,26,24,25,"pan"],[92,29,24,14],[92,30,24,29,"x"],[92,31,23,30],[93,0,25,10,"dy"],[93,14,25,14],[93,20,25,19,"state"],[93,25,25,14],[93,26,25,25,"pan"],[93,29,25,14],[93,30,25,29,"y"],[94,0,23,30],[94,9,23,23],[94,10,23,8],[94,11,15,44],[95,0,27,6,"onPanResponderRelease"],[95,31,27,29],[95,62,27,30,"e"],[95,63,27,29],[95,65,27,33,"gestureState"],[95,77,27,29],[95,79,27,50],[96,0,28,8],[96,14,28,14,"xOffset"],[96,24,28,24],[96,30,28,29,"state"],[96,35,28,24],[96,36,28,35,"xOffset"],[96,43,28,24],[96,46,28,45,"gestureState"],[96,59,28,58,"dx"],[96,61,28,8],[97,0,29,8],[97,14,29,14,"yOffset"],[97,24,29,24],[97,30,29,29,"state"],[97,35,29,24],[97,36,29,35,"yOffset"],[97,43,29,24],[97,46,29,45,"gestureState"],[97,59,29,58,"dy"],[97,61,29,8],[99,0,30,8],[99,16,30,13,"setState"],[99,24,30,8],[99,25,30,22],[100,0,30,24,"xOffset"],[100,28,30,22],[101,0,30,34,"yOffset"],[102,0,30,22],[102,11,30,8],[104,0,31,8],[104,16,31,13,"props"],[104,21,31,8],[104,22,31,19,"onDragEnd"],[104,31,31,8],[105,0,32,7],[106,0,15,44],[106,7,15,24],[106,8,15,4],[107,0,6,21],[108,0,34,3],[112,43,36,23],[113,0,36,23],[115,0,37,4],[115,12,37,8],[115,19,37,15],[115,24,37,20,"props"],[115,29,37,15],[115,30,37,26,"onMove"],[115,36,37,8],[115,41,37,37],[115,51,37,4],[115,53,38,6],[115,58,38,11,"state"],[115,63,38,6],[115,64,38,17,"pan"],[115,67,38,6],[115,68,38,21,"addListener"],[115,79,38,6],[115,80,38,33],[115,90,38,34,"values"],[115,96,38,33],[116,0,38,33],[116,17,38,45],[116,24,38,50,"props"],[116,29,38,45],[116,30,38,56,"onMove"],[116,36,38,45],[116,37,38,63,"values"],[116,43,38,45],[116,44,38,33],[117,0,38,33],[117,9,38,6],[118,0,39,3],[121,45,41,25],[122,0,42,4],[122,13,42,9,"state"],[122,18,42,4],[122,19,42,15,"pan"],[122,22,42,4],[122,23,42,19,"removeAllListeners"],[122,41,42,4],[123,0,43,3],[126,31,49,11],[127,0,50,4],[127,15,51,6],[127,44,51,7],[127,65,51,6],[127,66,51,16],[127,70,51,6],[127,85,52,12],[127,90,52,17,"panResponder"],[127,102,52,12],[127,103,52,30,"panHandlers"],[127,114,51,6],[128,0,53,8],[128,17,53,15],[128,18,53,16],[128,23,53,21,"props"],[128,28,53,16],[128,29,53,27,"style"],[128,34,53,15],[128,36,53,34],[128,41,53,39,"state"],[128,46,53,34],[128,47,53,45,"pan"],[128,50,53,34],[128,51,53,49,"getLayout"],[128,60,53,34],[128,62,53,15],[128,63,51,6],[129,0,51,6],[130,0,51,6],[131,0,51,6],[132,0,51,6],[133,0,51,6],[133,12,55,9],[133,17,55,14,"props"],[133,22,55,9],[133,23,55,20,"children"],[133,31,51,6],[133,32,50,4],[134,0,58,3],[140,4,5,41,"Component"],[140,20],[144,0,61,0,"MovableView"],[144,14,61,12,"propTypes"],[144,23,61,0],[144,26,61,24],[145,0,62,2,"onDragStart"],[145,17,62,15,"PropTypes"],[145,36,62,25,"func"],[145,40,61,24],[146,0,63,2,"onDragEnd"],[146,15,63,13,"PropTypes"],[146,34,63,23,"func"],[146,38,61,24],[147,0,64,2,"onMove"],[147,12,64,10,"PropTypes"],[147,31,64,20,"func"],[147,35,61,24],[148,0,65,2,"disabled"],[148,14,65,12,"PropTypes"],[148,33,65,22,"bool"],[149,0,61,24],[149,3,61,0],[150,0,68,0,"MovableView"],[150,14,68,12,"defaultProps"],[150,26,68,0],[150,29,68,27],[151,0,69,2,"onDragStart"],[151,17,69,15],[151,40,69,21],[151,41,69,23],[151,42,68,27],[152,0,70,2,"onDragEnd"],[152,15,70,13],[152,36,70,19],[152,37,70,21],[152,38,68,27],[153,0,71,2,"disabled"],[153,14,71,12],[154,0,68,27],[154,3,68,0]]},"type":"js/module"}]}